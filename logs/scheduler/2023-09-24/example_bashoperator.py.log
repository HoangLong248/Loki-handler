[2023-09-24T05:13:48.250+0000] {processor.py:157} INFO - Started process (PID=30) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:13:48.252+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:13:48.259+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:13:48.259+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:13:48.424+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:13:48.556+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:13:48.555+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:13:49.486+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:13:49.486+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:13:49.652+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.426 seconds
[2023-09-24T05:14:20.033+0000] {processor.py:157} INFO - Started process (PID=92) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:14:20.034+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:14:20.037+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:14:20.036+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:14:20.055+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:14:20.242+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:14:20.241+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T05:14:20.242+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:14:20.242+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:14:20.277+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:14:20.277+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:14:20.307+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.279 seconds
[2023-09-24T05:14:50.615+0000] {processor.py:157} INFO - Started process (PID=147) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:14:50.617+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:14:50.621+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:14:50.620+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:14:50.642+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:14:50.717+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:14:50.717+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:14:50.768+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:14:50.768+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:14:50.799+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.190 seconds
[2023-09-24T05:16:30.212+0000] {processor.py:157} INFO - Started process (PID=38) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:16:30.223+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:16:30.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:16:30.237+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:16:30.337+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:16:31.038+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:16:31.037+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T05:16:31.038+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:16:31.038+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:16:31.112+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:16:31.112+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:16:31.154+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.950 seconds
[2023-09-24T05:17:01.361+0000] {processor.py:157} INFO - Started process (PID=46) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:17:01.364+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:17:01.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:17:01.369+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:17:01.420+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:17:01.547+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:17:01.546+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:17:01.618+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:17:01.618+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:17:01.683+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.328 seconds
[2023-09-24T05:17:31.866+0000] {processor.py:157} INFO - Started process (PID=54) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:17:31.867+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:17:31.870+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:17:31.870+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:17:31.897+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:17:31.962+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:17:31.962+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:17:32.005+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:17:32.004+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:17:32.042+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T05:18:02.339+0000] {processor.py:157} INFO - Started process (PID=61) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:18:02.341+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:18:02.344+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:18:02.343+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:18:02.367+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:18:02.428+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:18:02.428+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:18:02.468+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:18:02.468+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:18:02.492+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T05:18:32.636+0000] {processor.py:157} INFO - Started process (PID=69) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:18:32.637+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:18:32.640+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:18:32.640+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:18:32.664+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:18:32.727+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:18:32.727+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:18:32.767+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:18:32.766+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:18:32.789+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T05:19:02.950+0000] {processor.py:157} INFO - Started process (PID=77) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:19:02.951+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:19:02.954+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:19:02.953+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:19:02.979+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:19:03.040+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:19:03.040+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:19:03.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:19:03.085+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:19:03.107+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T05:19:33.206+0000] {processor.py:157} INFO - Started process (PID=85) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:19:33.207+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:19:33.210+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:19:33.210+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:19:33.235+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:19:33.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:19:33.298+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:19:33.338+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:19:33.338+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:19:33.362+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T05:20:03.399+0000] {processor.py:157} INFO - Started process (PID=93) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:20:03.400+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:20:03.403+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:20:03.403+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:20:03.429+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:20:03.505+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:20:03.504+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:20:03.549+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:20:03.549+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:20:03.584+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.190 seconds
[2023-09-24T05:20:33.811+0000] {processor.py:157} INFO - Started process (PID=101) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:20:33.812+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:20:33.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:20:33.815+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:20:33.839+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:20:33.899+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:20:33.899+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:20:33.940+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:20:33.939+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:20:33.964+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T05:21:04.124+0000] {processor.py:157} INFO - Started process (PID=108) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:21:04.126+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:21:04.129+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:21:04.129+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:21:04.156+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:21:04.232+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:21:04.226+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:21:04.291+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:21:04.291+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:21:04.317+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.198 seconds
[2023-09-24T05:21:34.556+0000] {processor.py:157} INFO - Started process (PID=116) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:21:34.557+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:21:34.560+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:21:34.560+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:21:34.584+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:21:34.648+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:21:34.647+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:21:34.693+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:21:34.693+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:21:34.718+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T05:22:04.958+0000] {processor.py:157} INFO - Started process (PID=124) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:22:04.959+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:22:04.962+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:22:04.962+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:22:04.989+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:22:05.054+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:22:05.054+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:22:05.092+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:22:05.092+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:22:05.115+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.161 seconds
[2023-09-24T05:22:35.184+0000] {processor.py:157} INFO - Started process (PID=132) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:22:35.185+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:22:35.189+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:22:35.189+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:22:35.216+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:22:35.287+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:22:35.287+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:22:35.334+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:22:35.333+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:22:35.362+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.183 seconds
[2023-09-24T05:23:05.470+0000] {processor.py:157} INFO - Started process (PID=140) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:23:05.472+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:23:05.476+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:23:05.476+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:23:05.499+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:23:05.561+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:23:05.561+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:23:05.625+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:23:05.624+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:23:05.670+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.205 seconds
[2023-09-24T05:23:35.842+0000] {processor.py:157} INFO - Started process (PID=147) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:23:35.845+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:23:35.851+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:23:35.850+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:23:35.880+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:23:35.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:23:35.951+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:23:36.000+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:23:36.000+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:23:36.031+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.196 seconds
[2023-09-24T05:24:06.134+0000] {processor.py:157} INFO - Started process (PID=155) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:24:06.135+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:24:06.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:24:06.138+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:24:06.161+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:24:06.224+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:24:06.223+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:24:06.262+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:24:06.262+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:24:06.287+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.159 seconds
[2023-09-24T05:24:36.344+0000] {processor.py:157} INFO - Started process (PID=162) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:24:36.344+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:24:36.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:24:36.347+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:24:36.372+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:24:36.434+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:24:36.434+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:24:36.473+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:24:36.473+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:24:36.496+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T05:25:06.613+0000] {processor.py:157} INFO - Started process (PID=170) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:25:06.615+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:25:06.618+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:25:06.618+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:25:06.641+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:25:06.704+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:25:06.703+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:25:06.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:25:06.743+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:25:06.766+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T05:25:37.068+0000] {processor.py:157} INFO - Started process (PID=178) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:25:37.068+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:25:37.072+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:25:37.072+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:25:37.097+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:25:37.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:25:37.160+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:25:37.203+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:25:37.202+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:25:37.227+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T05:26:07.354+0000] {processor.py:157} INFO - Started process (PID=186) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:26:07.355+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:26:07.359+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:26:07.358+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:26:07.389+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:26:07.457+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:26:07.457+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:26:07.499+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:26:07.499+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:26:07.524+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T05:26:37.635+0000] {processor.py:157} INFO - Started process (PID=194) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:26:37.636+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:26:37.640+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:26:37.640+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:26:37.668+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:26:37.732+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:26:37.732+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:26:37.773+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:26:37.772+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:26:37.797+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T05:27:08.059+0000] {processor.py:157} INFO - Started process (PID=202) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:27:08.060+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:27:08.063+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:27:08.063+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:27:08.091+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:27:08.153+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:27:08.153+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:27:08.196+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:27:08.195+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:27:08.220+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T05:27:38.357+0000] {processor.py:157} INFO - Started process (PID=209) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:27:38.358+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:27:38.362+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:27:38.361+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:27:38.392+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:27:38.454+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:27:38.454+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:27:38.495+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:27:38.495+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:27:38.519+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T05:28:08.586+0000] {processor.py:157} INFO - Started process (PID=217) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:28:08.587+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:28:08.592+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:28:08.591+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:28:08.616+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:28:08.685+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:28:08.684+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:28:08.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:28:08.724+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:28:08.747+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.168 seconds
[2023-09-24T05:28:38.844+0000] {processor.py:157} INFO - Started process (PID=225) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:28:38.845+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:28:38.849+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:28:38.849+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:28:38.883+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:28:38.954+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:28:38.953+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:28:39.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:28:39.000+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:28:39.028+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T05:29:48.337+0000] {processor.py:157} INFO - Started process (PID=38) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:29:48.350+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:29:48.355+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:29:48.355+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:29:48.418+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:29:49.000+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:29:48.999+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T05:29:49.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:29:49.000+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:29:49.076+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:29:49.075+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:29:49.138+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.821 seconds
[2023-09-24T05:30:19.377+0000] {processor.py:157} INFO - Started process (PID=46) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:30:19.379+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:30:19.385+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:30:19.385+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:30:19.412+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:30:19.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:30:19.480+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:30:19.520+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:30:19.520+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:30:19.544+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.176 seconds
[2023-09-24T05:30:49.821+0000] {processor.py:157} INFO - Started process (PID=54) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:30:49.822+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:30:49.825+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:30:49.824+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:30:49.853+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:30:49.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:30:49.918+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:30:49.963+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:30:49.962+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:30:49.988+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.171 seconds
[2023-09-24T05:31:20.101+0000] {processor.py:157} INFO - Started process (PID=62) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:31:20.102+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:31:20.105+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:31:20.104+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:31:20.129+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:31:20.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:31:20.190+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:31:20.228+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:31:20.228+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:31:20.252+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T05:31:50.507+0000] {processor.py:157} INFO - Started process (PID=70) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:31:50.509+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:31:50.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:31:50.511+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:31:50.536+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:31:50.599+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:31:50.598+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:31:50.643+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:31:50.643+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:31:50.668+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T05:32:20.710+0000] {processor.py:157} INFO - Started process (PID=78) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:32:20.711+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:32:20.714+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:32:20.713+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:32:20.737+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:32:20.796+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:32:20.796+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:32:20.835+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:32:20.835+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:32:20.858+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T05:32:51.002+0000] {processor.py:157} INFO - Started process (PID=94) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:32:51.003+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:32:51.006+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:32:51.005+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:32:51.029+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:32:51.088+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:32:51.088+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:32:51.128+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:32:51.128+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:32:51.151+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T05:33:21.511+0000] {processor.py:157} INFO - Started process (PID=104) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:33:21.512+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:33:21.517+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:33:21.516+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:33:21.544+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:33:21.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:33:21.606+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:33:21.647+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:33:21.647+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:33:21.670+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.169 seconds
[2023-09-24T05:34:57.147+0000] {processor.py:157} INFO - Started process (PID=38) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:34:57.151+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:34:57.156+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:34:57.155+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:34:57.259+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:34:58.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:34:58.510+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T05:34:58.512+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:34:58.511+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:34:58.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:34:58.696+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:34:58.762+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.622 seconds
[2023-09-24T05:35:29.051+0000] {processor.py:157} INFO - Started process (PID=56) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:35:29.052+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:35:29.056+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:35:29.055+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:35:29.080+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:35:29.146+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:35:29.146+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:35:29.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:35:29.189+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:35:29.217+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.171 seconds
[2023-09-24T05:35:59.318+0000] {processor.py:157} INFO - Started process (PID=69) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:35:59.319+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:35:59.322+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:35:59.321+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:35:59.347+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:35:59.408+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:35:59.408+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:35:59.448+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:35:59.447+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:35:59.471+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T05:36:29.681+0000] {processor.py:157} INFO - Started process (PID=77) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:36:29.682+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:36:29.685+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:36:29.685+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:36:29.714+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:36:29.778+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:36:29.777+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:36:29.817+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:36:29.817+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:36:29.842+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T05:36:59.957+0000] {processor.py:157} INFO - Started process (PID=85) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:36:59.958+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:36:59.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:36:59.961+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:37:00.000+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:37:00.067+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:37:00.067+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:37:00.110+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:37:00.110+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:37:00.137+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.185 seconds
[2023-09-24T05:37:30.304+0000] {processor.py:157} INFO - Started process (PID=93) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:37:30.305+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:37:30.308+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:37:30.307+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:37:30.334+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:37:30.400+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:37:30.400+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:37:30.441+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:37:30.441+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:37:30.465+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T05:38:00.659+0000] {processor.py:157} INFO - Started process (PID=101) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:38:00.660+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:38:00.663+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:38:00.663+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:38:00.691+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:38:00.758+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:38:00.758+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:38:00.805+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:38:00.805+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:38:00.835+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.180 seconds
[2023-09-24T05:38:31.063+0000] {processor.py:157} INFO - Started process (PID=109) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:38:31.065+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:38:31.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:38:31.068+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:38:31.101+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:38:31.173+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:38:31.173+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:38:31.219+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:38:31.218+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:38:31.245+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.187 seconds
[2023-09-24T05:39:01.339+0000] {processor.py:157} INFO - Started process (PID=117) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:39:01.340+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:39:01.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:39:01.345+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:39:01.391+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:39:01.472+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:39:01.472+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:39:01.518+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:39:01.517+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:39:01.542+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.213 seconds
[2023-09-24T05:39:31.767+0000] {processor.py:157} INFO - Started process (PID=125) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:39:31.768+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:39:31.771+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:39:31.771+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:39:31.795+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:39:31.856+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:39:31.856+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:39:31.899+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:39:31.899+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:39:31.926+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T05:40:02.213+0000] {processor.py:157} INFO - Started process (PID=133) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:40:02.214+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:40:02.217+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:40:02.216+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:40:02.243+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:40:02.311+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:40:02.310+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:40:02.352+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:40:02.352+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:40:02.379+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.172 seconds
[2023-09-24T05:45:22.559+0000] {processor.py:157} INFO - Started process (PID=37) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:45:22.574+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:45:22.604+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:45:22.594+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:45:22.786+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:45:23.791+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:45:23.790+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T05:45:23.794+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:45:23.791+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:45:23.924+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:45:23.924+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:45:24.001+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.462 seconds
[2023-09-24T05:45:54.212+0000] {processor.py:157} INFO - Started process (PID=57) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:45:54.213+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:45:54.217+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:45:54.216+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:45:54.240+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:45:54.313+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:45:54.313+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:45:54.352+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:45:54.352+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:45:54.382+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.174 seconds
[2023-09-24T05:46:24.422+0000] {processor.py:157} INFO - Started process (PID=86) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:46:24.423+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:46:24.426+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:46:24.426+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:46:24.451+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:46:24.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:46:24.511+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:46:24.550+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:46:24.550+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:46:24.574+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T05:46:54.625+0000] {processor.py:157} INFO - Started process (PID=97) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:46:54.626+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:46:54.629+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:46:54.628+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:46:54.653+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:46:54.721+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:46:54.720+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:46:54.760+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:46:54.760+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:46:54.784+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T05:47:24.843+0000] {processor.py:157} INFO - Started process (PID=106) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:47:24.844+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T05:47:24.847+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:47:24.846+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:47:24.877+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T05:47:24.939+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:47:24.939+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T05:47:24.979+0000] {logging_mixin.py:151} INFO - [2023-09-24T05:47:24.978+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T05:47:25.003+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T06:20:16.261+0000] {processor.py:157} INFO - Started process (PID=31) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:20:16.263+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:20:16.266+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:20:16.264+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:20:16.309+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:20:16.751+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:20:16.751+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T06:20:16.752+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:20:16.752+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:20:16.798+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:20:16.797+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:20:16.828+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.573 seconds
[2023-09-24T06:20:47.068+0000] {processor.py:157} INFO - Started process (PID=39) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:20:47.069+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:20:47.071+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:20:47.069+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:20:47.094+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:20:47.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:20:47.157+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:20:47.194+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:20:47.194+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:20:47.217+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T06:21:17.353+0000] {processor.py:157} INFO - Started process (PID=47) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:21:17.354+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:21:17.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:21:17.355+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:21:17.382+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:21:17.443+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:21:17.442+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:21:17.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:21:17.480+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:21:17.503+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T06:21:47.660+0000] {processor.py:157} INFO - Started process (PID=55) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:21:47.661+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:21:47.663+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:21:47.662+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:21:47.689+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:21:47.757+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:21:47.756+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:21:47.796+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:21:47.795+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:21:47.820+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T06:22:18.083+0000] {processor.py:157} INFO - Started process (PID=63) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:22:18.084+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:22:18.086+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:22:18.085+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:22:18.113+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:22:18.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:22:18.180+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:22:18.222+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:22:18.221+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:22:18.245+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T06:22:48.394+0000] {processor.py:157} INFO - Started process (PID=71) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:22:48.395+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:22:48.397+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:22:48.396+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:22:48.420+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:22:48.484+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:22:48.484+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:22:48.527+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:22:48.526+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:22:48.553+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T06:24:00.806+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.803+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 22)
[2023-09-24T06:24:00.809+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.808+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=22
[2023-09-24T06:24:00.814+0000] {processor.py:157} INFO - Started process (PID=22) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:24:00.815+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:24:00.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.816+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:24:00.818+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.818+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:24:00.823+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.822+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:24:00.870+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.868+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:24:00.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.872+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:24:00.874+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:24:00.906+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.905+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:24:00.906+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.906+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:24:00.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.923+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:24:00.931+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.930+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:00.937+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.937+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:00.942+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.942+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:00.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.947+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:00.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.952+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:00.958+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.958+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:00.965+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:00.964+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:01.013+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:01.012+0000] {serialized_dag.py:169} DEBUG - Writing Serialized DAG: example_bash_operator to the DB
[2023-09-24T06:24:01.019+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:01.019+0000] {serialized_dag.py:171} DEBUG - DAG: example_bash_operator written to the DB
[2023-09-24T06:24:01.020+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:01.020+0000] {dagbag.py:692} DEBUG - Syncing DAG permissions: example_bash_operator to the DB
[2023-09-24T06:24:01.386+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:01.386+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T06:24:01.387+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:01.387+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:24:01.449+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:01.448+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:24:01.486+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.683 seconds
[2023-09-24T06:24:31.717+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.715+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 29)
[2023-09-24T06:24:31.718+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.718+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=29
[2023-09-24T06:24:31.722+0000] {processor.py:157} INFO - Started process (PID=29) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:24:31.723+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:24:31.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.723+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:24:31.726+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.725+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:24:31.730+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.729+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:24:31.751+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.749+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:24:31.754+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.753+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:24:31.754+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:24:31.756+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.755+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:24:31.756+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.756+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:24:31.771+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.770+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:24:31.780+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.779+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:31.784+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.784+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:31.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.788+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:31.792+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.792+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:31.797+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.796+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:31.801+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.800+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:31.805+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.804+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:24:31.828+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.827+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:24:31.828+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.828+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:24:31.874+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:24:31.873+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:24:31.896+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T06:25:02.100+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.097+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 37)
[2023-09-24T06:25:02.103+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.102+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=37
[2023-09-24T06:25:02.107+0000] {processor.py:157} INFO - Started process (PID=37) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:25:02.108+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:25:02.109+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.108+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:25:02.110+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.110+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:25:02.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.116+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:25:02.136+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.134+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:25:02.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.138+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:25:02.138+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:25:02.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.139+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:25:02.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.140+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:25:02.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.154+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:25:02.160+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.159+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:02.164+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.164+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:02.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.168+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:02.172+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.172+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:02.177+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.176+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:02.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.180+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:02.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.184+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:02.206+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.205+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:25:02.206+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.206+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:25:02.245+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:02.245+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:25:02.268+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.171 seconds
[2023-09-24T06:25:32.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.361+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 45)
[2023-09-24T06:25:32.364+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.364+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=45
[2023-09-24T06:25:32.368+0000] {processor.py:157} INFO - Started process (PID=45) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:25:32.368+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:25:32.369+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.369+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:25:32.371+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.370+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:25:32.375+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.374+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:25:32.394+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.392+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:25:32.397+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.396+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:25:32.397+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:25:32.399+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.398+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:25:32.400+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.399+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:25:32.415+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.415+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:25:32.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.420+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:32.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.425+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:32.429+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.428+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:32.433+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.432+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:32.436+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.436+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:32.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.440+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:32.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.444+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:25:32.464+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.464+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:25:32.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.465+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:25:32.503+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:25:32.503+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:25:32.528+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T06:26:02.726+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.724+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 53)
[2023-09-24T06:26:02.728+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.727+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=53
[2023-09-24T06:26:02.731+0000] {processor.py:157} INFO - Started process (PID=53) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:26:02.731+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:26:02.732+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.732+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:26:02.734+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.733+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:26:02.737+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.737+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:26:02.757+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.755+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:26:02.759+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.759+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:26:02.760+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:26:02.761+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.761+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:26:02.762+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.762+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:26:02.775+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.775+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:26:02.781+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.780+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:02.785+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.785+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:02.789+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.789+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:02.793+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.793+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:02.797+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.797+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:02.802+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.801+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:02.805+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.805+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:02.830+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.829+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:26:02.830+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.830+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:26:02.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:02.872+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:26:02.896+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.172 seconds
[2023-09-24T06:26:33.218+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.217+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 61)
[2023-09-24T06:26:33.221+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.220+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=61
[2023-09-24T06:26:33.225+0000] {processor.py:157} INFO - Started process (PID=61) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:26:33.225+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:26:33.227+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.226+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:26:33.229+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.228+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:26:33.233+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.233+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:26:33.259+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.256+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:26:33.262+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.261+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:26:33.262+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:26:33.264+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.263+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:26:33.264+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.264+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:26:33.278+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.278+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:26:33.284+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.283+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:33.288+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.288+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:33.292+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.292+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:33.296+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.295+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:33.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.300+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:33.308+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.307+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:33.316+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.315+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:26:33.351+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.350+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:26:33.352+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.352+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:26:33.404+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:26:33.403+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:26:33.431+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.215 seconds
[2023-09-24T06:27:03.507+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.505+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 69)
[2023-09-24T06:27:03.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.509+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=69
[2023-09-24T06:27:03.515+0000] {processor.py:157} INFO - Started process (PID=69) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:27:03.516+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:27:03.517+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.516+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:27:03.519+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.518+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:27:03.522+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.522+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:27:03.549+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.547+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:27:03.551+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.551+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:27:03.551+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:27:03.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.553+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:27:03.554+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.553+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:27:03.568+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.568+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:27:03.574+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.573+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:03.579+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.579+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:03.583+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.583+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:03.587+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.586+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:03.591+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.590+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:03.596+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.595+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:03.600+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.599+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:03.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.622+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:27:03.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.623+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:27:03.666+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:03.665+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:27:03.688+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.184 seconds
[2023-09-24T06:27:34.036+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.034+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 82)
[2023-09-24T06:27:34.038+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.037+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=82
[2023-09-24T06:27:34.042+0000] {processor.py:157} INFO - Started process (PID=82) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:27:34.042+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:27:34.044+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.043+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:27:34.045+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.045+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:27:34.049+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.048+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:27:34.069+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.067+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:27:34.072+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.071+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:27:34.072+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:27:34.074+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.074+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:27:34.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.074+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:27:34.090+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.089+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:27:34.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.096+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:34.101+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.101+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:34.105+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.105+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:34.109+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.109+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:34.113+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.113+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:34.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.117+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:34.121+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.121+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:27:34.144+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.143+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:27:34.144+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.144+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:27:34.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:27:34.183+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:27:34.213+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.179 seconds
[2023-09-24T06:28:04.527+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.526+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 90)
[2023-09-24T06:28:04.529+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.528+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=90
[2023-09-24T06:28:04.532+0000] {processor.py:157} INFO - Started process (PID=90) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:28:04.533+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:28:04.534+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.534+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:28:04.536+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.535+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:28:04.539+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.539+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:28:04.560+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.557+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:28:04.563+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.562+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:28:04.563+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:28:04.565+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.565+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:28:04.566+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.566+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:28:04.583+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.583+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:28:04.590+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.589+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:04.594+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.594+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:04.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.598+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:04.603+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.602+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:04.607+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.606+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:04.611+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.610+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:04.614+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.614+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:04.636+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.635+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:28:04.637+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.636+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:28:04.676+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:04.676+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:28:04.706+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.180 seconds
[2023-09-24T06:28:34.993+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:34.992+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 98)
[2023-09-24T06:28:34.995+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:34.995+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=98
[2023-09-24T06:28:34.998+0000] {processor.py:157} INFO - Started process (PID=98) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:28:34.999+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:28:35.000+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:34.999+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:28:35.002+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.001+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:28:35.005+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.005+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:28:35.025+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.023+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:28:35.028+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.027+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:28:35.028+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:28:35.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.029+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:28:35.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.030+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:28:35.046+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.046+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:28:35.054+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.052+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:35.059+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.059+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:35.064+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.063+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:35.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.067+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:35.074+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.074+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:35.078+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.078+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:35.082+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.082+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:28:35.108+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.107+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:28:35.108+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.108+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:28:35.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:28:35.153+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:28:35.181+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T06:29:05.420+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.418+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 106)
[2023-09-24T06:29:05.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.421+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=106
[2023-09-24T06:29:05.425+0000] {processor.py:157} INFO - Started process (PID=106) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:29:05.426+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:29:05.427+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.426+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:29:05.428+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.428+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:29:05.433+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.432+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:29:05.454+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.451+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:29:05.456+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.456+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:29:05.456+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:29:05.458+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.457+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:29:05.458+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.458+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:29:05.472+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.472+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:29:05.478+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.477+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:05.482+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.482+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:05.486+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.485+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:05.489+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.489+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:05.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.493+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:05.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.497+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:05.503+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.502+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:05.524+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.524+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:29:05.525+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.525+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:29:05.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:05.564+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:29:05.589+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.171 seconds
[2023-09-24T06:29:35.691+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.689+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 114)
[2023-09-24T06:29:35.692+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.692+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=114
[2023-09-24T06:29:35.696+0000] {processor.py:157} INFO - Started process (PID=114) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:29:35.697+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:29:35.698+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.697+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:29:35.699+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.699+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:29:35.704+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.703+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:29:35.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.722+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:29:35.727+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.726+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:29:35.727+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:29:35.729+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.729+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:29:35.730+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.729+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:29:35.745+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.744+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:29:35.753+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.752+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:35.758+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.758+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:35.763+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.762+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:35.768+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.768+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:35.772+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.772+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:35.776+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.776+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:35.780+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.779+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:29:35.802+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.801+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:29:35.802+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.802+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:29:35.842+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:29:35.842+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:29:35.866+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.177 seconds
[2023-09-24T06:30:06.256+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.254+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 122)
[2023-09-24T06:30:06.264+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.263+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=122
[2023-09-24T06:30:06.268+0000] {processor.py:157} INFO - Started process (PID=122) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:30:06.269+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:30:06.270+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.269+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:30:06.272+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.271+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:30:06.277+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.276+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:30:06.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.299+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:30:06.304+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.304+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:30:06.305+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:30:06.306+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.306+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:30:06.307+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.307+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:30:06.323+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.322+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:30:06.331+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.329+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:06.339+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.339+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:06.346+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.346+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:06.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.352+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:06.359+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.358+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:06.366+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.365+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:06.372+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.371+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:06.395+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.395+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:30:06.396+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.396+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:30:06.441+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:06.441+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:30:06.469+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.215 seconds
[2023-09-24T06:30:36.538+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.536+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 130)
[2023-09-24T06:30:36.540+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.539+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=130
[2023-09-24T06:30:36.545+0000] {processor.py:157} INFO - Started process (PID=130) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:30:36.545+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:30:36.547+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.546+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:30:36.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.548+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:30:36.552+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.552+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:30:36.575+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.572+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:30:36.578+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.577+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:30:36.578+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:30:36.580+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.579+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:30:36.580+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.580+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:30:36.595+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.595+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:30:36.601+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.601+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:36.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.605+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:36.610+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.610+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:36.614+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.613+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:36.618+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.618+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:36.622+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.622+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:36.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.626+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:30:36.651+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.651+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:30:36.652+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.652+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:30:36.693+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:30:36.692+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:30:36.717+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T06:31:06.893+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.891+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 137)
[2023-09-24T06:31:06.895+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.894+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=137
[2023-09-24T06:31:06.898+0000] {processor.py:157} INFO - Started process (PID=137) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:31:06.898+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:31:06.899+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.899+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:31:06.901+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.901+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:31:06.905+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.904+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:31:06.925+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.923+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:31:06.928+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.927+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:31:06.928+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:31:06.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.929+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:31:06.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.930+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:31:06.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.950+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:31:06.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.956+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:06.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.961+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:06.965+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.965+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:06.969+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.969+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:06.973+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.973+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:06.977+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.976+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:06.980+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:06.980+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:07.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:07.000+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:31:07.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:07.001+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:31:07.040+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:07.040+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:31:07.072+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T06:31:37.373+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.371+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 152)
[2023-09-24T06:31:37.375+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.375+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=152
[2023-09-24T06:31:37.379+0000] {processor.py:157} INFO - Started process (PID=152) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:31:37.379+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:31:37.381+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.380+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:31:37.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.382+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:31:37.386+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.386+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:31:37.406+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.404+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:31:37.409+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.408+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:31:37.409+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:31:37.411+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.410+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:31:37.411+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.411+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:31:37.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.425+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:31:37.431+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.430+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:37.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.439+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:37.443+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.443+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:37.447+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.447+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:37.451+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.450+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:37.455+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.454+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:37.458+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.458+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:31:37.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.479+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:31:37.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.480+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:31:37.520+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:31:37.520+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:31:37.553+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T06:32:07.803+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.802+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 160)
[2023-09-24T06:32:07.805+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.805+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=160
[2023-09-24T06:32:07.809+0000] {processor.py:157} INFO - Started process (PID=160) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:32:07.809+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:32:07.810+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.810+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:32:07.812+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.811+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:32:07.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.815+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:32:07.836+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.834+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:32:07.838+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.838+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:32:07.838+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:32:07.840+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.840+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:32:07.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.840+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:32:07.854+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.854+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:32:07.860+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.859+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:07.865+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.864+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:07.869+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.869+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:07.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.873+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:07.877+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.877+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:07.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.881+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:07.886+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.885+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:07.907+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.906+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:32:07.907+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.907+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:32:07.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:07.948+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:32:07.973+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.171 seconds
[2023-09-24T06:32:38.103+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.102+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 167)
[2023-09-24T06:32:38.105+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.105+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=167
[2023-09-24T06:32:38.109+0000] {processor.py:157} INFO - Started process (PID=167) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:32:38.109+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:32:38.110+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.110+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:32:38.112+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.111+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:32:38.116+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.116+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:32:38.136+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.134+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:32:38.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.138+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:32:38.139+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:32:38.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.140+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:32:38.141+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.140+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:32:38.155+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.155+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:32:38.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.160+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:38.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.165+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:38.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.169+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:38.174+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.173+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:38.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.178+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:38.182+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.181+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:38.186+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.185+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:32:38.208+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.207+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:32:38.208+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.208+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:32:38.248+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:32:38.247+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:32:38.272+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T06:33:08.418+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.416+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 175)
[2023-09-24T06:33:08.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.420+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=175
[2023-09-24T06:33:08.427+0000] {processor.py:157} INFO - Started process (PID=175) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:33:08.427+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:33:08.430+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.429+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:33:08.433+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.432+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:33:08.438+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.437+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:33:08.461+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.458+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:33:08.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.464+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:33:08.465+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:33:08.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.467+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:33:08.468+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.467+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:33:08.485+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.484+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:33:08.491+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.490+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:08.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.496+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:08.502+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.501+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:08.507+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.506+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:08.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.510+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:08.516+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.515+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:08.521+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.520+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:08.543+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.543+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:33:08.544+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.544+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:33:08.585+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:08.585+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:33:08.609+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.193 seconds
[2023-09-24T06:33:38.737+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.736+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 192)
[2023-09-24T06:33:38.739+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.739+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=192
[2023-09-24T06:33:38.743+0000] {processor.py:157} INFO - Started process (PID=192) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:33:38.743+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:33:38.744+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.744+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:33:38.746+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.745+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:33:38.749+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.749+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:33:38.769+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.767+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:33:38.771+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.771+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:33:38.772+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:33:38.773+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.773+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:33:38.774+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.774+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:33:38.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.788+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:33:38.794+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.793+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:38.798+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.798+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:38.802+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.802+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:38.807+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.807+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:38.812+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.811+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:38.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.816+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:38.820+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.820+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:33:38.842+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.841+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:33:38.842+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.842+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:33:38.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:33:38.882+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:33:38.904+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.168 seconds
[2023-09-24T06:34:09.145+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.144+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 207)
[2023-09-24T06:34:09.147+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.146+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=207
[2023-09-24T06:34:09.150+0000] {processor.py:157} INFO - Started process (PID=207) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:34:09.150+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:34:09.152+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.151+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:34:09.153+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.153+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:34:09.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.156+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:34:09.177+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.174+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:34:09.179+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.179+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:34:09.180+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:34:09.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.181+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:34:09.182+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.181+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:34:09.195+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.195+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:34:09.200+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.200+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:09.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.204+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:09.209+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.208+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:09.213+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.212+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:09.216+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.216+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:09.221+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.220+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:09.225+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.225+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:09.247+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.247+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:34:09.248+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.247+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:34:09.288+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:09.287+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:34:09.314+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T06:34:39.446+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.445+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 215)
[2023-09-24T06:34:39.447+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.447+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=215
[2023-09-24T06:34:39.451+0000] {processor.py:157} INFO - Started process (PID=215) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:34:39.451+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:34:39.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.452+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:34:39.454+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.454+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:34:39.458+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.457+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:34:39.478+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.476+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:34:39.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.480+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:34:39.480+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:34:39.482+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.481+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:34:39.482+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.482+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:34:39.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.496+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:34:39.502+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.501+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:39.506+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.506+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:39.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.510+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:39.514+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.514+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:39.518+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.518+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:39.522+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.522+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:39.526+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.526+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:34:39.547+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.547+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:34:39.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.547+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:34:39.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:34:39.588+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:34:39.618+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T06:35:09.860+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.858+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 223)
[2023-09-24T06:35:09.862+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.861+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=223
[2023-09-24T06:35:09.865+0000] {processor.py:157} INFO - Started process (PID=223) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:35:09.866+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:35:09.868+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.867+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:35:09.869+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.869+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:35:09.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.873+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:35:09.896+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.894+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:35:09.898+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.898+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:35:09.898+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:35:09.900+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.899+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:35:09.900+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.900+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:35:09.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.913+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:35:09.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.918+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:09.924+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.924+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:09.929+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.929+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:09.933+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.933+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:09.937+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.937+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:09.941+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.940+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:09.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.944+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:09.966+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.966+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:35:09.967+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:09.966+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:35:10.005+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:10.005+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:35:10.028+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T06:35:40.242+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.240+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 231)
[2023-09-24T06:35:40.243+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.243+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=231
[2023-09-24T06:35:40.247+0000] {processor.py:157} INFO - Started process (PID=231) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:35:40.247+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:35:40.248+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.248+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:35:40.250+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.249+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:35:40.253+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.253+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:35:40.274+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.272+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:35:40.276+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.276+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:35:40.277+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:35:40.279+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.278+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:35:40.279+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.279+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:35:40.296+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.296+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:35:40.303+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.302+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:40.307+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.307+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:40.311+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.311+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:40.315+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.315+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:40.319+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.319+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:40.323+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.323+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:40.327+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.327+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:35:40.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.347+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:35:40.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.348+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:35:40.390+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:35:40.389+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:35:40.422+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T06:36:10.653+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.652+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 238)
[2023-09-24T06:36:10.656+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.655+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=238
[2023-09-24T06:36:10.659+0000] {processor.py:157} INFO - Started process (PID=238) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:36:10.659+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:36:10.661+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.660+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:36:10.663+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.662+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:36:10.666+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.666+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:36:10.688+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.686+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:36:10.690+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.690+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:36:10.691+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:36:10.693+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.692+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:36:10.694+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.693+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:36:10.711+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.711+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:36:10.718+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.717+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:10.723+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.722+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:10.727+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.726+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:10.731+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.730+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:10.736+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.735+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:10.740+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.740+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:10.744+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.744+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:10.766+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.765+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:36:10.766+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.766+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:36:10.805+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:10.805+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:36:10.831+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.179 seconds
[2023-09-24T06:36:40.989+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:40.987+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 246)
[2023-09-24T06:36:40.992+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:40.992+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=246
[2023-09-24T06:36:40.997+0000] {processor.py:157} INFO - Started process (PID=246) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:36:40.998+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:36:40.999+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:40.998+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:36:41.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.000+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:36:41.004+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.004+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:36:41.025+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.023+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:36:41.028+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.027+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:36:41.028+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:36:41.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.030+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:36:41.031+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.030+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:36:41.046+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.045+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:36:41.052+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.051+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:41.056+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.056+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:41.061+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.061+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:41.066+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.065+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:41.070+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.070+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:41.074+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.073+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:41.079+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.078+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:36:41.101+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.101+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:36:41.102+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.101+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:36:41.143+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:36:41.142+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:36:41.169+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T06:37:11.494+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.492+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 254)
[2023-09-24T06:37:11.495+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.495+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=254
[2023-09-24T06:37:11.499+0000] {processor.py:157} INFO - Started process (PID=254) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:37:11.499+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:37:11.500+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.500+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:37:11.502+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.501+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:37:11.505+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.505+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:37:11.524+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.522+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:37:11.527+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.527+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:37:11.527+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:37:11.529+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.528+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:37:11.529+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.529+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:37:11.542+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.542+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:37:11.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.547+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:11.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.552+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:11.557+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.557+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:11.561+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.561+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:11.565+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.565+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:11.569+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.569+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:11.573+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.573+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:11.594+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.594+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:37:11.595+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.595+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:37:11.636+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:11.635+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:37:11.660+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.168 seconds
[2023-09-24T06:37:41.836+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.834+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 262)
[2023-09-24T06:37:41.838+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.838+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=262
[2023-09-24T06:37:41.843+0000] {processor.py:157} INFO - Started process (PID=262) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:37:41.843+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:37:41.845+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.844+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:37:41.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.846+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:37:41.856+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.856+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:37:41.876+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.874+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:37:41.879+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.879+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:37:41.879+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:37:41.881+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.881+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:37:41.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.881+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:37:41.896+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.895+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:37:41.902+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.901+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:41.907+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.907+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:41.911+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.911+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:41.915+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.914+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:41.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.918+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:41.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.922+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:41.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.926+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:37:41.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.947+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:37:41.949+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.949+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:37:41.995+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:37:41.995+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:37:42.024+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.190 seconds
[2023-09-24T06:38:12.095+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.094+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 270)
[2023-09-24T06:38:12.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.096+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=270
[2023-09-24T06:38:12.100+0000] {processor.py:157} INFO - Started process (PID=270) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:38:12.100+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:38:12.102+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.101+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:38:12.103+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.103+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:38:12.107+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.107+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:38:12.127+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.125+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:38:12.129+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.129+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:38:12.129+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:38:12.131+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.131+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:38:12.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.131+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:38:12.147+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.146+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:38:12.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.153+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:12.158+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.158+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:12.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.162+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:12.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.166+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:12.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.169+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:12.173+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.173+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:12.177+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.177+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:12.199+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.199+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:38:12.200+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.199+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:38:12.242+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:12.241+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:38:12.267+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T06:38:42.401+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.400+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 277)
[2023-09-24T06:38:42.403+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.403+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=277
[2023-09-24T06:38:42.407+0000] {processor.py:157} INFO - Started process (PID=277) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:38:42.408+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:38:42.409+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.409+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:38:42.411+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.410+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:38:42.417+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.416+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:38:42.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.438+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:38:42.442+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.442+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:38:42.443+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:38:42.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.444+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:38:42.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.445+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:38:42.460+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.460+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:38:42.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.466+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:42.472+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.472+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:42.476+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.476+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:42.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.480+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:42.485+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.484+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:42.489+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.488+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:42.494+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.493+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:38:42.515+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.515+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:38:42.516+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.515+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:38:42.555+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:38:42.555+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:38:42.581+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.180 seconds
[2023-09-24T06:39:12.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.878+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 285)
[2023-09-24T06:39:12.883+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.882+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=285
[2023-09-24T06:39:12.886+0000] {processor.py:157} INFO - Started process (PID=285) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:39:12.887+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:39:12.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.888+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:39:12.891+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.890+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:39:12.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.894+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:39:12.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.912+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:39:12.916+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.916+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:39:12.917+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:39:12.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.918+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:39:12.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.919+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:39:12.932+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.932+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:39:12.938+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.937+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:12.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.942+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:12.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.947+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:12.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.951+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:12.955+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.955+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:12.959+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.959+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:12.964+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.963+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:12.985+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.985+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:39:12.986+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:12.986+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:39:13.027+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:13.026+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:39:13.051+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T06:39:43.136+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.135+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 293)
[2023-09-24T06:39:43.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.138+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=293
[2023-09-24T06:39:43.141+0000] {processor.py:157} INFO - Started process (PID=293) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:39:43.142+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:39:43.143+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.142+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:39:43.144+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.144+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:39:43.148+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.147+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:39:43.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.166+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:39:43.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.170+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:39:43.170+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:39:43.172+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.172+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:39:43.173+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.173+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:39:43.187+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.186+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:39:43.193+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.192+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:43.197+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.196+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:43.201+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.200+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:43.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.204+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:43.208+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.208+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:43.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.212+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:43.216+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.216+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:39:43.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.237+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:39:43.238+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.238+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:39:43.277+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:39:43.277+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:39:43.301+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T06:40:13.531+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.530+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 301)
[2023-09-24T06:40:13.533+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.532+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=301
[2023-09-24T06:40:13.536+0000] {processor.py:157} INFO - Started process (PID=301) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:40:13.537+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:40:13.538+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.538+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:40:13.540+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.539+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:40:13.544+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.543+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:40:13.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.562+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:40:13.566+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.566+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:40:13.567+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:40:13.568+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.568+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:40:13.569+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.569+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:40:13.583+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.583+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:40:13.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.588+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:13.593+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.593+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:13.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.597+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:13.601+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.601+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:13.605+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.605+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:13.609+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.609+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:13.615+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.614+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:13.638+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.637+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:40:13.638+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.638+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:40:13.681+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:13.680+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:40:13.715+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.185 seconds
[2023-09-24T06:40:43.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.925+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 309)
[2023-09-24T06:40:43.928+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.927+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=309
[2023-09-24T06:40:43.931+0000] {processor.py:157} INFO - Started process (PID=309) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:40:43.932+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:40:43.933+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.932+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:40:43.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.934+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:40:43.938+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.937+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:40:43.958+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.955+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:40:43.960+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.960+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:40:43.960+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:40:43.962+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.962+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:40:43.963+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.962+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:40:43.978+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.977+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:40:43.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.983+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:43.988+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.987+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:43.991+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.991+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:44.003+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:43.995+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:44.007+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:44.007+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:44.012+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:44.012+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:44.016+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:44.016+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:40:44.037+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:44.037+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:40:44.038+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:44.037+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:40:44.078+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:40:44.078+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:40:44.107+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T06:41:14.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.368+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 317)
[2023-09-24T06:41:14.371+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.371+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=317
[2023-09-24T06:41:14.375+0000] {processor.py:157} INFO - Started process (PID=317) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:41:14.375+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:41:14.376+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.376+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:41:14.378+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.377+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:41:14.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.381+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:41:14.401+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.399+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:41:14.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.404+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:41:14.405+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:41:14.407+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.406+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:41:14.407+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.407+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:41:14.422+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.421+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:41:14.427+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.427+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:14.432+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.431+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:14.435+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.435+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:14.439+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.439+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:14.443+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.442+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:14.446+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.446+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:14.450+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.450+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:14.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.473+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:41:14.475+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.474+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:41:14.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:14.512+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:41:14.534+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T06:41:44.835+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.833+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 326)
[2023-09-24T06:41:44.837+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.837+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=326
[2023-09-24T06:41:44.841+0000] {processor.py:157} INFO - Started process (PID=326) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:41:44.841+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:41:44.843+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.842+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:41:44.844+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.844+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:41:44.849+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.849+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:41:44.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.877+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:41:44.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.882+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:41:44.883+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:41:44.884+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.884+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:41:44.885+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.884+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:41:44.902+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.901+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:41:44.909+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.908+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:44.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.913+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:44.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.918+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:44.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.923+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:44.928+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.927+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:44.936+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.936+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:44.941+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.940+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:41:44.964+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.964+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:41:44.965+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:44.965+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:41:45.010+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:41:45.009+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:41:45.038+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.206 seconds
[2023-09-24T06:42:15.143+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.141+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 334)
[2023-09-24T06:42:15.144+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.144+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=334
[2023-09-24T06:42:15.148+0000] {processor.py:157} INFO - Started process (PID=334) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:42:15.148+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:42:15.150+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.149+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:42:15.151+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.151+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:42:15.155+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.155+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:42:15.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.175+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:42:15.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.181+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:42:15.182+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:42:15.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.183+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:42:15.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.184+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:42:15.200+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.199+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:42:15.209+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.208+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:15.214+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.213+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:15.218+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.218+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:15.222+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.222+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:15.226+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.226+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:15.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.230+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:15.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.234+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:15.256+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.255+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:42:15.256+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.256+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:42:15.309+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:15.308+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:42:15.341+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.200 seconds
[2023-09-24T06:42:45.650+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.648+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 342)
[2023-09-24T06:42:45.652+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.651+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=342
[2023-09-24T06:42:45.655+0000] {processor.py:157} INFO - Started process (PID=342) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:42:45.656+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:42:45.657+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.656+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:42:45.658+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.658+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:42:45.662+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.662+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:42:45.682+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.680+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:42:45.685+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.684+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:42:45.685+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:42:45.686+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.686+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:42:45.687+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.687+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:42:45.700+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.700+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:42:45.706+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.705+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:45.711+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.711+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:45.715+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.715+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:45.719+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.719+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:45.723+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.723+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:45.727+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.727+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:45.731+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.731+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:42:45.753+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.752+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:42:45.754+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.753+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:42:45.797+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:42:45.796+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:42:45.822+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.174 seconds
[2023-09-24T06:43:15.881+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.879+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 352)
[2023-09-24T06:43:15.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.882+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=352
[2023-09-24T06:43:15.886+0000] {processor.py:157} INFO - Started process (PID=352) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:43:15.886+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:43:15.887+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.887+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:43:15.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.889+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:43:15.893+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.892+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:43:15.913+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.910+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:43:15.915+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.915+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:43:15.915+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:43:15.917+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.917+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:43:15.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.917+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:43:15.931+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.931+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:43:15.937+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.936+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:15.942+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.941+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:15.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.945+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:15.949+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.949+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:15.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.953+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:15.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.957+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:15.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.961+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:15.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.982+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:43:15.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:15.983+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:43:16.026+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:16.025+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:43:16.055+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.176 seconds
[2023-09-24T06:43:46.259+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.257+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 362)
[2023-09-24T06:43:46.260+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.260+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=362
[2023-09-24T06:43:46.263+0000] {processor.py:157} INFO - Started process (PID=362) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:43:46.264+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:43:46.265+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.265+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:43:46.266+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.266+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:43:46.270+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.269+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:43:46.289+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.287+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:43:46.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.301+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:43:46.301+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:43:46.303+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.302+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:43:46.303+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.303+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:43:46.318+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.318+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:43:46.324+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.323+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:46.328+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.328+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:46.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.332+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:46.336+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.336+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:46.341+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.340+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:46.344+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.344+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:46.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.348+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:43:46.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.369+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:43:46.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.370+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:43:46.411+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:43:46.410+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:43:46.435+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T06:44:16.575+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.572+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 370)
[2023-09-24T06:44:16.578+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.577+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=370
[2023-09-24T06:44:16.584+0000] {processor.py:157} INFO - Started process (PID=370) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:44:16.585+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:44:16.587+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.586+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:44:16.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.588+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:44:16.594+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.594+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:44:16.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.620+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:44:16.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.627+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:44:16.628+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:44:16.630+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.630+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:44:16.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.631+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:44:16.652+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.652+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:44:16.663+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.662+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:16.670+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.670+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:16.680+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.679+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:16.686+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.685+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:16.692+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.692+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:16.698+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.698+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:16.704+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.704+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:16.737+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.737+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:44:16.738+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.738+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:44:16.798+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:16.797+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:44:16.834+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.262 seconds
[2023-09-24T06:44:46.857+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.855+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 378)
[2023-09-24T06:44:46.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.858+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=378
[2023-09-24T06:44:46.863+0000] {processor.py:157} INFO - Started process (PID=378) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:44:46.863+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:44:46.865+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.864+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:44:46.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.866+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:44:46.870+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.870+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:44:46.892+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.890+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:44:46.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.894+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:44:46.895+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:44:46.897+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.896+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:44:46.897+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.897+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:44:46.913+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.912+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:44:46.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.919+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:46.925+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.925+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:46.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.929+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:46.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.934+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:46.939+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.938+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:46.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.943+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:46.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.947+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:44:46.972+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.972+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:44:46.973+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:46.972+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:44:47.018+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:44:47.017+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:44:47.044+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T06:45:17.276+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.273+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 386)
[2023-09-24T06:45:17.282+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.282+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=386
[2023-09-24T06:45:17.287+0000] {processor.py:157} INFO - Started process (PID=386) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:45:17.287+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:45:17.289+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.288+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:45:17.290+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.290+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:45:17.294+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.293+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:45:17.313+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.311+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:45:17.316+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.315+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:45:17.316+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:45:17.318+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.317+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:45:17.318+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.318+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:45:17.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.332+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:45:17.341+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.340+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:17.345+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.345+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:17.349+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.348+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:17.362+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.361+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:17.366+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.366+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:17.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.370+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:17.374+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.374+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:17.396+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.395+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:45:17.396+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.396+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:45:17.435+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:17.434+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:45:17.462+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T06:45:47.611+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.610+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 394)
[2023-09-24T06:45:47.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.613+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=394
[2023-09-24T06:45:47.617+0000] {processor.py:157} INFO - Started process (PID=394) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:45:47.617+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:45:47.619+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.618+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:45:47.620+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.620+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:45:47.624+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.623+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:45:47.645+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.643+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:45:47.647+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.647+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:45:47.648+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:45:47.649+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.649+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:45:47.650+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.650+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:45:47.664+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.664+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:45:47.670+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.669+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:47.675+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.674+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:47.690+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.690+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:47.694+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.694+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:47.699+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.698+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:47.704+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.704+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:47.709+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.709+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:45:47.732+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.731+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:45:47.732+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.732+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:45:47.774+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:45:47.773+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:45:47.798+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.188 seconds
[2023-09-24T06:46:18.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.073+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 402)
[2023-09-24T06:46:18.078+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.077+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=402
[2023-09-24T06:46:18.083+0000] {processor.py:157} INFO - Started process (PID=402) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:46:18.083+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:46:18.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.084+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:46:18.087+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.086+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:46:18.091+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.091+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:46:18.111+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.109+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:46:18.114+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.113+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:46:18.114+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:46:18.116+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.115+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:46:18.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.116+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:46:18.131+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.131+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:46:18.137+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.136+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:18.142+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.141+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:18.145+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.145+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:18.149+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.149+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:18.153+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.153+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:18.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.157+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:18.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.160+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:18.183+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.183+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:46:18.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.184+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:46:18.224+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:18.223+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:46:18.246+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.174 seconds
[2023-09-24T06:46:48.432+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.429+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 410)
[2023-09-24T06:46:48.434+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.433+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=410
[2023-09-24T06:46:48.438+0000] {processor.py:157} INFO - Started process (PID=410) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:46:48.439+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:46:48.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.440+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:46:48.443+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.443+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:46:48.448+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.447+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:46:48.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.472+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:46:48.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.476+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:46:48.477+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:46:48.479+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.479+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:46:48.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.479+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:46:48.495+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.494+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:46:48.500+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.500+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:48.505+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.504+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:48.509+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.509+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:48.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.512+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:48.517+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.516+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:48.521+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.520+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:48.529+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.528+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:46:48.551+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.550+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:46:48.551+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.551+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:46:48.590+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:46:48.590+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:46:48.614+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.184 seconds
[2023-09-24T06:47:18.810+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.808+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 418)
[2023-09-24T06:47:18.820+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.819+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=418
[2023-09-24T06:47:18.824+0000] {processor.py:157} INFO - Started process (PID=418) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:47:18.825+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:47:18.826+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.825+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:47:18.828+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.827+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:47:18.832+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.831+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:47:18.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.855+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:47:18.863+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.862+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:47:18.863+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:47:18.865+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.865+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:47:18.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.865+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:47:18.883+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.882+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:47:18.893+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.892+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:18.898+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.897+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:18.903+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.902+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:18.907+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.907+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:18.912+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.911+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:18.916+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.916+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:18.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.920+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:18.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.943+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:47:18.944+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.943+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:47:18.984+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:18.984+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:47:19.032+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.224 seconds
[2023-09-24T06:47:49.159+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.157+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 425)
[2023-09-24T06:47:49.160+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.160+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=425
[2023-09-24T06:47:49.164+0000] {processor.py:157} INFO - Started process (PID=425) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:47:49.165+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:47:49.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.166+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:47:49.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.167+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:47:49.171+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.171+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:47:49.192+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.189+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:47:49.194+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.194+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:47:49.194+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:47:49.196+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.196+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:47:49.196+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.196+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:47:49.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.212+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:47:49.218+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.217+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:49.222+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.222+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:49.226+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.226+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:49.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.230+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:49.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.234+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:49.239+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.238+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:49.243+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.243+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:47:49.267+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.266+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:47:49.267+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.267+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:47:49.310+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:47:49.310+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:47:49.334+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.176 seconds
[2023-09-24T06:48:19.604+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.601+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 432)
[2023-09-24T06:48:19.608+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.607+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=432
[2023-09-24T06:48:19.617+0000] {processor.py:157} INFO - Started process (PID=432) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:48:19.619+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:48:19.621+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.620+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:48:19.624+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.623+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:48:19.629+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.629+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:48:19.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.666+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:48:19.676+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.675+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:48:19.677+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:48:19.679+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.678+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:48:19.680+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.679+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:48:19.703+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.702+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:48:19.712+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.710+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:19.720+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.719+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:19.727+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.726+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:19.736+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.735+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:19.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.742+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:19.749+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.748+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:19.756+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.756+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:19.798+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.797+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:48:19.800+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.799+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:48:19.869+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:19.869+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:48:19.914+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.312 seconds
[2023-09-24T06:48:50.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.167+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 439)
[2023-09-24T06:48:50.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.170+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=439
[2023-09-24T06:48:50.174+0000] {processor.py:157} INFO - Started process (PID=439) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:48:50.175+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:48:50.176+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.175+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:48:50.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.177+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:48:50.182+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.181+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:48:50.202+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.200+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:48:50.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.205+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:48:50.205+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:48:50.207+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.207+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:48:50.208+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.208+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:48:50.223+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.223+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:48:50.229+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.228+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:50.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.234+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:50.239+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.238+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:50.243+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.243+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:50.249+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.248+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:50.253+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.253+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:50.258+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.257+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:48:50.290+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.289+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:48:50.290+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.290+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:48:50.346+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:48:50.345+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:48:50.375+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.208 seconds
[2023-09-24T06:49:20.459+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.457+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 447)
[2023-09-24T06:49:20.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.464+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=447
[2023-09-24T06:49:20.473+0000] {processor.py:157} INFO - Started process (PID=447) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:49:20.474+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:49:20.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.476+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:49:20.481+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.480+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:49:20.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.491+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:49:20.530+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.526+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:49:20.536+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.535+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:49:20.537+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:49:20.540+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.539+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:49:20.541+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.541+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:49:20.569+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.568+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:49:20.579+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.577+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:20.587+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.587+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:20.595+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.594+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:20.603+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.602+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:20.610+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.609+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:20.617+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.617+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:20.626+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.625+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:20.671+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.670+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:49:20.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.672+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:49:20.759+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:20.758+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:49:20.817+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.360 seconds
[2023-09-24T06:49:51.538+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:51.456+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 455)
[2023-09-24T06:49:51.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:51.631+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=455
[2023-09-24T06:49:51.729+0000] {processor.py:157} INFO - Started process (PID=455) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:49:51.731+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:49:51.734+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:51.733+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:49:51.738+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:51.737+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:49:51.749+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:51.748+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:49:51.966+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:51.961+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:49:51.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:51.970+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:49:51.971+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:49:51.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:51.973+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:49:51.975+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:51.974+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:49:52.236+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:52.235+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:49:52.395+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:52.365+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:52.487+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:52.470+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:52.507+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:52.502+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:52.542+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:52.541+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:52.731+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:52.711+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:52.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:52.938+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:53.155+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:53.154+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:49:53.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:53.927+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:49:53.959+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:53.958+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:49:55.543+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:49:55.542+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:49:56.290+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 4.834 seconds
[2023-09-24T06:50:26.852+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.851+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 463)
[2023-09-24T06:50:26.854+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.854+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=463
[2023-09-24T06:50:26.858+0000] {processor.py:157} INFO - Started process (PID=463) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:50:26.858+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:50:26.860+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.859+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:50:26.862+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.861+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:50:26.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.865+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:50:26.886+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.884+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:50:26.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.888+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:50:26.889+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:50:26.890+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.890+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:50:26.891+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.890+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:50:26.905+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.904+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:50:26.911+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.910+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:26.915+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.915+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:26.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.919+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:26.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.922+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:26.927+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.926+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:26.931+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.930+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:26.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.934+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:26.956+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.956+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:50:26.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.956+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:50:26.996+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:26.995+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:50:27.022+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.172 seconds
[2023-09-24T06:50:57.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.189+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 470)
[2023-09-24T06:50:57.192+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.191+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=470
[2023-09-24T06:50:57.195+0000] {processor.py:157} INFO - Started process (PID=470) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:50:57.196+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:50:57.197+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.196+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:50:57.198+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.198+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:50:57.203+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.202+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:50:57.223+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.221+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:50:57.225+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.225+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:50:57.226+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:50:57.227+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.227+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:50:57.228+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.228+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:50:57.242+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.242+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:50:57.251+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.250+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:57.256+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.255+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:57.262+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.261+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:57.266+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.266+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:57.271+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.271+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:57.281+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.276+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:57.285+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.285+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:50:57.308+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.307+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:50:57.309+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.308+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:50:57.350+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:50:57.349+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:50:57.374+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T06:51:27.463+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.462+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 478)
[2023-09-24T06:51:27.469+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.465+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=478
[2023-09-24T06:51:27.473+0000] {processor.py:157} INFO - Started process (PID=478) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:51:27.474+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:51:27.476+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.475+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:51:27.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.477+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:51:27.482+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.482+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:51:27.504+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.502+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:51:27.507+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.506+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:51:27.508+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:51:27.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.510+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:51:27.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.510+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:51:27.531+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.531+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:51:27.537+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.536+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:27.543+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.542+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:27.547+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.547+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:27.551+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.551+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:27.556+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.555+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:27.561+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.561+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:27.565+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.565+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:27.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.588+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:51:27.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.589+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:51:27.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:27.631+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:51:27.667+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.205 seconds
[2023-09-24T06:51:57.834+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.833+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 485)
[2023-09-24T06:51:57.836+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.835+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=485
[2023-09-24T06:51:57.839+0000] {processor.py:157} INFO - Started process (PID=485) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:51:57.840+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:51:57.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.840+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:51:57.843+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.842+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:51:57.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.846+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:51:57.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.864+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:51:57.869+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.868+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:51:57.869+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:51:57.870+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.870+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:51:57.871+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.871+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:51:57.885+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.884+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:51:57.891+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.890+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:57.896+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.895+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:57.899+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.899+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:57.904+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.904+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:57.908+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.908+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:57.912+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.912+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:57.916+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.916+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:51:57.937+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.937+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:51:57.938+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.938+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:51:57.978+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:51:57.977+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:51:58.002+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T06:52:28.074+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.073+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 493)
[2023-09-24T06:52:28.076+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.076+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=493
[2023-09-24T06:52:28.080+0000] {processor.py:157} INFO - Started process (PID=493) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:52:28.080+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:52:28.082+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.081+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:52:28.084+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.083+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:52:28.088+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.087+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:52:28.108+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.106+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:52:28.110+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.110+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:52:28.111+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:52:28.113+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.112+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:52:28.113+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.113+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:52:28.128+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.127+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:52:28.134+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.133+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:28.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.138+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:28.143+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.143+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:28.148+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.147+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:28.153+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.152+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:28.160+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.159+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:28.164+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.164+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:28.189+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.188+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:52:28.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.189+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:52:28.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:28.233+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:52:28.261+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T06:52:58.413+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.411+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 500)
[2023-09-24T06:52:58.745+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.744+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=500
[2023-09-24T06:52:58.753+0000] {processor.py:157} INFO - Started process (PID=500) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:52:58.754+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:52:58.756+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.755+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:52:58.759+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.759+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:52:58.767+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.766+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:52:58.803+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.797+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:52:58.806+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.806+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:52:58.807+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:52:58.810+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.809+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:52:58.810+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.810+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:52:58.835+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.834+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:52:58.845+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.843+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:58.852+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.852+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:58.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.858+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:58.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.865+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:58.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.872+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:58.879+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.878+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:58.886+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.885+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:52:58.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.922+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:52:58.924+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.923+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:52:58.990+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:52:58.989+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:52:59.186+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.775 seconds
[2023-09-24T06:53:29.503+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.502+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 508)
[2023-09-24T06:53:29.506+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.505+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=508
[2023-09-24T06:53:29.509+0000] {processor.py:157} INFO - Started process (PID=508) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:53:29.510+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:53:29.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.511+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:53:29.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.513+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:53:29.517+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.516+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:53:29.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.546+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:53:29.550+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.550+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:53:29.551+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:53:29.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.552+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:53:29.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.553+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:53:29.569+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.568+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:53:29.575+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.574+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:29.579+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.579+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:29.583+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.583+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:29.588+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.588+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:29.592+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.592+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:29.596+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.596+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:29.600+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.600+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:29.622+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.622+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:53:29.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.622+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:53:29.662+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:29.662+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:53:29.686+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.184 seconds
[2023-09-24T06:53:59.813+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.812+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 516)
[2023-09-24T06:53:59.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.815+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=516
[2023-09-24T06:53:59.819+0000] {processor.py:157} INFO - Started process (PID=516) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:53:59.819+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:53:59.821+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.820+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:53:59.822+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.822+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:53:59.826+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.826+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:53:59.847+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.845+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:53:59.849+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.849+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:53:59.849+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:53:59.852+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.851+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:53:59.852+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.852+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:53:59.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.873+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:53:59.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.879+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:59.884+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.884+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:59.888+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.888+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:59.892+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.892+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:59.896+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.896+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:59.900+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.900+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:59.904+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.904+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:53:59.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.925+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:53:59.927+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.926+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:53:59.970+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:53:59.969+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:53:59.999+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.187 seconds
[2023-09-24T06:54:30.147+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.145+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 524)
[2023-09-24T06:54:30.149+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.148+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=524
[2023-09-24T06:54:30.153+0000] {processor.py:157} INFO - Started process (PID=524) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:54:30.154+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:54:30.155+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.155+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:54:30.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.156+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:54:30.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.161+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:54:30.183+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.181+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:54:30.186+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.186+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:54:30.186+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:54:30.188+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.188+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:54:30.189+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.189+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:54:30.204+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.203+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:54:30.210+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.209+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:54:30.215+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.214+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:54:30.219+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.218+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:54:30.222+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.222+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:54:30.226+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.226+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:54:30.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.230+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:54:30.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.234+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:54:30.255+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.255+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:54:30.256+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.256+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:54:30.300+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:54:30.299+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:54:30.323+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.179 seconds
[2023-09-24T06:55:00.559+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.557+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 532)
[2023-09-24T06:55:00.560+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.560+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=532
[2023-09-24T06:55:00.564+0000] {processor.py:157} INFO - Started process (PID=532) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:55:00.565+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:55:00.566+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.566+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:55:00.568+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.567+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:55:00.572+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.571+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:55:00.593+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.591+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:55:00.595+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.595+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:55:00.596+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:55:00.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.597+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:55:00.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.598+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:55:00.615+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.615+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:55:00.622+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.620+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:00.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.627+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:00.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.631+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:00.635+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.635+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:00.640+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.639+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:00.644+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.643+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:00.648+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.647+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:00.670+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.669+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:55:00.671+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.670+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:55:00.721+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:00.721+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:55:00.757+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.200 seconds
[2023-09-24T06:55:30.936+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.934+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 540)
[2023-09-24T06:55:30.939+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.938+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=540
[2023-09-24T06:55:30.943+0000] {processor.py:157} INFO - Started process (PID=540) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:55:30.943+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:55:30.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.944+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:55:30.946+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.946+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:55:30.950+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.950+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:55:30.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.969+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:55:30.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.973+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:55:30.974+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:55:30.976+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.975+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:55:30.976+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.976+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:55:30.991+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.990+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:55:30.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:30.996+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:31.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:31.001+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:31.005+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:31.005+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:31.009+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:31.008+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:31.013+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:31.012+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:31.017+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:31.016+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:31.020+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:31.020+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:55:31.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:31.042+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:55:31.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:31.043+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:55:31.086+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:55:31.085+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:55:31.113+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T06:56:01.436+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.435+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 548)
[2023-09-24T06:56:01.438+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.438+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=548
[2023-09-24T06:56:01.442+0000] {processor.py:157} INFO - Started process (PID=548) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:56:01.442+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:56:01.443+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.443+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:56:01.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.445+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:56:01.448+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.448+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:56:01.469+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.467+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:56:01.472+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.471+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:56:01.472+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:56:01.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.474+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:56:01.475+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.474+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:56:01.488+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.487+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:56:01.494+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.493+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:01.498+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.498+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:01.502+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.501+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:01.505+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.505+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:01.509+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.509+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:01.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.512+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:01.517+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.516+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:01.538+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.538+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:56:01.539+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.538+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:56:01.585+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:01.584+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:56:01.611+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.176 seconds
[2023-09-24T06:56:31.780+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.779+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 556)
[2023-09-24T06:56:31.782+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.782+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=556
[2023-09-24T06:56:31.786+0000] {processor.py:157} INFO - Started process (PID=556) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:56:31.787+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:56:31.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.787+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:56:31.790+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.789+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:56:31.794+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.794+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:56:31.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.813+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:56:31.818+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.817+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:56:31.818+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:56:31.820+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.819+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:56:31.820+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.820+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:56:31.837+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.837+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:56:31.843+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.842+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:31.848+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.847+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:31.852+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.851+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:31.855+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.855+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:31.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.859+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:31.863+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.863+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:31.867+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.866+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:56:31.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.888+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:56:31.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.889+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:56:31.932+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:56:31.931+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:56:31.957+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T06:57:02.270+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.269+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 564)
[2023-09-24T06:57:02.273+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.272+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=564
[2023-09-24T06:57:02.276+0000] {processor.py:157} INFO - Started process (PID=564) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:57:02.277+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:57:02.278+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.277+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:57:02.279+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.279+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:57:02.283+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.282+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:57:02.303+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.300+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:57:02.305+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.305+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:57:02.305+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:57:02.307+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.307+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:57:02.307+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.307+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:57:02.322+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.321+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:57:02.328+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.327+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:02.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.332+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:02.336+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.336+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:02.340+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.339+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:02.344+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.344+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:02.349+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.349+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:02.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.353+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:02.375+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.374+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:57:02.375+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.375+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:57:02.414+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:02.414+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:57:02.439+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T06:57:32.629+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.627+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 572)
[2023-09-24T06:57:32.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.631+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=572
[2023-09-24T06:57:32.639+0000] {processor.py:157} INFO - Started process (PID=572) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:57:32.640+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:57:32.642+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.641+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:57:32.645+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.644+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:57:32.649+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.649+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:57:32.679+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.676+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:57:32.683+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.682+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:57:32.683+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:57:32.686+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.685+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:57:32.686+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.686+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:57:32.701+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.700+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:57:32.709+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.708+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:32.713+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.713+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:32.717+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.717+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:32.722+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.721+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:32.726+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.725+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:32.729+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.729+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:32.733+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.733+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:57:32.755+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.754+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:57:32.755+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.755+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:57:32.796+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:57:32.795+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:57:32.819+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.192 seconds
[2023-09-24T06:58:03.126+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.124+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 580)
[2023-09-24T06:58:03.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.131+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=580
[2023-09-24T06:58:03.135+0000] {processor.py:157} INFO - Started process (PID=580) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:58:03.136+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:58:03.137+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.136+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:58:03.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.138+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:58:03.153+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.152+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:58:03.176+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.172+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:58:03.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.178+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:58:03.179+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:58:03.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.180+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:58:03.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.181+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:58:03.206+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.205+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:58:03.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.211+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:03.217+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.217+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:03.223+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.222+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:03.227+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.226+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:03.232+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.231+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:03.236+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.235+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:03.241+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.240+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:03.267+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.266+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:58:03.268+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.267+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:58:03.312+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:03.311+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:58:03.338+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.214 seconds
[2023-09-24T06:58:33.568+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.566+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 588)
[2023-09-24T06:58:33.570+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.570+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=588
[2023-09-24T06:58:33.575+0000] {processor.py:157} INFO - Started process (PID=588) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:58:33.575+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:58:33.577+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.576+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:58:33.578+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.578+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:58:33.582+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.581+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:58:33.602+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.600+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:58:33.604+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.604+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:58:33.605+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:58:33.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.606+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:58:33.607+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.606+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:58:33.621+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.620+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:58:33.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.626+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:33.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.631+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:33.635+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.635+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:33.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.639+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:33.643+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.642+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:33.646+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.646+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:33.650+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.650+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:58:33.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.672+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:58:33.673+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.673+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:58:33.712+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:58:33.711+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:58:33.734+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.168 seconds
[2023-09-24T06:59:04.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.073+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 596)
[2023-09-24T06:59:04.076+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.076+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=596
[2023-09-24T06:59:04.080+0000] {processor.py:157} INFO - Started process (PID=596) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:59:04.080+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:59:04.081+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.081+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:59:04.083+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.083+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:59:04.086+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.086+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:59:04.106+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.104+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:59:04.108+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.108+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:59:04.109+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:59:04.110+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.110+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:59:04.111+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.110+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:59:04.124+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.124+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:59:04.130+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.129+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:04.134+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.133+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:04.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.138+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:04.142+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.141+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:04.145+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.145+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:04.149+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.149+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:04.153+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.153+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:04.174+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.174+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:59:04.175+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.174+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:59:04.217+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:04.217+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:59:04.245+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.172 seconds
[2023-09-24T06:59:34.436+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.433+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 604)
[2023-09-24T06:59:34.438+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.438+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=604
[2023-09-24T06:59:34.442+0000] {processor.py:157} INFO - Started process (PID=604) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:59:34.443+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T06:59:34.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.444+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:59:34.446+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.446+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:59:34.450+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.449+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T06:59:34.487+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.484+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:59:34.489+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.489+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T06:59:34.489+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T06:59:34.491+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.491+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T06:59:34.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.491+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T06:59:34.507+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.507+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T06:59:34.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.512+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:34.518+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.517+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:34.522+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.522+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:34.526+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.525+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:34.530+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.530+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:34.534+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.534+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:34.539+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.538+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T06:59:34.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.564+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T06:59:34.565+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.564+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T06:59:34.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T06:59:34.605+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T06:59:34.628+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.196 seconds
[2023-09-24T07:00:04.932+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.930+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 612)
[2023-09-24T07:00:04.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.933+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=612
[2023-09-24T07:00:04.937+0000] {processor.py:157} INFO - Started process (PID=612) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:00:04.938+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:00:04.939+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.938+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:00:04.941+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.940+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:00:04.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.944+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:00:04.968+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.966+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:00:04.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.970+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:00:04.971+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:00:04.972+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.972+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:00:04.973+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.973+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:00:04.987+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.987+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:00:04.993+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.992+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:04.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:04.997+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:05.002+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:05.001+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:05.006+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:05.006+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:05.011+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:05.010+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:05.015+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:05.015+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:05.019+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:05.019+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:05.041+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:05.040+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:00:05.041+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:05.041+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:00:05.081+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:05.081+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:00:05.103+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T07:00:35.346+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.344+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 620)
[2023-09-24T07:00:35.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.347+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=620
[2023-09-24T07:00:35.351+0000] {processor.py:157} INFO - Started process (PID=620) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:00:35.352+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:00:35.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.352+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:00:35.354+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.354+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:00:35.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.357+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:00:35.378+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.376+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:00:35.381+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.381+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:00:35.381+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:00:35.383+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.383+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:00:35.384+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.383+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:00:35.397+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.397+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:00:35.403+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.402+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:35.407+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.407+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:35.412+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.411+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:35.416+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.415+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:35.420+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.420+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:35.424+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.423+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:35.428+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.428+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:00:35.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.451+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:00:35.453+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.452+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:00:35.503+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:00:35.502+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:00:35.528+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.184 seconds
[2023-09-24T07:01:05.800+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.798+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 628)
[2023-09-24T07:01:05.802+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.801+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=628
[2023-09-24T07:01:05.806+0000] {processor.py:157} INFO - Started process (PID=628) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:01:05.806+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:01:05.807+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.807+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:01:05.810+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.810+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:01:05.814+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.814+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:01:05.835+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.833+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:01:05.838+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.838+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:01:05.839+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:01:05.840+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.840+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:01:05.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.840+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:01:05.856+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.856+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:01:05.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.863+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:05.870+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.870+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:05.875+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.874+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:05.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.879+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:05.884+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.884+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:05.888+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.888+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:05.893+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.893+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:05.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.918+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:01:05.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.919+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:01:05.967+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:05.967+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:01:05.994+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.195 seconds
[2023-09-24T07:01:36.144+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.142+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 636)
[2023-09-24T07:01:36.145+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.145+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=636
[2023-09-24T07:01:36.149+0000] {processor.py:157} INFO - Started process (PID=636) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:01:36.149+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:01:36.151+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.150+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:01:36.152+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.152+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:01:36.156+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.155+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:01:36.177+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.174+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:01:36.179+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.179+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:01:36.179+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:01:36.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.181+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:01:36.182+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.181+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:01:36.196+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.195+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:01:36.202+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.201+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:36.206+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.206+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:36.210+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.210+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:36.214+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.214+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:36.218+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.217+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:36.221+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.221+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:36.225+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.225+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:01:36.247+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.246+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:01:36.247+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.247+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:01:36.288+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:01:36.287+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:01:36.312+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T07:02:06.615+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.613+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 644)
[2023-09-24T07:02:06.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.815+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=644
[2023-09-24T07:02:06.819+0000] {processor.py:157} INFO - Started process (PID=644) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:02:06.820+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:02:06.821+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.821+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:02:06.823+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.822+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:02:06.826+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.826+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:02:06.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.844+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:02:06.849+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.848+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:02:06.849+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:02:06.851+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.850+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:02:06.851+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.851+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:02:06.865+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.865+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:02:06.872+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.871+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:06.878+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.877+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:06.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.881+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:06.886+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.885+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:06.890+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.890+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:06.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.893+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:06.897+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.897+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:06.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.919+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:02:06.921+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.921+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:02:06.960+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:06.960+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:02:06.983+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.371 seconds
[2023-09-24T07:02:37.336+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.334+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 652)
[2023-09-24T07:02:37.339+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.338+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=652
[2023-09-24T07:02:37.342+0000] {processor.py:157} INFO - Started process (PID=652) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:02:37.343+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:02:37.346+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.345+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:02:37.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.347+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:02:37.352+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.351+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:02:37.374+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.371+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:02:37.376+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.376+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:02:37.376+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:02:37.378+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.378+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:02:37.379+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.378+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:02:37.393+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.393+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:02:37.399+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.398+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:37.404+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.404+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:37.409+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.408+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:37.413+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.412+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:37.417+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.417+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:37.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.421+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:37.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.425+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:02:37.450+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.449+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:02:37.450+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.450+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:02:37.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:02:37.492+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:02:37.520+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.185 seconds
[2023-09-24T07:03:07.599+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.597+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 660)
[2023-09-24T07:03:07.601+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.601+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=660
[2023-09-24T07:03:07.605+0000] {processor.py:157} INFO - Started process (PID=660) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:03:07.605+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:03:07.607+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.606+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:03:07.608+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.608+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:03:07.612+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.611+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:03:07.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.630+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:03:07.636+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.635+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:03:07.636+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:03:07.638+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.638+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:03:07.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.638+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:03:07.654+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.653+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:03:07.659+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.658+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:07.664+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.663+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:07.668+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.668+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:07.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.672+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:07.676+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.675+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:07.680+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.679+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:07.685+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.684+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:07.707+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.707+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:03:07.708+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.708+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:03:07.751+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:07.750+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:03:07.776+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.179 seconds
[2023-09-24T07:03:37.911+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.909+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 668)
[2023-09-24T07:03:37.912+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.912+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=668
[2023-09-24T07:03:37.916+0000] {processor.py:157} INFO - Started process (PID=668) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:03:37.917+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:03:37.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.917+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:03:37.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.919+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:03:37.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.923+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:03:37.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.941+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:03:37.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.945+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:03:37.946+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:03:37.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.947+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:03:37.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.948+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:03:37.964+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.964+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:03:37.970+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.969+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:37.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.974+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:37.978+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.978+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:37.982+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.982+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:37.986+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.985+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:37.990+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.989+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:37.993+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:37.993+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:03:38.015+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:38.014+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:03:38.015+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:38.015+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:03:38.055+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:03:38.054+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:03:38.078+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T07:04:08.289+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.288+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 676)
[2023-09-24T07:04:08.292+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.291+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=676
[2023-09-24T07:04:08.297+0000] {processor.py:157} INFO - Started process (PID=676) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:04:08.297+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:04:08.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.298+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:04:08.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.301+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:04:08.305+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.304+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:04:08.327+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.324+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:04:08.330+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.329+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:04:08.330+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:04:08.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.331+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:04:08.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.332+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:04:08.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.347+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:04:08.354+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.353+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:08.359+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.358+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:08.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.362+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:08.366+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.366+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:08.372+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.371+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:08.376+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.375+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:08.381+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.380+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:08.409+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.409+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:04:08.411+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.410+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:04:08.469+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:08.469+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:04:08.519+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.231 seconds
[2023-09-24T07:04:38.775+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.773+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 684)
[2023-09-24T07:04:38.777+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.777+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=684
[2023-09-24T07:04:38.781+0000] {processor.py:157} INFO - Started process (PID=684) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:04:38.781+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:04:38.782+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.782+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:04:38.784+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.784+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:04:38.787+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.787+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:04:38.811+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.808+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:04:38.814+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.813+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:04:38.814+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:04:38.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.815+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:04:38.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.815+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:04:38.831+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.830+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:04:38.837+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.836+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:38.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.841+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:38.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.845+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:38.850+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.849+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:38.854+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.853+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:38.858+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.857+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:38.862+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.862+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:04:38.885+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.884+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:04:38.885+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.885+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:04:38.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:04:38.925+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:04:38.953+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T07:05:09.072+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.070+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 692)
[2023-09-24T07:05:09.074+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.074+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=692
[2023-09-24T07:05:09.078+0000] {processor.py:157} INFO - Started process (PID=692) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:05:09.078+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:05:09.079+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.079+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:05:09.081+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.081+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:05:09.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.084+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:05:09.113+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.110+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:05:09.115+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.115+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:05:09.115+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:05:09.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.117+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:05:09.118+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.117+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:05:09.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.132+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:05:09.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.137+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:09.143+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.143+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:09.149+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.148+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:09.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.153+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:09.158+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.158+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:09.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.162+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:09.167+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.166+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:09.189+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.189+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:05:09.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.190+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:05:09.232+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:09.231+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:05:09.258+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.188 seconds
[2023-09-24T07:05:39.375+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.373+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 700)
[2023-09-24T07:05:39.377+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.376+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=700
[2023-09-24T07:05:39.382+0000] {processor.py:157} INFO - Started process (PID=700) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:05:39.382+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:05:39.384+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.383+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:05:39.387+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.386+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:05:39.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.392+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:05:39.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.419+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:05:39.423+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.423+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:05:39.424+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:05:39.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.425+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:05:39.426+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.425+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:05:39.441+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.440+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:05:39.447+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.446+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:39.451+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.450+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:39.455+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.454+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:39.458+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.458+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:39.462+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.462+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:39.466+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.465+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:39.469+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.469+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:05:39.491+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.491+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:05:39.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.492+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:05:39.531+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:05:39.530+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:05:39.567+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.193 seconds
[2023-09-24T07:06:09.686+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.684+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 708)
[2023-09-24T07:06:09.687+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.687+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=708
[2023-09-24T07:06:09.691+0000] {processor.py:157} INFO - Started process (PID=708) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:06:09.692+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:06:09.693+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.692+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:06:09.694+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.694+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:06:09.698+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.698+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:06:09.719+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.717+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:06:09.722+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.721+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:06:09.722+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:06:09.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.723+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:06:09.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.724+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:06:09.739+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.739+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:06:09.745+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.744+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:09.750+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.750+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:09.755+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.754+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:09.759+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.759+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:09.763+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.763+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:09.767+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.767+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:09.771+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.771+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:09.794+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.793+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:06:09.794+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.794+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:06:09.844+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:09.844+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:06:09.870+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T07:06:40.055+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.054+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 716)
[2023-09-24T07:06:40.057+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.057+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=716
[2023-09-24T07:06:40.061+0000] {processor.py:157} INFO - Started process (PID=716) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:06:40.062+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:06:40.063+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.063+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:06:40.065+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.065+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:06:40.069+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.068+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:06:40.091+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.088+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:06:40.093+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.093+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:06:40.093+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:06:40.095+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.095+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:06:40.096+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.096+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:06:40.112+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.111+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:06:40.118+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.117+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:40.123+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.123+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:40.127+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.127+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:40.131+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.131+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:40.136+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.135+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:40.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.139+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:40.144+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.143+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:06:40.167+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.167+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:06:40.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.168+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:06:40.209+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:06:40.209+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:06:40.237+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.184 seconds
[2023-09-24T07:07:10.354+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.353+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 723)
[2023-09-24T07:07:10.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.356+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=723
[2023-09-24T07:07:10.360+0000] {processor.py:157} INFO - Started process (PID=723) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:07:10.360+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:07:10.361+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.361+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:07:10.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.363+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:07:10.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.366+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:07:10.387+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.385+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:07:10.389+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.389+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:07:10.390+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:07:10.391+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.391+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:07:10.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.391+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:07:10.407+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.407+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:07:10.413+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.412+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:10.418+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.417+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:10.422+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.421+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:10.426+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.425+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:10.430+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.430+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:10.434+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.434+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:10.438+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.438+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:10.461+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.460+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:07:10.461+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.461+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:07:10.501+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:10.500+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:07:10.528+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T07:07:40.616+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.615+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 731)
[2023-09-24T07:07:40.619+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.618+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=731
[2023-09-24T07:07:40.622+0000] {processor.py:157} INFO - Started process (PID=731) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:07:40.623+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:07:40.624+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.624+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:07:40.626+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.625+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:07:40.630+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.629+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:07:40.651+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.649+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:07:40.654+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.654+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:07:40.654+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:07:40.656+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.656+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:07:40.657+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.657+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:07:40.671+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.671+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:07:40.677+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.676+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:40.682+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.681+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:40.686+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.686+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:40.690+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.690+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:40.694+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.694+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:40.698+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.698+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:40.702+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.701+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:07:40.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.723+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:07:40.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.724+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:07:40.765+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:07:40.764+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:07:40.788+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.174 seconds
[2023-09-24T07:08:10.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:10.969+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 739)
[2023-09-24T07:08:10.973+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:10.972+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=739
[2023-09-24T07:08:10.978+0000] {processor.py:157} INFO - Started process (PID=739) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:08:10.978+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:08:10.980+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:10.979+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:08:10.982+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:10.981+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:08:10.986+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:10.985+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:08:11.007+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.004+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:08:11.009+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.009+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:08:11.010+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:08:11.011+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.011+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:08:11.012+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.012+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:08:11.026+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.025+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:08:11.032+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.031+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:11.037+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.036+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:11.041+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.041+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:11.046+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.045+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:11.050+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.050+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:11.054+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.054+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:11.058+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.058+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:11.080+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.080+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:08:11.081+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.080+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:08:11.122+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:11.121+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:08:11.146+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.177 seconds
[2023-09-24T07:08:41.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.351+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 747)
[2023-09-24T07:08:41.355+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.354+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=747
[2023-09-24T07:08:41.358+0000] {processor.py:157} INFO - Started process (PID=747) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:08:41.359+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:08:41.360+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.360+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:08:41.362+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.361+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:08:41.365+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.365+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:08:41.386+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.384+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:08:41.389+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.388+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:08:41.389+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:08:41.391+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.390+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:08:41.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.391+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:08:41.406+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.406+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:08:41.412+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.411+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:41.416+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.416+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:41.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.420+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:41.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.425+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:41.429+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.428+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:41.433+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.432+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:41.437+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.436+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:08:41.459+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.458+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:08:41.460+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.459+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:08:41.500+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:08:41.499+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:08:41.526+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T07:09:11.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.552+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 754)
[2023-09-24T07:09:11.555+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.555+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=754
[2023-09-24T07:09:11.559+0000] {processor.py:157} INFO - Started process (PID=754) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:09:11.559+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:09:11.560+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.560+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:09:11.562+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.561+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:09:11.566+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.565+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:09:11.586+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.584+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:09:11.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.588+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:09:11.589+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:09:11.591+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.590+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:09:11.591+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.591+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:09:11.617+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.617+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:09:11.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.622+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:11.628+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.628+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:11.633+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.632+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:11.637+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.636+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:11.641+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.640+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:11.645+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.644+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:11.649+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.648+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:11.671+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.671+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:09:11.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.672+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:09:11.714+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:11.714+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:09:11.739+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.187 seconds
[2023-09-24T07:09:41.922+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.920+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 761)
[2023-09-24T07:09:41.924+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.923+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=761
[2023-09-24T07:09:41.927+0000] {processor.py:157} INFO - Started process (PID=761) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:09:41.927+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:09:41.928+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.928+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:09:41.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.930+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:09:41.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.933+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:09:41.954+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.952+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:09:41.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.957+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:09:41.957+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:09:41.959+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.958+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:09:41.959+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.959+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:09:41.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.974+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:09:41.981+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.980+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:41.986+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.985+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:41.990+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.989+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:41.994+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.993+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:41.998+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:41.997+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:42.002+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:42.001+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:42.006+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:42.005+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:09:42.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:42.029+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:09:42.031+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:42.031+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:09:42.077+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:09:42.077+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:09:42.102+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T07:10:12.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.297+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 768)
[2023-09-24T07:10:12.300+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.300+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=768
[2023-09-24T07:10:12.304+0000] {processor.py:157} INFO - Started process (PID=768) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:10:12.304+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:10:12.306+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.305+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:10:12.307+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.307+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:10:12.311+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.311+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:10:12.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.330+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:10:12.334+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.334+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:10:12.334+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:10:12.336+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.336+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:10:12.336+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.336+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:10:12.351+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.351+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:10:12.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.357+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:12.362+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.362+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:12.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.366+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:12.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.370+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:12.374+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.374+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:12.378+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.378+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:12.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.382+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:12.404+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.404+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:10:12.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.404+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:10:12.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:12.443+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:10:12.470+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T07:10:42.799+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.796+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 776)
[2023-09-24T07:10:42.801+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.801+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=776
[2023-09-24T07:10:42.805+0000] {processor.py:157} INFO - Started process (PID=776) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:10:42.806+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:10:42.807+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.807+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:10:42.809+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.808+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:10:42.812+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.812+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:10:42.832+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.830+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:10:42.835+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.834+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:10:42.835+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:10:42.837+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.837+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:10:42.838+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.837+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:10:42.852+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.851+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:10:42.858+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.857+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:42.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.863+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:42.868+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.868+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:42.875+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.875+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:42.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.882+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:42.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.889+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:42.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.894+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:10:42.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.917+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:10:42.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.918+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:10:42.962+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:10:42.961+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:10:42.995+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.199 seconds
[2023-09-24T07:11:13.203+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.202+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 784)
[2023-09-24T07:11:13.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.205+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=784
[2023-09-24T07:11:13.209+0000] {processor.py:157} INFO - Started process (PID=784) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:11:13.209+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:11:13.210+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.210+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:11:13.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.211+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:11:13.215+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.215+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:11:13.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.233+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:11:13.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.236+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:11:13.237+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:11:13.239+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.238+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:11:13.239+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.239+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:11:13.255+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.254+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:11:13.272+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.271+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:13.277+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.276+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:13.280+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.280+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:13.284+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.284+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:13.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.288+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:13.302+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.302+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:13.306+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.306+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:13.328+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.327+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:11:13.328+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.328+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:11:13.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:13.366+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:11:13.393+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.192 seconds
[2023-09-24T07:11:43.705+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.703+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 792)
[2023-09-24T07:11:43.708+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.707+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=792
[2023-09-24T07:11:43.712+0000] {processor.py:157} INFO - Started process (PID=792) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:11:43.713+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:11:43.714+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.713+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:11:43.715+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.715+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:11:43.719+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.719+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:11:43.740+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.738+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:11:43.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.743+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:11:43.743+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:11:43.746+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.745+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:11:43.746+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.746+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:11:43.760+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.760+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:11:43.766+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.765+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:43.771+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.771+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:43.775+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.775+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:43.779+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.779+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:43.783+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.783+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:43.789+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.788+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:43.793+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.793+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:11:43.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.815+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:11:43.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.815+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:11:43.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:11:43.859+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:11:43.885+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.183 seconds
[2023-09-24T07:12:14.077+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.076+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 800)
[2023-09-24T07:12:14.079+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.078+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=800
[2023-09-24T07:12:14.083+0000] {processor.py:157} INFO - Started process (PID=800) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:12:14.083+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:12:14.084+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.084+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:12:14.086+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.086+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:12:14.090+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.089+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:12:14.111+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.109+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:12:14.114+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.114+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:12:14.114+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:12:14.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.116+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:12:14.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.117+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:12:14.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.138+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:12:14.144+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.143+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:14.149+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.148+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:14.153+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.153+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:14.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.156+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:14.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.161+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:14.165+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.165+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:14.169+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.169+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:14.192+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.192+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:12:14.193+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.192+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:12:14.235+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:14.234+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:12:14.260+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.185 seconds
[2023-09-24T07:12:44.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.509+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 808)
[2023-09-24T07:12:44.512+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.512+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=808
[2023-09-24T07:12:44.516+0000] {processor.py:157} INFO - Started process (PID=808) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:12:44.516+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:12:44.518+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.517+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:12:44.519+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.519+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:12:44.523+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.522+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:12:44.550+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.545+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:12:44.552+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.552+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:12:44.553+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:12:44.555+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.554+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:12:44.555+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.555+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:12:44.570+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.570+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:12:44.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.588+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:44.594+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.593+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:44.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.598+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:44.602+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.601+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:44.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.605+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:44.609+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.609+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:44.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.613+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:12:44.636+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.635+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:12:44.637+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.636+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:12:44.676+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:12:44.676+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:12:44.705+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.197 seconds
[2023-09-24T07:13:14.752+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.750+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 816)
[2023-09-24T07:13:14.754+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.753+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=816
[2023-09-24T07:13:14.758+0000] {processor.py:157} INFO - Started process (PID=816) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:13:14.759+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:13:14.760+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.760+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:13:14.762+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.762+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:13:14.767+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.766+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:13:14.792+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.790+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:13:14.796+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.795+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:13:14.797+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:13:14.800+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.800+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:13:14.801+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.800+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:13:14.819+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.819+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:13:14.828+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.827+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:14.835+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.834+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:14.840+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.839+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:14.845+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.844+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:14.850+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.849+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:14.855+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.854+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:14.860+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.859+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:14.890+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.889+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:13:14.891+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.891+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:13:14.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:14.947+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:13:14.987+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.236 seconds
[2023-09-24T07:13:45.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.164+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 824)
[2023-09-24T07:13:45.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.167+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=824
[2023-09-24T07:13:45.172+0000] {processor.py:157} INFO - Started process (PID=824) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:13:45.172+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:13:45.176+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.175+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:13:45.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.178+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:13:45.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.183+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:13:45.211+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.208+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:13:45.214+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.214+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:13:45.214+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:13:45.216+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.216+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:13:45.217+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.216+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:13:45.232+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.231+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:13:45.238+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.237+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:45.243+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.243+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:45.247+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.247+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:45.252+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.251+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:45.256+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.255+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:45.260+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.260+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:45.264+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.264+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:13:45.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.300+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:13:45.302+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.301+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:13:45.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:13:45.352+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:13:45.379+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.215 seconds
[2023-09-24T07:14:15.484+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.482+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 831)
[2023-09-24T07:14:15.485+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.485+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=831
[2023-09-24T07:14:15.489+0000] {processor.py:157} INFO - Started process (PID=831) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:14:15.490+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:14:15.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.490+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:14:15.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.493+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:14:15.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.497+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:14:15.521+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.519+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:14:15.524+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.523+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:14:15.524+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:14:15.526+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.525+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:14:15.526+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.526+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:14:15.540+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.540+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:14:15.546+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.545+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:15.551+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.551+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:15.555+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.555+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:15.559+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.558+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:15.563+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.562+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:15.566+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.566+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:15.570+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.570+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:15.592+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.591+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:14:15.593+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.592+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:14:15.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:15.632+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:14:15.661+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.179 seconds
[2023-09-24T07:14:45.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:45.953+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 839)
[2023-09-24T07:14:45.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:45.961+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=839
[2023-09-24T07:14:45.968+0000] {processor.py:157} INFO - Started process (PID=839) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:14:45.969+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:14:45.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:45.970+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:14:45.975+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:45.974+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:14:45.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:45.982+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:14:46.017+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.013+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:14:46.021+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.020+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:14:46.022+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:14:46.028+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.027+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:14:46.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.029+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:14:46.057+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.056+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:14:46.069+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.067+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:46.078+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.077+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:46.086+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.085+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:46.096+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.095+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:46.106+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.105+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:46.116+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.115+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:46.125+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.124+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:14:46.173+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.172+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:14:46.174+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.173+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:14:46.252+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:14:46.251+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:14:46.302+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.350 seconds
[2023-09-24T07:15:16.593+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.589+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 847)
[2023-09-24T07:15:16.596+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.596+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=847
[2023-09-24T07:15:16.603+0000] {processor.py:157} INFO - Started process (PID=847) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:15:16.604+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:15:16.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.605+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:15:16.609+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.608+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:15:16.614+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.614+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:15:16.649+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.646+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:15:16.653+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.652+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:15:16.654+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:15:16.657+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.656+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:15:16.658+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.657+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:15:16.681+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.680+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:15:16.690+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.689+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:16.700+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.699+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:16.707+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.706+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:16.713+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.712+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:16.719+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.718+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:16.725+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.724+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:16.730+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.729+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:16.759+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.759+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:15:16.760+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.760+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:15:16.822+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:16.821+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:15:16.851+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.262 seconds
[2023-09-24T07:15:46.876+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.875+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 855)
[2023-09-24T07:15:46.878+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.878+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=855
[2023-09-24T07:15:46.887+0000] {processor.py:157} INFO - Started process (PID=855) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:15:46.888+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:15:46.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.888+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:15:46.891+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.890+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:15:46.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.894+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:15:46.915+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.913+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:15:46.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.917+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:15:46.918+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:15:46.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.920+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:15:46.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.920+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:15:46.937+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.936+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:15:46.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.942+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:46.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.948+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:46.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.953+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:46.958+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.957+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:46.962+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.962+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:46.969+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.968+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:46.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:46.973+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:15:47.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:47.000+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:15:47.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:47.001+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:15:47.044+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:15:47.043+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:15:47.070+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.196 seconds
[2023-09-24T07:16:17.156+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.154+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 863)
[2023-09-24T07:16:17.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.157+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=863
[2023-09-24T07:16:17.161+0000] {processor.py:157} INFO - Started process (PID=863) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:16:17.162+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:16:17.164+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.163+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:16:17.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.165+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:16:17.169+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.169+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:16:17.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.188+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:16:17.192+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.192+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:16:17.192+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:16:17.195+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.194+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:16:17.195+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.195+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:16:17.211+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.210+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:16:17.217+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.216+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:17.221+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.221+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:17.225+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.224+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:17.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.230+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:17.235+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.234+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:17.239+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.239+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:17.244+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.243+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:17.267+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.266+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:16:17.268+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.267+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:16:17.323+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:17.323+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:16:17.351+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.197 seconds
[2023-09-24T07:16:47.545+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.543+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 871)
[2023-09-24T07:16:47.547+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.546+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=871
[2023-09-24T07:16:47.551+0000] {processor.py:157} INFO - Started process (PID=871) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:16:47.552+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:16:47.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.552+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:16:47.555+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.554+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:16:47.559+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.558+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:16:47.580+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.578+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:16:47.583+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.583+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:16:47.584+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:16:47.586+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.585+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:16:47.586+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.586+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:16:47.601+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.601+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:16:47.608+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.607+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:47.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.612+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:47.617+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.617+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:47.622+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.622+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:47.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.626+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:47.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.632+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:47.638+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.638+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:16:47.671+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.671+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:16:47.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.672+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:16:47.723+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:16:47.723+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:16:47.756+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.214 seconds
[2023-09-24T07:17:17.787+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.784+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 879)
[2023-09-24T07:17:17.790+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.789+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=879
[2023-09-24T07:17:17.796+0000] {processor.py:157} INFO - Started process (PID=879) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:17:17.797+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:17:17.798+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.797+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:17:17.800+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.800+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:17:17.805+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.804+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:17:17.830+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.828+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:17:17.834+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.833+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:17:17.834+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:17:17.836+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.836+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:17:17.837+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.837+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:17:17.855+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.854+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:17:17.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.862+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:17.869+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.869+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:17.875+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.874+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:17.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.880+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:17.888+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.887+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:17.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.893+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:17.899+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.898+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:17.928+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.927+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:17:17.928+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.928+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:17:17.987+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:17.986+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:17:18.018+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.234 seconds
[2023-09-24T07:17:48.195+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.193+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 887)
[2023-09-24T07:17:48.197+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.197+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=887
[2023-09-24T07:17:48.201+0000] {processor.py:157} INFO - Started process (PID=887) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:17:48.202+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:17:48.203+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.203+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:17:48.217+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.217+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:17:48.222+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.221+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:17:48.246+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.244+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:17:48.249+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.248+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:17:48.249+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:17:48.251+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.251+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:17:48.252+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.251+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:17:48.268+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.267+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:17:48.275+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.274+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:48.280+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.280+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:48.285+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.285+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:48.290+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.290+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:48.295+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.294+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:48.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.299+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:48.304+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.304+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:17:48.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.331+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:17:48.333+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.332+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:17:48.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:17:48.381+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:17:48.411+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.217 seconds
[2023-09-24T07:18:18.519+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.517+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 900)
[2023-09-24T07:18:18.521+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.521+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=900
[2023-09-24T07:18:18.526+0000] {processor.py:157} INFO - Started process (PID=900) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:18:18.526+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:18:18.528+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.527+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:18:18.529+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.529+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:18:18.534+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.533+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:18:18.558+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.555+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:18:18.571+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.571+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:18:18.572+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:18:18.574+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.574+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:18:18.575+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.574+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:18:18.596+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.595+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:18:18.603+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.602+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:18.608+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.608+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:18.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.613+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:18.618+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.618+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:18.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.623+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:18.629+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.628+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:18.634+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.633+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:18.668+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.668+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:18:18.669+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.669+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:18:18.727+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:18.726+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:18:18.764+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.246 seconds
[2023-09-24T07:18:49.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.028+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 908)
[2023-09-24T07:18:49.056+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.033+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=908
[2023-09-24T07:18:49.062+0000] {processor.py:157} INFO - Started process (PID=908) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:18:49.063+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:18:49.065+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.064+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:18:49.073+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.071+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:18:49.082+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.081+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:18:49.321+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.308+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:18:49.344+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.343+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:18:49.344+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:18:49.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.346+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:18:49.354+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.353+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:18:49.432+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.430+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:18:49.450+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.448+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:49.460+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.459+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:49.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.466+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:49.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.473+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:49.481+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.480+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:49.488+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.488+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:49.496+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.495+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:18:49.535+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.534+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:18:49.536+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.536+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:18:49.621+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:18:49.620+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:18:49.673+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.646 seconds
[2023-09-24T07:19:19.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.932+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 922)
[2023-09-24T07:19:19.936+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.935+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=922
[2023-09-24T07:19:19.940+0000] {processor.py:157} INFO - Started process (PID=922) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:19:19.940+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:19:19.942+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.941+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:19:19.944+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.943+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:19:19.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.948+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:19:19.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.971+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:19:19.977+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.976+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:19:19.977+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:19:19.979+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.979+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:19:19.980+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.980+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:19:19.998+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:19.998+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:19:20.019+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.017+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:20.024+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.024+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:20.029+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.029+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:20.034+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.033+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:20.039+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.038+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:20.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.043+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:20.048+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.047+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:20.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.074+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:19:20.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.075+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:19:20.124+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:20.124+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:19:20.158+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.226 seconds
[2023-09-24T07:19:50.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.356+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 929)
[2023-09-24T07:19:50.360+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.359+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=929
[2023-09-24T07:19:50.364+0000] {processor.py:157} INFO - Started process (PID=929) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:19:50.365+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:19:50.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.366+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:19:50.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.369+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:19:50.374+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.373+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:19:50.399+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.396+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:19:50.402+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.401+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:19:50.402+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:19:50.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.404+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:19:50.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.405+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:19:50.423+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.422+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:19:50.430+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.428+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:50.436+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.435+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:50.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.440+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:50.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.444+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:50.450+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.449+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:50.454+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.454+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:50.459+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.458+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:19:50.484+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.484+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:19:50.485+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.485+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:19:50.531+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:19:50.531+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:19:50.585+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.229 seconds
[2023-09-24T07:20:20.803+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.801+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 937)
[2023-09-24T07:20:20.805+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.804+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=937
[2023-09-24T07:20:20.809+0000] {processor.py:157} INFO - Started process (PID=937) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:20:20.810+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:20:20.811+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.811+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:20:20.814+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.813+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:20:20.818+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.817+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:20:20.843+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.841+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:20:20.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.846+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:20:20.847+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:20:20.849+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.848+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:20:20.849+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.849+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:20:20.867+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.867+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:20:20.876+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.875+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:20.883+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.882+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:20.888+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.888+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:20.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.893+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:20.907+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.907+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:20.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.913+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:20.921+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.921+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:20.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.952+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:20:20.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:20.953+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:20:21.015+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:21.014+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:20:21.061+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.260 seconds
[2023-09-24T07:20:51.297+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.295+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 945)
[2023-09-24T07:20:51.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.298+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=945
[2023-09-24T07:20:51.302+0000] {processor.py:157} INFO - Started process (PID=945) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:20:51.303+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:20:51.304+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.304+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:20:51.306+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.306+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:20:51.310+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.309+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:20:51.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.330+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:20:51.335+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.335+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:20:51.336+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:20:51.338+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.337+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:20:51.338+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.338+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:20:51.354+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.353+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:20:51.360+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.359+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:51.365+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.365+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:51.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.369+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:51.374+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.374+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:51.379+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.378+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:51.383+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.382+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:51.387+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.387+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:20:51.413+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.413+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:20:51.414+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.414+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:20:51.460+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:20:51.460+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:20:51.488+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.192 seconds
[2023-09-24T07:21:21.694+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.692+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 953)
[2023-09-24T07:21:21.695+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.695+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=953
[2023-09-24T07:21:21.699+0000] {processor.py:157} INFO - Started process (PID=953) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:21:21.699+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:21:21.701+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.700+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:21:21.702+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.702+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:21:21.706+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.705+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:21:21.726+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.724+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:21:21.729+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.729+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:21:21.729+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:21:21.731+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.731+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:21:21.732+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.731+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:21:21.746+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.746+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:21:21.752+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.751+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:21.757+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.756+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:21.761+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.761+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:21.765+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.765+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:21.769+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.769+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:21.773+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.773+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:21.778+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.777+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:21.801+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.800+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:21:21.802+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.801+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:21:21.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:21.846+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:21:21.873+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T07:21:51.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:51.948+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 961)
[2023-09-24T07:21:51.954+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:51.953+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=961
[2023-09-24T07:21:51.968+0000] {processor.py:157} INFO - Started process (PID=961) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:21:51.969+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:21:51.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:51.970+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:21:51.973+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:51.973+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:21:51.979+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:51.978+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:21:52.010+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.006+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:21:52.013+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.013+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:21:52.014+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:21:52.016+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.016+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:21:52.017+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.017+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:21:52.040+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.039+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:21:52.049+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.048+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:52.061+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.060+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:52.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.067+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:52.077+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.076+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:52.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.084+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:52.106+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.105+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:52.116+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.115+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:21:52.173+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.173+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:21:52.175+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.174+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:21:52.241+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:21:52.240+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:21:52.285+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.337 seconds
[2023-09-24T07:22:22.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.508+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 969)
[2023-09-24T07:22:22.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.513+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=969
[2023-09-24T07:22:22.518+0000] {processor.py:157} INFO - Started process (PID=969) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:22:22.519+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:22:22.521+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.521+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:22:22.523+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.523+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:22:22.528+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.528+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:22:22.557+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.554+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:22:22.561+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.560+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:22:22.561+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:22:22.563+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.563+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:22:22.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.564+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:22:22.584+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.583+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:22:22.594+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.592+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:22.601+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.600+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:22.607+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.606+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:22.612+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.612+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:22.618+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.618+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:22.624+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.623+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:22.629+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.629+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:22.661+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.660+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:22:22.662+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.661+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:22:22.719+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:22.719+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:22:22.757+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.249 seconds
[2023-09-24T07:22:52.963+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:52.961+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 977)
[2023-09-24T07:22:52.965+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:52.965+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=977
[2023-09-24T07:22:52.969+0000] {processor.py:157} INFO - Started process (PID=977) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:22:52.969+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:22:52.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:52.970+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:22:52.972+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:52.972+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:22:52.976+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:52.976+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:22:52.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:52.995+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:22:53.000+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:52.999+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:22:53.001+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:22:53.003+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.002+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:22:53.003+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.003+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:22:53.019+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.019+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:22:53.026+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.025+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:53.031+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.030+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:53.036+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.035+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:53.040+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.039+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:53.044+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.044+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:53.049+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.048+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:53.053+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.053+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:22:53.077+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.077+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:22:53.078+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.078+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:22:53.122+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:22:53.122+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:22:53.152+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.191 seconds
[2023-09-24T07:23:23.177+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.175+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 985)
[2023-09-24T07:23:23.179+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.178+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=985
[2023-09-24T07:23:23.183+0000] {processor.py:157} INFO - Started process (PID=985) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:23:23.184+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:23:23.185+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.184+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:23:23.187+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.186+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:23:23.191+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.190+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:23:23.215+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.212+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:23:23.218+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.218+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:23:23.218+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:23:23.220+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.220+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:23:23.221+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.221+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:23:23.238+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.237+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:23:23.245+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.244+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:23.251+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.250+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:23.255+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.255+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:23.260+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.260+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:23.265+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.265+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:23.270+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.270+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:23.275+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.274+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:23.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.300+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:23:23.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.301+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:23:23.354+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:23.354+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:23:23.386+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.211 seconds
[2023-09-24T07:23:53.580+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.578+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 993)
[2023-09-24T07:23:53.583+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.582+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=993
[2023-09-24T07:23:53.587+0000] {processor.py:157} INFO - Started process (PID=993) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:23:53.588+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:23:53.590+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.589+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:23:53.592+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.592+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:23:53.597+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.597+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:23:53.628+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.624+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:23:53.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.631+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:23:53.632+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:23:53.634+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.633+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:23:53.634+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.634+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:23:53.653+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.652+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:23:53.661+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.659+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:53.667+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.666+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:53.673+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.672+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:53.678+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.678+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:53.684+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.683+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:53.690+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.689+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:53.695+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.695+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:23:53.725+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.725+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:23:53.727+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.726+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:23:53.784+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:23:53.784+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:23:53.818+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.240 seconds
[2023-09-24T07:24:23.853+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.851+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1000)
[2023-09-24T07:24:23.858+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.857+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1000
[2023-09-24T07:24:23.864+0000] {processor.py:157} INFO - Started process (PID=1000) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:24:23.865+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:24:23.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.866+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:24:23.870+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.869+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:24:23.876+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.876+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:24:23.910+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.905+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:24:23.915+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.914+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:24:23.916+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:24:23.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.918+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:24:23.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.919+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:24:23.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.947+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:24:23.964+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.962+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:23.978+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.976+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:23.988+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.987+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:23.998+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:23.997+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:24.009+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:24.007+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:24.016+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:24.015+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:24.025+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:24.022+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:24.077+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:24.076+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:24:24.079+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:24.078+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:24:24.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:24.160+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:24:24.210+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.359 seconds
[2023-09-24T07:24:54.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.390+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1008)
[2023-09-24T07:24:54.394+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.394+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1008
[2023-09-24T07:24:54.399+0000] {processor.py:157} INFO - Started process (PID=1008) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:24:54.400+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:24:54.402+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.401+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:24:54.404+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.404+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:24:54.409+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.409+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:24:54.437+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.434+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:24:54.441+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.440+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:24:54.441+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:24:54.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.443+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:24:54.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.444+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:24:54.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.464+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:24:54.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.472+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:54.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.480+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:54.486+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.485+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:54.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.491+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:54.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.497+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:54.504+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.503+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:54.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.509+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:24:54.540+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.539+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:24:54.541+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.540+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:24:54.600+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:24:54.599+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:24:54.636+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.247 seconds
[2023-09-24T07:25:24.678+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.676+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1015)
[2023-09-24T07:25:24.681+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.680+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1015
[2023-09-24T07:25:24.687+0000] {processor.py:157} INFO - Started process (PID=1015) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:25:24.688+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:25:24.690+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.689+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:25:24.692+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.691+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:25:24.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.696+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:25:24.727+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.724+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:25:24.730+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.730+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:25:24.731+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:25:24.734+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.733+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:25:24.734+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.734+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:25:24.757+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.756+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:25:24.769+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.767+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:24.779+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.778+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:24.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.787+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:24.794+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.794+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:24.802+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.802+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:24.809+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.808+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:24.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.815+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:24.853+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.852+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:25:24.854+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.853+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:25:24.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:24.919+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:25:24.964+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.288 seconds
[2023-09-24T07:25:55.060+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.058+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1023)
[2023-09-24T07:25:55.062+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.061+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1023
[2023-09-24T07:25:55.066+0000] {processor.py:157} INFO - Started process (PID=1023) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:25:55.067+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:25:55.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.068+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:25:55.070+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.070+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:25:55.082+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.081+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:25:55.106+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.103+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:25:55.109+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.108+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:25:55.109+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:25:55.111+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.111+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:25:55.112+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.111+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:25:55.128+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.127+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:25:55.134+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.133+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:55.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.139+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:55.144+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.143+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:55.148+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.148+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:55.152+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.152+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:55.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.156+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:55.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.161+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:25:55.186+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.186+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:25:55.187+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.187+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:25:55.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:25:55.234+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:25:55.261+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.203 seconds
[2023-09-24T07:26:25.433+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.431+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1031)
[2023-09-24T07:26:25.436+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.435+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1031
[2023-09-24T07:26:25.441+0000] {processor.py:157} INFO - Started process (PID=1031) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:26:25.442+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:26:25.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.443+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:26:25.447+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.446+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:26:25.454+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.453+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:26:25.496+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.491+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:26:25.501+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.501+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:26:25.502+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:26:25.505+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.504+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:26:25.506+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.505+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:26:25.532+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.531+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:26:25.541+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.539+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:25.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.547+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:25.555+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.554+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:25.563+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.562+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:25.569+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.568+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:25.576+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.575+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:25.584+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.583+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:25.629+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.627+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:26:25.630+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.629+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:26:25.700+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:25.699+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:26:25.753+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.322 seconds
[2023-09-24T07:26:55.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:55.973+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1038)
[2023-09-24T07:26:55.977+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:55.976+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1038
[2023-09-24T07:26:55.981+0000] {processor.py:157} INFO - Started process (PID=1038) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:26:55.981+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:26:55.982+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:55.982+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:26:55.984+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:55.984+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:26:55.988+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:55.988+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:26:56.010+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.008+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:26:56.012+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.012+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:26:56.013+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:26:56.015+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.014+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:26:56.015+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.015+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:26:56.031+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.031+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:26:56.038+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.037+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:56.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.042+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:56.047+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.047+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:56.052+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.051+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:56.060+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.056+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:56.064+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.064+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:56.069+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.068+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:26:56.093+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.093+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:26:56.094+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.093+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:26:56.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:26:56.137+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:26:56.167+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.195 seconds
[2023-09-24T07:27:26.225+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.223+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1046)
[2023-09-24T07:27:26.227+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.226+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1046
[2023-09-24T07:27:26.231+0000] {processor.py:157} INFO - Started process (PID=1046) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:27:26.231+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:27:26.232+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.232+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:27:26.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.234+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:27:26.239+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.237+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:27:26.266+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.264+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:27:26.269+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.268+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:27:26.269+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:27:26.271+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.271+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:27:26.272+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.271+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:27:26.288+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.288+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:27:26.296+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.294+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:26.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.300+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:26.305+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.305+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:26.310+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.309+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:26.314+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.314+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:26.319+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.318+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:26.323+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.323+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:26.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.347+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:27:26.349+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.348+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:27:26.395+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:26.394+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:27:26.424+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.201 seconds
[2023-09-24T07:27:56.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.629+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1054)
[2023-09-24T07:27:56.634+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.633+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1054
[2023-09-24T07:27:56.638+0000] {processor.py:157} INFO - Started process (PID=1054) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:27:56.639+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:27:56.640+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.639+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:27:56.642+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.641+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:27:56.646+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.646+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:27:56.667+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.664+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:27:56.670+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.669+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:27:56.670+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:27:56.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.672+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:27:56.673+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.673+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:27:56.688+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.688+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:27:56.694+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.693+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:56.698+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.698+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:56.702+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.702+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:56.706+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.705+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:56.710+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.709+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:56.714+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.713+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:56.718+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.717+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:27:56.740+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.739+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:27:56.740+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.740+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:27:56.784+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:27:56.784+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:27:56.811+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.183 seconds
[2023-09-24T07:28:26.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:26.982+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1062)
[2023-09-24T07:28:26.987+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:26.985+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1062
[2023-09-24T07:28:26.995+0000] {processor.py:157} INFO - Started process (PID=1062) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:28:26.995+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:28:26.996+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:26.996+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:28:26.998+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:26.998+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:28:27.010+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.009+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:28:27.039+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.035+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:28:27.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.043+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:28:27.044+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:28:27.046+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.045+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:28:27.046+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.046+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:28:27.081+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.080+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:28:27.092+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.091+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:27.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.096+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:27.103+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.102+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:27.110+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.109+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:27.115+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.115+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:27.122+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.122+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:27.128+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.128+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:27.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.160+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:28:27.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.161+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:28:27.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:27.229+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:28:27.271+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.290 seconds
[2023-09-24T07:28:57.675+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:57.672+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1070)
[2023-09-24T07:28:57.681+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:57.680+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1070
[2023-09-24T07:28:57.688+0000] {processor.py:157} INFO - Started process (PID=1070) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:28:57.697+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:28:57.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:57.699+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:28:57.863+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:57.863+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:28:57.958+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:57.957+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:28:58.219+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.154+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:28:58.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.229+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:28:58.231+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:28:58.236+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.234+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:28:58.239+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.238+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:28:58.320+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.319+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:28:58.333+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.331+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:58.344+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.343+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:58.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.353+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:58.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.365+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:58.380+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.379+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:58.390+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.389+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:58.398+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.397+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:28:58.495+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.494+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:28:58.496+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:58.495+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:28:59.041+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:28:59.033+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:28:59.285+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.613 seconds
[2023-09-24T07:29:29.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.671+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1078)
[2023-09-24T07:29:29.674+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.674+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1078
[2023-09-24T07:29:29.678+0000] {processor.py:157} INFO - Started process (PID=1078) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:29:29.678+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:29:29.680+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.679+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:29:29.681+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.681+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:29:29.686+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.686+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:29:29.707+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.705+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:29:29.710+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.709+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:29:29.710+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:29:29.712+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.712+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:29:29.713+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.712+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:29:29.728+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.728+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:29:29.734+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.733+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:29:29.739+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.739+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:29:29.744+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.743+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:29:29.749+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.748+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:29:29.753+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.753+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:29:29.758+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.757+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:29:29.762+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.761+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:29:29.786+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.785+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:29:29.786+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.786+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:29:29.832+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:29:29.832+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:29:29.859+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.188 seconds
[2023-09-24T07:30:00.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.083+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1086)
[2023-09-24T07:30:00.086+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.086+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1086
[2023-09-24T07:30:00.090+0000] {processor.py:157} INFO - Started process (PID=1086) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:30:00.091+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:30:00.092+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.091+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:30:00.093+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.093+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:30:00.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.097+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:30:00.120+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.118+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:30:00.122+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.122+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:30:00.122+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:30:00.124+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.124+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:30:00.125+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.125+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:30:00.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.139+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:30:00.146+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.145+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:00.150+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.150+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:00.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.154+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:00.158+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.158+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:00.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.161+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:00.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.166+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:00.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.170+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:00.192+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.191+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:30:00.192+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.192+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:30:00.233+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:00.232+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:30:00.256+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T07:30:30.568+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.566+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1094)
[2023-09-24T07:30:30.570+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.569+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1094
[2023-09-24T07:30:30.574+0000] {processor.py:157} INFO - Started process (PID=1094) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:30:30.575+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:30:30.576+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.576+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:30:30.578+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.577+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:30:30.581+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.581+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:30:30.601+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.599+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:30:30.604+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.603+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:30:30.604+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:30:30.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.605+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:30:30.607+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.606+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:30:30.621+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.621+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:30:30.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.626+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:30.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.631+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:30.636+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.635+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:30.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.639+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:30.643+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.643+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:30.647+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.646+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:30.651+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.650+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:30:30.673+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.672+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:30:30.673+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.673+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:30:30.716+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:30:30.715+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:30:30.742+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.176 seconds
[2023-09-24T07:31:00.950+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:00.948+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1102)
[2023-09-24T07:31:00.952+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:00.951+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1102
[2023-09-24T07:31:00.956+0000] {processor.py:157} INFO - Started process (PID=1102) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:31:00.956+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:31:00.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:00.957+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:31:00.959+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:00.959+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:31:00.964+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:00.963+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:31:00.989+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:00.987+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:31:00.993+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:00.992+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:31:00.993+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:31:00.995+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:00.995+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:31:00.996+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:00.995+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:31:01.011+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.010+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:31:01.017+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.016+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:01.021+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.021+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:01.025+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.025+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:01.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.029+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:01.034+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.034+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:01.038+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.038+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:01.042+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.042+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:01.064+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.063+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:31:01.065+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.064+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:31:01.104+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:01.103+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:31:01.127+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.179 seconds
[2023-09-24T07:31:31.334+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.333+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1110)
[2023-09-24T07:31:31.336+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.336+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1110
[2023-09-24T07:31:31.345+0000] {processor.py:157} INFO - Started process (PID=1110) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:31:31.346+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:31:31.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.346+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:31:31.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.348+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:31:31.352+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.351+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:31:31.377+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.375+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:31:31.380+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.379+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:31:31.380+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:31:31.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.381+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:31:31.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.382+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:31:31.398+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.397+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:31:31.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.404+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:31.409+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.409+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:31.413+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.413+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:31.417+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.417+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:31.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.421+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:31.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.425+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:31.429+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.428+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:31:31.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.451+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:31:31.453+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.452+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:31:31.495+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:31:31.494+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:31:31.519+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.187 seconds
[2023-09-24T07:32:01.809+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.807+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1118)
[2023-09-24T07:32:01.810+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.810+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1118
[2023-09-24T07:32:01.814+0000] {processor.py:157} INFO - Started process (PID=1118) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:32:01.814+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:32:01.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.815+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:32:01.817+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.817+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:32:01.821+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.820+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:32:01.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.839+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:32:01.844+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.844+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:32:01.844+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:32:01.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.845+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:32:01.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.846+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:32:01.862+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.862+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:32:01.871+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.870+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:01.875+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.875+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:01.879+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.879+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:01.883+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.882+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:01.886+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.886+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:01.890+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.890+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:01.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.894+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:01.915+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.915+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:32:01.916+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.916+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:32:01.956+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:01.956+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:32:01.980+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.172 seconds
[2023-09-24T07:32:32.029+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.027+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1126)
[2023-09-24T07:32:32.031+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.030+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1126
[2023-09-24T07:32:32.034+0000] {processor.py:157} INFO - Started process (PID=1126) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:32:32.035+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:32:32.036+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.035+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:32:32.037+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.037+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:32:32.041+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.041+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:32:32.061+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.059+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:32:32.063+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.063+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:32:32.064+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:32:32.066+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.065+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:32:32.066+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.066+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:32:32.083+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.083+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:32:32.089+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.088+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:32.094+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.093+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:32.098+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.098+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:32.103+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.102+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:32.107+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.106+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:32.111+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.110+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:32.115+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.115+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:32:32.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.139+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:32:32.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.140+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:32:32.187+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:32:32.186+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:32:32.213+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T07:33:02.400+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.398+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1133)
[2023-09-24T07:33:02.402+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.402+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1133
[2023-09-24T07:33:02.407+0000] {processor.py:157} INFO - Started process (PID=1133) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:33:02.407+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:33:02.409+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.408+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:33:02.411+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.410+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:33:02.416+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.415+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:33:02.441+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.439+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:33:02.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.444+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:33:02.444+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:33:02.447+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.446+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:33:02.448+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.447+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:33:02.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.465+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:33:02.473+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.472+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:02.479+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.478+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:02.485+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.484+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:02.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.493+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:02.500+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.499+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:02.505+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.505+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:02.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.510+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:02.541+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.540+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:33:02.542+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.541+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:33:02.595+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:02.594+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:33:02.624+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.227 seconds
[2023-09-24T07:33:32.649+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.647+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1141)
[2023-09-24T07:33:32.653+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.652+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1141
[2023-09-24T07:33:32.658+0000] {processor.py:157} INFO - Started process (PID=1141) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:33:32.659+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:33:32.661+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.661+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:33:32.663+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.663+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:33:32.669+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.669+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:33:32.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.695+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:33:32.701+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.700+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:33:32.701+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:33:32.703+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.703+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:33:32.703+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.703+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:33:32.720+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.720+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:33:32.726+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.725+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:32.731+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.731+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:32.737+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.736+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:32.741+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.741+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:32.746+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.746+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:32.753+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.752+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:32.757+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.757+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:33:32.782+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.782+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:33:32.783+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.782+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:33:32.826+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:33:32.826+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:33:32.886+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.239 seconds
[2023-09-24T07:34:03.086+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.085+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1149)
[2023-09-24T07:34:03.088+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.088+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1149
[2023-09-24T07:34:03.092+0000] {processor.py:157} INFO - Started process (PID=1149) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:34:03.093+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:34:03.094+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.093+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:34:03.095+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.095+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:34:03.099+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.098+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:34:03.120+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.118+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:34:03.122+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.122+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:34:03.122+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:34:03.124+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.124+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:34:03.125+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.125+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:34:03.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.139+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:34:03.146+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.145+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:03.150+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.150+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:03.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.153+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:03.158+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.158+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:03.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.161+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:03.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.166+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:03.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.169+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:03.195+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.195+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:34:03.196+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.195+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:34:03.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:03.236+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:34:03.265+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.180 seconds
[2023-09-24T07:34:33.525+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.524+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1157)
[2023-09-24T07:34:33.527+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.527+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1157
[2023-09-24T07:34:33.531+0000] {processor.py:157} INFO - Started process (PID=1157) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:34:33.531+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:34:33.532+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.532+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:34:33.534+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.534+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:34:33.538+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.537+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:34:33.557+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.555+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:34:33.560+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.560+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:34:33.560+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:34:33.562+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.562+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:34:33.563+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.562+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:34:33.585+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.585+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:34:33.591+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.590+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:33.597+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.596+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:33.602+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.601+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:33.608+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.607+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:33.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.612+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:33.619+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.618+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:33.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.622+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:34:33.645+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.644+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:34:33.645+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.645+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:34:33.687+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:34:33.686+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:34:33.712+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T07:35:03.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.871+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1165)
[2023-09-24T07:35:03.874+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.874+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1165
[2023-09-24T07:35:03.878+0000] {processor.py:157} INFO - Started process (PID=1165) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:35:03.879+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:35:03.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.879+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:35:03.885+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.885+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:35:03.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.888+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:35:03.909+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.907+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:35:03.912+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.912+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:35:03.912+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:35:03.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.914+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:35:03.915+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.914+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:35:03.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.929+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:35:03.936+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.935+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:03.940+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.939+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:03.944+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.943+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:03.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.947+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:03.952+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.951+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:03.956+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.955+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:03.959+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.959+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:03.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.982+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:35:03.984+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:03.983+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:35:04.024+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:04.023+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:35:04.046+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T07:35:34.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.365+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1173)
[2023-09-24T07:35:34.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.369+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1173
[2023-09-24T07:35:34.374+0000] {processor.py:157} INFO - Started process (PID=1173) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:35:34.374+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:35:34.375+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.375+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:35:34.381+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.379+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:35:34.390+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.389+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:35:34.418+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.415+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:35:34.422+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.421+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:35:34.422+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:35:34.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.424+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:35:34.426+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.425+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:35:34.446+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.445+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:35:34.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.463+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:34.470+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.469+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:34.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.473+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:34.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.477+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:34.481+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.481+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:34.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.497+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:34.501+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.500+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:35:34.524+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.523+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:35:34.525+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.524+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:35:34.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:35:34.563+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:35:34.587+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.222 seconds
[2023-09-24T07:36:04.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.695+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1181)
[2023-09-24T07:36:04.699+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.699+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1181
[2023-09-24T07:36:04.704+0000] {processor.py:157} INFO - Started process (PID=1181) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:36:04.704+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:36:04.705+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.705+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:36:04.707+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.707+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:36:04.711+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.710+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:36:04.731+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.729+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:36:04.733+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.733+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:36:04.734+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:36:04.736+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.735+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:36:04.736+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.736+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:36:04.752+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.752+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:36:04.760+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.758+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:04.765+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.765+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:04.769+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.769+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:04.774+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.773+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:04.778+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.778+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:04.782+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.782+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:04.786+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.786+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:04.808+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.807+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:36:04.809+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.808+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:36:04.848+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:04.847+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:36:04.872+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.177 seconds
[2023-09-24T07:36:35.101+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.099+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1189)
[2023-09-24T07:36:35.103+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.102+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1189
[2023-09-24T07:36:35.107+0000] {processor.py:157} INFO - Started process (PID=1189) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:36:35.107+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:36:35.108+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.108+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:36:35.110+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.109+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:36:35.114+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.113+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:36:35.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.136+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:36:35.141+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.141+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:36:35.143+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:36:35.145+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.144+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:36:35.145+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.145+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:36:35.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.161+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:36:35.167+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.166+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:35.172+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.171+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:35.176+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.176+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:35.180+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.180+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:35.187+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.186+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:35.191+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.191+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:35.196+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.195+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:36:35.222+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.221+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:36:35.223+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.222+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:36:35.266+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:36:35.265+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:36:35.291+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.192 seconds
[2023-09-24T07:37:05.559+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.557+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1197)
[2023-09-24T07:37:05.561+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.560+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1197
[2023-09-24T07:37:05.565+0000] {processor.py:157} INFO - Started process (PID=1197) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:37:05.566+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:37:05.567+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.566+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:37:05.568+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.568+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:37:05.572+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.572+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:37:05.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.593+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:37:05.602+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.602+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:37:05.603+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:37:05.605+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.604+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:37:05.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.605+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:37:05.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.622+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:37:05.629+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.628+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:05.634+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.634+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:05.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.638+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:05.643+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.643+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:05.650+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.650+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:05.657+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.657+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:05.664+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.663+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:05.689+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.688+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:37:05.689+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.689+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:37:05.732+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:05.732+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:37:05.758+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.201 seconds
[2023-09-24T07:37:35.928+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.926+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1205)
[2023-09-24T07:37:35.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.929+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1205
[2023-09-24T07:37:35.934+0000] {processor.py:157} INFO - Started process (PID=1205) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:37:35.934+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:37:35.935+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.935+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:37:35.937+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.937+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:37:35.941+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.941+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:37:35.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.959+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:37:35.964+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.963+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:37:35.964+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:37:35.966+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.966+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:37:35.967+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.966+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:37:35.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.982+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:37:35.989+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.988+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:35.993+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.992+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:35.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:35.996+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:36.000+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:36.000+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:36.004+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:36.004+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:36.009+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:36.009+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:36.013+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:36.013+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:37:36.036+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:36.035+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:37:36.036+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:36.036+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:37:36.079+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:37:36.078+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:37:36.103+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.177 seconds
[2023-09-24T07:38:06.432+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.430+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1213)
[2023-09-24T07:38:06.434+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.434+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1213
[2023-09-24T07:38:06.438+0000] {processor.py:157} INFO - Started process (PID=1213) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:38:06.439+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:38:06.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.439+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:38:06.442+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.441+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:38:06.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.445+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:38:06.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.463+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:38:06.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.467+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:38:06.468+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:38:06.469+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.469+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:38:06.470+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.470+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:38:06.485+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.484+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:38:06.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.491+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:06.498+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.497+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:06.512+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.511+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:06.515+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.515+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:06.519+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.519+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:06.523+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.523+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:06.527+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.527+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:06.550+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.549+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:38:06.550+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.550+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:38:06.590+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:06.590+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:38:06.614+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.184 seconds
[2023-09-24T07:38:36.778+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.776+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1220)
[2023-09-24T07:38:36.780+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.779+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1220
[2023-09-24T07:38:36.784+0000] {processor.py:157} INFO - Started process (PID=1220) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:38:36.785+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:38:36.786+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.786+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:38:36.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.788+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:38:36.792+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.791+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:38:36.812+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.810+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:38:36.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.815+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:38:36.815+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:38:36.817+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.817+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:38:36.818+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.817+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:38:36.833+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.833+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:38:36.840+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.839+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:36.844+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.844+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:36.848+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.848+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:36.853+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.852+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:36.858+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.857+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:36.862+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.862+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:36.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.866+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:38:36.890+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.890+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:38:36.891+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.891+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:38:36.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:38:36.933+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:38:36.964+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T07:39:07.283+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.281+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1228)
[2023-09-24T07:39:07.285+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.285+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1228
[2023-09-24T07:39:07.290+0000] {processor.py:157} INFO - Started process (PID=1228) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:39:07.290+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:39:07.292+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.291+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:39:07.294+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.293+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:39:07.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.297+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:39:07.317+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.315+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:39:07.320+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.319+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:39:07.320+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:39:07.322+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.321+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:39:07.322+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.322+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:39:07.337+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.336+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:39:07.343+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.342+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:07.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.346+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:07.351+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.350+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:07.355+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.354+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:07.359+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.358+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:07.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.362+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:07.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.366+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:07.388+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.387+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:39:07.389+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.388+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:39:07.428+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:07.427+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:39:07.451+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T07:39:37.527+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.526+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1235)
[2023-09-24T07:39:37.529+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.528+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1235
[2023-09-24T07:39:37.532+0000] {processor.py:157} INFO - Started process (PID=1235) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:39:37.533+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:39:37.534+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.534+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:39:37.536+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.535+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:39:37.540+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.539+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:39:37.562+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.559+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:39:37.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.564+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:39:37.565+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:39:37.567+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.566+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:39:37.567+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.567+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:39:37.582+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.582+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:39:37.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.587+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:37.593+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.593+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:37.597+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.597+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:37.601+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.601+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:37.605+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.604+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:37.608+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.608+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:37.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.612+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:39:37.637+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.636+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:39:37.638+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.637+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:39:37.681+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:39:37.681+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:39:37.704+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T07:40:07.805+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.803+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1243)
[2023-09-24T07:40:07.806+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.806+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1243
[2023-09-24T07:40:07.810+0000] {processor.py:157} INFO - Started process (PID=1243) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:40:07.811+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:40:07.812+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.811+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:40:07.813+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.813+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:40:07.817+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.817+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:40:07.838+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.835+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:40:07.840+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.840+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:40:07.841+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:40:07.842+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.842+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:40:07.843+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.842+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:40:07.858+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.858+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:40:07.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.863+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:07.868+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.868+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:07.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.872+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:07.886+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.886+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:07.893+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.892+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:07.898+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.898+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:07.902+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.902+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:07.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.925+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:40:07.927+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.926+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:40:07.973+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:07.972+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:40:08.000+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.197 seconds
[2023-09-24T07:40:38.249+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.248+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1251)
[2023-09-24T07:40:38.251+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.251+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1251
[2023-09-24T07:40:38.255+0000] {processor.py:157} INFO - Started process (PID=1251) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:40:38.255+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:40:38.256+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.256+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:40:38.258+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.257+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:40:38.261+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.261+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:40:38.282+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.280+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:40:38.285+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.284+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:40:38.285+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:40:38.287+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.286+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:40:38.287+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.287+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:40:38.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.300+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:40:38.307+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.306+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:38.312+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.311+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:38.316+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.316+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:38.320+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.320+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:38.325+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.324+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:38.329+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.328+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:38.333+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.332+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:40:38.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.355+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:40:38.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.356+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:40:38.402+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:40:38.401+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:40:38.426+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T07:41:08.469+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.467+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1258)
[2023-09-24T07:41:08.471+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.471+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1258
[2023-09-24T07:41:08.476+0000] {processor.py:157} INFO - Started process (PID=1258) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:41:08.476+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:41:08.478+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.477+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:41:08.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.479+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:41:08.484+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.483+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:41:08.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.508+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:41:08.514+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.514+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:41:08.515+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:41:08.517+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.516+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:41:08.517+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.517+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:41:08.536+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.535+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:41:08.545+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.544+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:08.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.552+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:08.561+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.560+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:08.570+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.570+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:08.576+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.575+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:08.581+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.580+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:08.586+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.586+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:08.619+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.618+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:41:08.619+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.619+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:41:08.677+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:08.676+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:41:08.715+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.248 seconds
[2023-09-24T07:41:38.831+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.829+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1265)
[2023-09-24T07:41:38.833+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.832+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1265
[2023-09-24T07:41:38.836+0000] {processor.py:157} INFO - Started process (PID=1265) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:41:38.837+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:41:38.838+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.838+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:41:38.840+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.840+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:41:38.844+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.844+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:41:38.871+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.868+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:41:38.874+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.873+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:41:38.874+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:41:38.876+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.876+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:41:38.876+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.876+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:41:38.892+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.891+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:41:38.898+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.897+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:38.903+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.902+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:38.907+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.907+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:38.911+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.911+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:38.915+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.915+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:38.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.919+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:38.924+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.923+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:41:38.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.945+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:41:38.946+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.946+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:41:38.987+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:41:38.986+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:41:39.019+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.190 seconds
[2023-09-24T07:42:09.330+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.328+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1272)
[2023-09-24T07:42:09.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.331+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1272
[2023-09-24T07:42:09.344+0000] {processor.py:157} INFO - Started process (PID=1272) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:42:09.345+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:42:09.346+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.345+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:42:09.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.347+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:42:09.352+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.351+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:42:09.376+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.373+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:42:09.379+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.378+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:42:09.380+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:42:09.381+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.381+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:42:09.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.381+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:42:09.398+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.397+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:42:09.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.404+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:09.409+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.409+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:09.413+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.412+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:09.417+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.416+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:09.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.421+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:09.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.424+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:09.429+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.428+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:09.451+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.450+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:42:09.451+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.451+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:42:09.491+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:09.491+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:42:09.515+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T07:42:39.629+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.628+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1280)
[2023-09-24T07:42:39.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.631+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1280
[2023-09-24T07:42:39.636+0000] {processor.py:157} INFO - Started process (PID=1280) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:42:39.637+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:42:39.638+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.638+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:42:39.640+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.639+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:42:39.643+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.643+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:42:39.663+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.661+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:42:39.666+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.665+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:42:39.666+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:42:39.668+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.667+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:42:39.668+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.668+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:42:39.685+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.684+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:42:39.691+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.689+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:39.695+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.695+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:39.699+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.698+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:39.704+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.704+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:39.709+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.708+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:39.713+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.712+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:39.717+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.717+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:42:39.741+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.740+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:42:39.741+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.741+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:42:39.783+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:42:39.782+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:42:39.810+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T07:43:10.111+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.109+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1288)
[2023-09-24T07:43:10.113+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.112+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1288
[2023-09-24T07:43:10.116+0000] {processor.py:157} INFO - Started process (PID=1288) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:43:10.116+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:43:10.118+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.117+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:43:10.119+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.119+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:43:10.123+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.122+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:43:10.142+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.140+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:43:10.145+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.144+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:43:10.145+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:43:10.146+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.146+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:43:10.147+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.147+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:43:10.160+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.160+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:43:10.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.165+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:10.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.170+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:10.174+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.174+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:10.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.177+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:10.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.181+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:10.185+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.185+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:10.189+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.189+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:10.211+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.211+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:43:10.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.212+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:43:10.262+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:10.261+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:43:10.284+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T07:43:40.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.471+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1296)
[2023-09-24T07:43:40.475+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.475+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1296
[2023-09-24T07:43:40.479+0000] {processor.py:157} INFO - Started process (PID=1296) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:43:40.480+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:43:40.481+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.481+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:43:40.483+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.482+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:43:40.487+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.486+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:43:40.520+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.518+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:43:40.523+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.522+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:43:40.523+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:43:40.525+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.524+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:43:40.525+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.525+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:43:40.541+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.541+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:43:40.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.547+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:40.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.552+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:40.557+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.557+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:40.561+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.561+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:40.567+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.566+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:40.571+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.571+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:40.581+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.581+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:43:40.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.605+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:43:40.607+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.606+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:43:40.651+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:43:40.651+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:43:40.678+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.207 seconds
[2023-09-24T07:44:10.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.917+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1304)
[2023-09-24T07:44:10.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.922+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1304
[2023-09-24T07:44:10.928+0000] {processor.py:157} INFO - Started process (PID=1304) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:44:10.928+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:44:10.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.929+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:44:10.932+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.931+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:44:10.936+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.935+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:44:10.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.955+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:44:10.960+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.960+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:44:10.960+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:44:10.962+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.962+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:44:10.962+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.962+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:44:10.978+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.977+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:44:10.984+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.983+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:10.988+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.987+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:10.992+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.991+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:10.995+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.995+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:10.999+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:10.999+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:11.003+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:11.002+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:11.007+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:11.006+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:11.029+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:11.028+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:44:11.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:11.029+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:44:11.074+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:11.073+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:44:11.102+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.185 seconds
[2023-09-24T07:44:41.289+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.287+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1312)
[2023-09-24T07:44:41.291+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.291+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1312
[2023-09-24T07:44:41.296+0000] {processor.py:157} INFO - Started process (PID=1312) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:44:41.296+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:44:41.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.297+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:44:41.300+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.299+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:44:41.305+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.304+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:44:41.329+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.326+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:44:41.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.331+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:44:41.332+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:44:41.334+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.334+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:44:41.335+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.335+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:44:41.355+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.354+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:44:41.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.362+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:41.369+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.368+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:41.377+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.377+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:41.383+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.382+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:41.388+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.387+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:41.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.392+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:41.397+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.397+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:44:41.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.425+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:44:41.426+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.426+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:44:41.472+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:44:41.471+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:44:41.500+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.214 seconds
[2023-09-24T07:45:11.749+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.747+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1320)
[2023-09-24T07:45:11.751+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.750+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1320
[2023-09-24T07:45:11.754+0000] {processor.py:157} INFO - Started process (PID=1320) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:45:11.755+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:45:11.756+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.755+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:45:11.757+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.757+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:45:11.762+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.761+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:45:11.783+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.780+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:45:11.786+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.785+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:45:11.786+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:45:11.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.787+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:45:11.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.788+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:45:11.803+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.802+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:45:11.809+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.808+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:11.813+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.813+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:11.817+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.817+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:11.821+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.820+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:11.825+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.824+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:11.829+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.828+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:11.833+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.832+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:11.854+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.853+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:45:11.855+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.854+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:45:11.896+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:11.895+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:45:11.921+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T07:45:42.049+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.047+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1328)
[2023-09-24T07:45:42.051+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.051+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1328
[2023-09-24T07:45:42.055+0000] {processor.py:157} INFO - Started process (PID=1328) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:45:42.056+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:45:42.057+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.056+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:45:42.059+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.058+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:45:42.064+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.064+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:45:42.086+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.083+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:45:42.088+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.088+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:45:42.088+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:45:42.090+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.090+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:45:42.091+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.090+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:45:42.107+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.106+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:45:42.113+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.112+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:42.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.117+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:42.122+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.122+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:42.127+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.127+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:42.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.131+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:42.137+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.136+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:42.144+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.144+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:45:42.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.167+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:45:42.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.168+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:45:42.208+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:45:42.208+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:45:42.233+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T07:46:12.491+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.490+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1336)
[2023-09-24T07:46:12.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.492+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1336
[2023-09-24T07:46:12.497+0000] {processor.py:157} INFO - Started process (PID=1336) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:46:12.497+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:46:12.498+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.498+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:46:12.500+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.499+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:46:12.504+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.504+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:46:12.523+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.521+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:46:12.526+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.526+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:46:12.526+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:46:12.528+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.527+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:46:12.528+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.528+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:46:12.542+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.542+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:46:12.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.547+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:12.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.552+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:12.557+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.556+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:12.561+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.560+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:12.565+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.564+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:12.569+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.569+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:12.573+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.573+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:12.595+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.594+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:46:12.596+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.595+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:46:12.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:12.638+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:46:12.664+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T07:46:42.838+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.836+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1344)
[2023-09-24T07:46:42.840+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.839+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1344
[2023-09-24T07:46:42.845+0000] {processor.py:157} INFO - Started process (PID=1344) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:46:42.846+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:46:42.847+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.846+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:46:42.849+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.848+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:46:42.853+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.853+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:46:42.874+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.872+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:46:42.876+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.876+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:46:42.876+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:46:42.879+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.878+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:46:42.879+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.879+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:46:42.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.894+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:46:42.900+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.899+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:42.906+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.906+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:42.911+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.911+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:42.916+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.915+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:42.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.919+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:42.924+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.924+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:42.929+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.929+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:46:42.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.957+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:46:42.958+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:42.958+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:46:43.018+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:46:43.018+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:46:43.045+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.209 seconds
[2023-09-24T07:47:13.283+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.281+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1352)
[2023-09-24T07:47:13.286+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.285+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1352
[2023-09-24T07:47:13.290+0000] {processor.py:157} INFO - Started process (PID=1352) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:47:13.290+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:47:13.292+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.291+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:47:13.293+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.293+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:47:13.297+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.297+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:47:13.317+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.315+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:47:13.319+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.319+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:47:13.320+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:47:13.321+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.321+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:47:13.322+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.322+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:47:13.336+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.336+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:47:13.343+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.342+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:13.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.346+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:13.351+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.351+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:13.355+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.354+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:13.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.358+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:13.362+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.362+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:13.366+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.366+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:13.387+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.387+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:47:13.388+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.388+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:47:13.428+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:13.428+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:47:13.451+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T07:47:43.818+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.817+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1361)
[2023-09-24T07:47:43.820+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.819+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1361
[2023-09-24T07:47:43.824+0000] {processor.py:157} INFO - Started process (PID=1361) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:47:43.825+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:47:43.826+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.825+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:47:43.828+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.827+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:47:43.831+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.831+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:47:43.852+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.850+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:47:43.854+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.854+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:47:43.855+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:47:43.857+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.856+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:47:43.857+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.857+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:47:43.874+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.873+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:47:43.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.879+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:43.885+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.885+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:43.890+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.890+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:43.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.894+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:43.898+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.898+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:43.903+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.903+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:43.910+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.907+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:47:43.933+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.933+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:47:43.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.934+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:47:43.977+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:47:43.976+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:47:44.004+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.188 seconds
[2023-09-24T07:48:14.171+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.169+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1368)
[2023-09-24T07:48:14.173+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.173+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1368
[2023-09-24T07:48:14.177+0000] {processor.py:157} INFO - Started process (PID=1368) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:48:14.177+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:48:14.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.178+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:48:14.180+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.180+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:48:14.183+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.183+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:48:14.221+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.218+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:48:14.223+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.223+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:48:14.224+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:48:14.226+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.225+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:48:14.226+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.226+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:48:14.242+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.241+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:48:14.247+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.247+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:14.252+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.252+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:14.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.256+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:14.261+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.261+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:14.265+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.265+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:14.269+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.268+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:14.274+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.273+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:14.296+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.296+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:48:14.297+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.296+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:48:14.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:14.352+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:48:14.379+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.210 seconds
[2023-09-24T07:48:44.657+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.655+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1376)
[2023-09-24T07:48:44.659+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.658+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1376
[2023-09-24T07:48:44.662+0000] {processor.py:157} INFO - Started process (PID=1376) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:48:44.663+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:48:44.664+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.664+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:48:44.666+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.666+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:48:44.670+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.669+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:48:44.689+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.687+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:48:44.692+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.692+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:48:44.693+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:48:44.695+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.694+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:48:44.695+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.695+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:48:44.711+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.710+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:48:44.717+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.716+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:44.722+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.722+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:44.726+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.726+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:44.738+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.738+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:44.742+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.742+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:44.746+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.746+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:44.750+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.750+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:48:44.773+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.773+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:48:44.774+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.773+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:48:44.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:48:44.815+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:48:44.846+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.191 seconds
[2023-09-24T07:49:15.089+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.087+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1384)
[2023-09-24T07:49:15.091+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.091+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1384
[2023-09-24T07:49:15.095+0000] {processor.py:157} INFO - Started process (PID=1384) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:49:15.096+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:49:15.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.097+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:49:15.099+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.098+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:49:15.104+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.103+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:49:15.128+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.125+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:49:15.130+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.130+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:49:15.131+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:49:15.134+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.133+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:49:15.135+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.134+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:49:15.150+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.149+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:49:15.156+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.155+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:15.160+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.160+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:15.164+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.164+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:15.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.168+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:15.174+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.173+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:15.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.177+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:15.183+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.182+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:15.206+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.206+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:49:15.207+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.207+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:49:15.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:15.257+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:49:15.292+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.205 seconds
[2023-09-24T07:49:45.517+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.515+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1392)
[2023-09-24T07:49:45.519+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.519+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1392
[2023-09-24T07:49:45.524+0000] {processor.py:157} INFO - Started process (PID=1392) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:49:45.525+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:49:45.526+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.525+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:49:45.527+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.527+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:49:45.532+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.531+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:49:45.552+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.550+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:49:45.554+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.554+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:49:45.555+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:49:45.557+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.556+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:49:45.557+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.557+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:49:45.572+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.571+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:49:45.577+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.576+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:45.581+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.581+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:45.585+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.585+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:45.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.589+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:45.593+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.592+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:45.596+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.596+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:45.600+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.600+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:49:45.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.622+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:49:45.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.623+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:49:45.663+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:49:45.662+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:49:45.686+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.172 seconds
[2023-09-24T07:50:16.025+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.023+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1400)
[2023-09-24T07:50:16.026+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.026+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1400
[2023-09-24T07:50:16.030+0000] {processor.py:157} INFO - Started process (PID=1400) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:50:16.030+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:50:16.031+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.031+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:50:16.033+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.033+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:50:16.036+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.036+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:50:16.056+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.054+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:50:16.058+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.058+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:50:16.058+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:50:16.060+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.060+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:50:16.061+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.061+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:50:16.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.074+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:50:16.080+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.079+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:16.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.085+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:16.089+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.088+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:16.093+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.092+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:16.096+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.096+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:16.100+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.100+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:16.104+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.103+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:16.125+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.125+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:50:16.126+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.125+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:50:16.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:16.165+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:50:16.189+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T07:50:46.399+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.398+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1407)
[2023-09-24T07:50:46.401+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.400+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1407
[2023-09-24T07:50:46.405+0000] {processor.py:157} INFO - Started process (PID=1407) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:50:46.405+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:50:46.406+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.406+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:50:46.408+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.407+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:50:46.412+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.411+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:50:46.434+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.432+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:50:46.436+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.436+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:50:46.437+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:50:46.439+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.438+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:50:46.439+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.439+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:50:46.453+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.453+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:50:46.459+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.458+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:46.463+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.463+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:46.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.467+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:46.471+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.471+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:46.475+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.475+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:46.479+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.478+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:46.482+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.482+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:50:46.504+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.503+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:50:46.504+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.504+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:50:46.544+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:50:46.544+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:50:46.567+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.169 seconds
[2023-09-24T07:51:16.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.881+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1415)
[2023-09-24T07:51:16.884+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.884+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1415
[2023-09-24T07:51:16.888+0000] {processor.py:157} INFO - Started process (PID=1415) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:51:16.890+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:51:16.892+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.891+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:51:16.895+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.894+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:51:16.899+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.898+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:51:16.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.918+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:51:16.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.923+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:51:16.924+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:51:16.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.925+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:51:16.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.926+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:51:16.941+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.940+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:51:16.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.946+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:16.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.951+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:16.955+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.955+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:16.960+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.959+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:16.965+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.964+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:16.970+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.969+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:16.975+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.974+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:16.998+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.998+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:51:16.999+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:16.999+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:51:17.040+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:17.040+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:51:17.070+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T07:51:47.201+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.199+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1424)
[2023-09-24T07:51:47.203+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.203+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1424
[2023-09-24T07:51:47.207+0000] {processor.py:157} INFO - Started process (PID=1424) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:51:47.208+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:51:47.209+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.209+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:51:47.211+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.211+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:51:47.215+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.214+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:51:47.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.232+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:51:47.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.236+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:51:47.237+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:51:47.239+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.239+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:51:47.240+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.239+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:51:47.254+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.254+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:51:47.260+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.259+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:47.264+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.264+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:47.268+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.268+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:47.272+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.271+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:47.276+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.275+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:47.280+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.279+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:47.283+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.283+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:51:47.305+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.305+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:51:47.306+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.305+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:51:47.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:51:47.347+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:51:47.372+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T07:52:17.777+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.775+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1431)
[2023-09-24T07:52:17.779+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.779+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1431
[2023-09-24T07:52:17.783+0000] {processor.py:157} INFO - Started process (PID=1431) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:52:17.784+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:52:17.785+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.784+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:52:17.786+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.786+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:52:17.790+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.789+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:52:17.812+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.809+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:52:17.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.815+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:52:17.816+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:52:17.818+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.817+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:52:17.819+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.818+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:52:17.833+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.832+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:52:17.839+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.838+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:17.843+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.843+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:17.847+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.847+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:17.851+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.851+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:17.855+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.855+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:17.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.858+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:17.862+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.862+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:17.885+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.884+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:52:17.885+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.885+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:52:17.932+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:17.932+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:52:17.957+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T07:52:48.115+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.113+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1438)
[2023-09-24T07:52:48.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.117+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1438
[2023-09-24T07:52:48.122+0000] {processor.py:157} INFO - Started process (PID=1438) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:52:48.123+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:52:48.124+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.124+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:52:48.127+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.126+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:52:48.130+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.130+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:52:48.152+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.149+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:52:48.155+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.154+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:52:48.155+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:52:48.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.157+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:52:48.158+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.158+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:52:48.173+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.172+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:52:48.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.179+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:48.186+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.186+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:48.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.190+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:48.194+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.194+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:48.201+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.198+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:48.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.204+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:48.209+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.208+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:52:48.232+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.232+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:52:48.233+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.232+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:52:48.274+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:52:48.274+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:52:48.298+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T07:53:18.401+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.399+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1446)
[2023-09-24T07:53:18.403+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.402+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1446
[2023-09-24T07:53:18.406+0000] {processor.py:157} INFO - Started process (PID=1446) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:53:18.407+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:53:18.408+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.408+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:53:18.410+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.409+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:53:18.414+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.413+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:53:18.441+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.438+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:53:18.443+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.443+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:53:18.443+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:53:18.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.445+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:53:18.446+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.446+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:53:18.461+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.461+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:53:18.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.466+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:18.472+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.471+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:18.476+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.475+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:18.481+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.481+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:18.486+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.485+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:18.490+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.490+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:18.494+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.494+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:18.519+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.518+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:53:18.519+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.519+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:53:18.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:18.563+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:53:18.591+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.192 seconds
[2023-09-24T07:53:48.684+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.683+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1454)
[2023-09-24T07:53:48.686+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.686+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1454
[2023-09-24T07:53:48.690+0000] {processor.py:157} INFO - Started process (PID=1454) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:53:48.690+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:53:48.691+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.691+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:53:48.693+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.693+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:53:48.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.696+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:53:48.717+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.715+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:53:48.720+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.719+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:53:48.720+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:53:48.722+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.721+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:53:48.722+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.722+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:53:48.737+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.736+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:53:48.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.742+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:48.747+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.747+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:48.751+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.751+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:48.755+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.755+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:48.759+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.758+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:48.763+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.762+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:48.767+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.766+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:53:48.789+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.788+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:53:48.789+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.789+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:53:48.831+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:53:48.830+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:53:48.855+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.172 seconds
[2023-09-24T07:54:18.910+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.908+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1462)
[2023-09-24T07:54:18.912+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.911+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1462
[2023-09-24T07:54:18.916+0000] {processor.py:157} INFO - Started process (PID=1462) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:54:18.916+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:54:18.917+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.917+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:54:18.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.918+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:54:18.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.922+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:54:18.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.943+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:54:18.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.947+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:54:18.948+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:54:18.950+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.950+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:54:18.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.950+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:54:18.965+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.964+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:54:18.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.970+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:18.976+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.975+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:18.980+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.979+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:18.984+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.983+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:18.988+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.987+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:18.992+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.992+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:18.996+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:18.996+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:19.020+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:19.020+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:54:19.021+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:19.020+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:54:19.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:19.067+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:54:19.097+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T07:54:49.294+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.292+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1470)
[2023-09-24T07:54:49.295+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.295+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1470
[2023-09-24T07:54:49.299+0000] {processor.py:157} INFO - Started process (PID=1470) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:54:49.299+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:54:49.300+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.300+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:54:49.302+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.302+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:54:49.306+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.305+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:54:49.326+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.324+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:54:49.329+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.329+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:54:49.330+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:54:49.331+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.331+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:54:49.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.332+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:54:49.346+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.346+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:54:49.352+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.351+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:49.357+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.356+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:49.361+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.360+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:49.365+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.365+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:49.369+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.369+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:49.373+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.373+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:49.377+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.377+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:54:49.399+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.398+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:54:49.400+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.399+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:54:49.442+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:54:49.441+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:54:49.467+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T07:55:19.557+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.555+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1478)
[2023-09-24T07:55:19.559+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.559+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1478
[2023-09-24T07:55:19.563+0000] {processor.py:157} INFO - Started process (PID=1478) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:55:19.564+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:55:19.565+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.565+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:55:19.567+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.567+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:55:19.573+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.572+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:55:19.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.600+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:55:19.618+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.617+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:55:19.619+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:55:19.624+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.623+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:55:19.625+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.624+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:55:19.648+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.648+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:55:19.655+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.654+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:19.661+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.660+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:19.669+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.668+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:19.674+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.674+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:19.679+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.678+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:19.683+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.683+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:19.689+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.689+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:19.723+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.722+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:55:19.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.724+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:55:19.810+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:19.809+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:55:19.875+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.321 seconds
[2023-09-24T07:55:50.152+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.151+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1486)
[2023-09-24T07:55:50.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.153+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1486
[2023-09-24T07:55:50.158+0000] {processor.py:157} INFO - Started process (PID=1486) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:55:50.158+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:55:50.159+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.159+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:55:50.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.161+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:55:50.165+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.164+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:55:50.185+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.183+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:55:50.188+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.187+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:55:50.188+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:55:50.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.189+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:55:50.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.190+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:55:50.207+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.206+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:55:50.213+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.212+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:50.218+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.217+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:50.222+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.221+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:50.226+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.225+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:50.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.229+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:50.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.234+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:50.238+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.238+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:55:50.263+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.263+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:55:50.264+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.264+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:55:50.306+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:55:50.305+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:55:50.332+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T07:56:20.565+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.564+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1494)
[2023-09-24T07:56:20.567+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.566+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1494
[2023-09-24T07:56:20.571+0000] {processor.py:157} INFO - Started process (PID=1494) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:56:20.571+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:56:20.572+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.572+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:56:20.574+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.574+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:56:20.578+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.577+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:56:20.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.596+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:56:20.600+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.600+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:56:20.601+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:56:20.605+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.604+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:56:20.605+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.605+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:56:20.620+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.620+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:56:20.626+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.625+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:20.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.631+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:20.635+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.634+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:20.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.639+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:20.644+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.643+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:20.647+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.647+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:20.652+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.651+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:20.674+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.674+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:56:20.675+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.675+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:56:20.715+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:20.714+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:56:20.740+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.177 seconds
[2023-09-24T07:56:50.979+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:50.977+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1501)
[2023-09-24T07:56:50.981+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:50.980+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1501
[2023-09-24T07:56:50.985+0000] {processor.py:157} INFO - Started process (PID=1501) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:56:50.986+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:56:50.987+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:50.986+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:56:50.989+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:50.988+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:56:50.994+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:50.993+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:56:51.021+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.019+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:56:51.024+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.023+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:56:51.024+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:56:51.026+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.025+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:56:51.026+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.026+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:56:51.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.043+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:56:51.050+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.049+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:51.055+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.054+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:51.059+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.058+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:51.063+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.063+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:51.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.067+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:51.072+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.071+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:51.076+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.076+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:56:51.100+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.100+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:56:51.101+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.100+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:56:51.141+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:56:51.140+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:56:51.165+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.188 seconds
[2023-09-24T07:57:21.335+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.332+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1509)
[2023-09-24T07:57:21.338+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.337+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1509
[2023-09-24T07:57:21.344+0000] {processor.py:157} INFO - Started process (PID=1509) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:57:21.344+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:57:21.346+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.345+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:57:21.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.347+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:57:21.352+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.351+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:57:21.373+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.371+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:57:21.375+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.375+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:57:21.376+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:57:21.378+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.377+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:57:21.378+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.378+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:57:21.393+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.392+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:57:21.399+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.398+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:21.403+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.402+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:21.407+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.407+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:21.411+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.411+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:21.415+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.415+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:21.419+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.419+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:21.423+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.423+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:21.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.445+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:57:21.446+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.445+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:57:21.486+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:21.486+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:57:21.509+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.177 seconds
[2023-09-24T07:57:51.839+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.837+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1517)
[2023-09-24T07:57:51.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.840+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1517
[2023-09-24T07:57:51.846+0000] {processor.py:157} INFO - Started process (PID=1517) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:57:51.846+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:57:51.848+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.847+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:57:51.850+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.850+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:57:51.855+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.855+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:57:51.876+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.874+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:57:51.879+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.878+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:57:51.879+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:57:51.881+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.880+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:57:51.881+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.881+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:57:51.908+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.908+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:57:51.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.913+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:51.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.918+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:51.922+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.922+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:51.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.926+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:51.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.929+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:51.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.943+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:51.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.947+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:57:51.970+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.969+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:57:51.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:51.970+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:57:52.013+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:57:52.012+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:57:52.036+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.199 seconds
[2023-09-24T07:58:22.125+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.123+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1525)
[2023-09-24T07:58:22.126+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.126+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1525
[2023-09-24T07:58:22.130+0000] {processor.py:157} INFO - Started process (PID=1525) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:58:22.131+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:58:22.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.132+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:58:22.134+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.133+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:58:22.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.138+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:58:22.158+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.156+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:58:22.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.160+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:58:22.161+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:58:22.163+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.163+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:58:22.164+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.163+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:58:22.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.178+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:58:22.187+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.186+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:22.192+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.192+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:22.200+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.200+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:22.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.204+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:22.209+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.208+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:22.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.212+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:22.216+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.216+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:22.243+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.242+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:58:22.243+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.243+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:58:22.288+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:22.287+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:58:22.311+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.188 seconds
[2023-09-24T07:58:52.592+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.590+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1533)
[2023-09-24T07:58:52.595+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.594+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1533
[2023-09-24T07:58:52.599+0000] {processor.py:157} INFO - Started process (PID=1533) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:58:52.599+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:58:52.600+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.600+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:58:52.602+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.601+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:58:52.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.605+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:58:52.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.625+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:58:52.630+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.629+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:58:52.630+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:58:52.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.631+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:58:52.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.632+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:58:52.648+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.647+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:58:52.654+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.653+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:52.660+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.659+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:52.664+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.664+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:52.668+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.668+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:52.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.671+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:52.675+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.675+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:52.679+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.679+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:58:52.700+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.700+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:58:52.701+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.701+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:58:52.741+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:58:52.741+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:58:52.766+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.176 seconds
[2023-09-24T07:59:22.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.918+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1541)
[2023-09-24T07:59:22.921+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.921+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1541
[2023-09-24T07:59:22.925+0000] {processor.py:157} INFO - Started process (PID=1541) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:59:22.926+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:59:22.927+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.927+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:59:22.929+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.928+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:59:22.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.933+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:59:22.956+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.954+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:59:22.959+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.959+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:59:22.959+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:59:22.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.961+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:59:22.962+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.962+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:59:22.978+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.977+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:59:22.984+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.983+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:22.989+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.988+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:22.995+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:22.995+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:23.015+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:23.015+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:23.020+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:23.019+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:23.024+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:23.023+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:23.028+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:23.027+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:23.055+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:23.050+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:59:23.056+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:23.055+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:59:23.100+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:23.100+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:59:23.125+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.208 seconds
[2023-09-24T07:59:53.339+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.338+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1549)
[2023-09-24T07:59:53.342+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.341+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1549
[2023-09-24T07:59:53.346+0000] {processor.py:157} INFO - Started process (PID=1549) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:59:53.346+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T07:59:53.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.347+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:59:53.350+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.349+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:59:53.354+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.354+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T07:59:53.375+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.373+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:59:53.378+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.378+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T07:59:53.379+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T07:59:53.380+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.380+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T07:59:53.381+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.381+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T07:59:53.397+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.397+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T07:59:53.403+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.402+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:53.408+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.407+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:53.412+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.412+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:53.417+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.416+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:53.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.421+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:53.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.424+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:53.429+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.428+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T07:59:53.451+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.450+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T07:59:53.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.452+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T07:59:53.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T07:59:53.491+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T07:59:53.518+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.180 seconds
[2023-09-24T08:00:23.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.696+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1558)
[2023-09-24T08:00:23.699+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.699+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1558
[2023-09-24T08:00:23.703+0000] {processor.py:157} INFO - Started process (PID=1558) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:00:23.703+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:00:23.705+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.704+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:00:23.706+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.706+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:00:23.710+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.710+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:00:23.731+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.729+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:00:23.733+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.733+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:00:23.733+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:00:23.735+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.735+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:00:23.735+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.735+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:00:23.751+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.751+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:00:23.757+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.756+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:23.762+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.761+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:23.765+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.765+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:23.769+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.769+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:23.773+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.773+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:23.777+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.776+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:23.781+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.780+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:23.804+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.803+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:00:23.804+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.804+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:00:23.847+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:23.846+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:00:23.877+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T08:00:54.093+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.092+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1566)
[2023-09-24T08:00:54.169+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.168+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1566
[2023-09-24T08:00:54.173+0000] {processor.py:157} INFO - Started process (PID=1566) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:00:54.173+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:00:54.175+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.174+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:00:54.176+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.176+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:00:54.180+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.180+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:00:54.204+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.201+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:00:54.206+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.206+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:00:54.207+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:00:54.208+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.208+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:00:54.209+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.209+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:00:54.224+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.223+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:00:54.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.229+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:54.235+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.234+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:54.240+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.239+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:54.246+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.245+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:54.250+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.249+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:54.253+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.253+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:54.258+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.257+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:00:54.283+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.282+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:00:54.283+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.283+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:00:54.327+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:00:54.327+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:00:54.531+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.439 seconds
[2023-09-24T08:01:24.853+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.851+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1574)
[2023-09-24T08:01:24.856+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.855+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1574
[2023-09-24T08:01:24.860+0000] {processor.py:157} INFO - Started process (PID=1574) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:01:24.861+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:01:24.862+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.862+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:01:24.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.863+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:01:24.867+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.867+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:01:24.888+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.886+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:01:24.891+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.891+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:01:24.891+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:01:24.893+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.893+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:01:24.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.894+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:01:24.908+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.908+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:01:24.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.913+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:24.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.918+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:24.922+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.922+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:24.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.926+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:24.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.930+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:24.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.933+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:24.938+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.937+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:24.960+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.959+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:01:24.960+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.960+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:01:25.000+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:24.999+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:01:25.024+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T08:01:55.197+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.195+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1582)
[2023-09-24T08:01:55.199+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.199+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1582
[2023-09-24T08:01:55.204+0000] {processor.py:157} INFO - Started process (PID=1582) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:01:55.204+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:01:55.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.205+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:01:55.207+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.207+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:01:55.211+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.210+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:01:55.231+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.229+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:01:55.234+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.233+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:01:55.234+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:01:55.236+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.236+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:01:55.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.236+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:01:55.251+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.251+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:01:55.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.256+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:55.261+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.261+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:55.265+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.265+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:55.269+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.269+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:55.273+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.273+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:55.277+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.276+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:55.280+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.280+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:01:55.304+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.304+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:01:55.305+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.305+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:01:55.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:01:55.355+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:01:55.383+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.188 seconds
[2023-09-24T08:02:25.638+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.637+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1590)
[2023-09-24T08:02:25.640+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.640+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1590
[2023-09-24T08:02:25.644+0000] {processor.py:157} INFO - Started process (PID=1590) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:02:25.644+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:02:25.646+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.645+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:02:25.648+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.647+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:02:25.652+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.652+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:02:25.676+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.673+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:02:25.679+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.679+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:02:25.680+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:02:25.683+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.682+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:02:25.684+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.683+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:02:25.702+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.701+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:02:25.708+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.707+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:25.715+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.714+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:25.722+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.721+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:25.727+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.727+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:25.733+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.732+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:25.737+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.737+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:25.742+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.742+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:25.766+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.765+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:02:25.767+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.766+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:02:25.813+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:25.813+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:02:25.841+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.204 seconds
[2023-09-24T08:02:55.940+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.938+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1598)
[2023-09-24T08:02:55.942+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.941+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1598
[2023-09-24T08:02:55.946+0000] {processor.py:157} INFO - Started process (PID=1598) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:02:55.946+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:02:55.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.947+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:02:55.949+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.949+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:02:55.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.953+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:02:55.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.971+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:02:55.976+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.976+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:02:55.976+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:02:55.978+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.978+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:02:55.979+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.978+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:02:55.993+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.992+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:02:55.999+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:55.998+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:56.005+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:56.004+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:56.009+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:56.009+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:56.014+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:56.013+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:56.019+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:56.018+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:56.023+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:56.023+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:56.027+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:56.027+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:02:56.049+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:56.049+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:02:56.050+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:56.050+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:02:56.089+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:02:56.089+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:02:56.118+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.180 seconds
[2023-09-24T08:03:26.235+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.233+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1606)
[2023-09-24T08:03:26.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.236+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1606
[2023-09-24T08:03:26.241+0000] {processor.py:157} INFO - Started process (PID=1606) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:03:26.241+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:03:26.242+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.242+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:03:26.244+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.244+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:03:26.249+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.248+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:03:26.271+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.269+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:03:26.274+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.274+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:03:26.274+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:03:26.276+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.276+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:03:26.277+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.277+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:03:26.291+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.291+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:03:26.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.297+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:26.303+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.303+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:26.308+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.307+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:26.313+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.312+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:26.318+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.317+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:26.329+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.329+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:26.336+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.335+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:26.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.362+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:03:26.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.363+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:03:26.416+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:26.415+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:03:26.446+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.213 seconds
[2023-09-24T08:03:56.733+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.732+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1614)
[2023-09-24T08:03:56.736+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.735+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1614
[2023-09-24T08:03:56.739+0000] {processor.py:157} INFO - Started process (PID=1614) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:03:56.740+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:03:56.741+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.741+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:03:56.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.742+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:03:56.746+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.746+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:03:56.768+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.766+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:03:56.771+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.770+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:03:56.771+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:03:56.772+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.772+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:03:56.773+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.773+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:03:56.787+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.787+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:03:56.793+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.792+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:56.798+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.798+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:56.803+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.802+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:56.807+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.806+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:56.811+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.811+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:56.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.814+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:56.819+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.818+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:03:56.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.840+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:03:56.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.841+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:03:56.892+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:03:56.892+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:03:56.929+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.198 seconds
[2023-09-24T08:04:27.031+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.029+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1622)
[2023-09-24T08:04:27.034+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.033+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1622
[2023-09-24T08:04:27.038+0000] {processor.py:157} INFO - Started process (PID=1622) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:04:27.039+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:04:27.040+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.039+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:04:27.042+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.041+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:04:27.045+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.045+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:04:27.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.082+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:04:27.087+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.087+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:04:27.088+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:04:27.090+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.089+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:04:27.090+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.090+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:04:27.107+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.106+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:04:27.114+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.113+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:27.119+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.118+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:27.123+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.123+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:27.127+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.127+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:27.131+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.131+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:27.135+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.135+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:27.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.139+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:27.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.161+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:04:27.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.162+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:04:27.202+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:27.202+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:04:27.228+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.199 seconds
[2023-09-24T08:04:57.317+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.315+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1629)
[2023-09-24T08:04:57.319+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.318+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1629
[2023-09-24T08:04:57.323+0000] {processor.py:157} INFO - Started process (PID=1629) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:04:57.324+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:04:57.325+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.324+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:04:57.327+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.326+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:04:57.331+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.330+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:04:57.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.351+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:04:57.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.355+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:04:57.356+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:04:57.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.357+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:04:57.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.358+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:04:57.374+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.373+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:04:57.383+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.382+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:57.388+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.388+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:57.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.392+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:57.396+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.396+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:57.400+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.400+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:57.404+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.404+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:57.408+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.408+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:04:57.430+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.430+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:04:57.431+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.431+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:04:57.475+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:04:57.475+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:04:57.572+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.257 seconds
[2023-09-24T08:05:27.908+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.906+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1637)
[2023-09-24T08:05:27.910+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.910+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1637
[2023-09-24T08:05:27.914+0000] {processor.py:157} INFO - Started process (PID=1637) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:05:27.915+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:05:27.916+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.915+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:05:27.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.917+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:05:27.922+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.922+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:05:27.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.940+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:05:27.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.945+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:05:27.946+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:05:27.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.947+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:05:27.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.948+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:05:27.964+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.963+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:05:27.970+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.969+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:27.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.973+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:27.978+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.977+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:27.982+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.981+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:27.986+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.986+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:27.990+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.990+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:27.994+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:27.993+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:28.021+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:28.020+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:05:28.023+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:28.022+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:05:28.070+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:28.069+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:05:28.096+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.190 seconds
[2023-09-24T08:05:58.328+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.327+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1645)
[2023-09-24T08:05:58.330+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.330+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1645
[2023-09-24T08:05:58.334+0000] {processor.py:157} INFO - Started process (PID=1645) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:05:58.334+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:05:58.336+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.335+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:05:58.337+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.337+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:05:58.341+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.340+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:05:58.361+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.359+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:05:58.364+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.364+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:05:58.364+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:05:58.366+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.366+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:05:58.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.366+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:05:58.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.382+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:05:58.388+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.387+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:58.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.392+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:58.396+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.396+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:58.400+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.400+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:58.404+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.404+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:58.408+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.407+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:58.413+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.413+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:05:58.435+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.434+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:05:58.435+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.435+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:05:58.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:05:58.476+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:05:58.499+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.173 seconds
[2023-09-24T08:06:28.701+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.699+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1653)
[2023-09-24T08:06:28.703+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.702+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1653
[2023-09-24T08:06:28.707+0000] {processor.py:157} INFO - Started process (PID=1653) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:06:28.708+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:06:28.709+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.709+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:06:28.711+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.710+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:06:28.715+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.714+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:06:28.736+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.734+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:06:28.739+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.738+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:06:28.739+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:06:28.741+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.741+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:06:28.742+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.741+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:06:28.759+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.759+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:06:28.765+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.764+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:28.770+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.769+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:28.777+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.776+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:28.781+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.780+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:28.784+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.784+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:28.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.788+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:28.792+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.791+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:28.813+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.813+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:06:28.814+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.813+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:06:28.858+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:28.858+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:06:28.882+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.183 seconds
[2023-09-24T08:06:59.148+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.147+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1668)
[2023-09-24T08:06:59.150+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.150+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1668
[2023-09-24T08:06:59.154+0000] {processor.py:157} INFO - Started process (PID=1668) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:06:59.154+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:06:59.155+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.155+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:06:59.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.156+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:06:59.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.161+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:06:59.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.179+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:06:59.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.183+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:06:59.184+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:06:59.185+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.185+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:06:59.186+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.186+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:06:59.201+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.200+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:06:59.207+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.206+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:59.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.212+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:59.216+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.216+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:59.220+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.220+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:59.224+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.224+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:59.228+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.228+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:59.232+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.232+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:06:59.256+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.256+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:06:59.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.256+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:06:59.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:06:59.297+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:06:59.324+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.177 seconds
[2023-09-24T08:07:29.469+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.468+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1676)
[2023-09-24T08:07:29.471+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.471+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1676
[2023-09-24T08:07:29.475+0000] {processor.py:157} INFO - Started process (PID=1676) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:07:29.476+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:07:29.478+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.476+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:07:29.479+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.479+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:07:29.483+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.483+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:07:29.503+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.501+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:07:29.506+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.505+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:07:29.506+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:07:29.508+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.507+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:07:29.508+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.508+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:07:29.531+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.531+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:07:29.537+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.536+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:29.542+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.541+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:29.547+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.546+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:29.552+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.551+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:29.557+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.556+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:29.561+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.560+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:29.565+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.565+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:29.587+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.586+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:07:29.588+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.587+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:07:29.629+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:29.629+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:07:29.653+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.185 seconds
[2023-09-24T08:07:59.822+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.820+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1684)
[2023-09-24T08:07:59.824+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.824+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1684
[2023-09-24T08:07:59.829+0000] {processor.py:157} INFO - Started process (PID=1684) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:07:59.829+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:07:59.831+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.830+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:07:59.833+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.832+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:07:59.837+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.836+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:07:59.856+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.854+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:07:59.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.859+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:07:59.859+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:07:59.861+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.861+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:07:59.862+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.861+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:07:59.877+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.876+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:07:59.883+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.882+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:59.887+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.887+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:59.891+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.891+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:59.895+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.895+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:59.900+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.899+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:59.904+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.904+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:59.908+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.908+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:07:59.929+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.929+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:07:59.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.930+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:07:59.985+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:07:59.985+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:08:00.012+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.193 seconds
[2023-09-24T08:08:30.274+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.272+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1692)
[2023-09-24T08:08:30.276+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.275+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1692
[2023-09-24T08:08:30.280+0000] {processor.py:157} INFO - Started process (PID=1692) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:08:30.280+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:08:30.282+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.281+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:08:30.284+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.283+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:08:30.289+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.288+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:08:30.310+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.308+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:08:30.313+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.313+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:08:30.313+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:08:30.315+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.314+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:08:30.315+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.315+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:08:30.330+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.330+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:08:30.339+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.338+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:08:30.343+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.342+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:08:30.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.346+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:08:30.351+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.351+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:08:30.355+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.355+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:08:30.359+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.359+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:08:30.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.363+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:08:30.387+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.386+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:08:30.388+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.387+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:08:30.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:08:30.445+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:08:30.470+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.198 seconds
[2023-09-24T08:09:00.546+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.544+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1700)
[2023-09-24T08:09:00.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.547+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1700
[2023-09-24T08:09:00.552+0000] {processor.py:157} INFO - Started process (PID=1700) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:09:00.552+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:09:00.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.553+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:09:00.555+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.555+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:09:00.559+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.559+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:09:00.579+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.577+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:09:00.582+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.581+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:09:00.582+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:09:00.584+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.584+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:09:00.585+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.584+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:09:00.601+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.600+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:09:00.607+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.606+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:00.612+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.611+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:00.616+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.615+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:00.620+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.619+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:00.624+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.623+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:00.628+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.627+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:00.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.632+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:00.656+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.655+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:09:00.656+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.656+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:09:00.699+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:00.699+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:09:00.724+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.180 seconds
[2023-09-24T08:09:30.907+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.906+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1708)
[2023-09-24T08:09:30.909+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.908+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1708
[2023-09-24T08:09:30.913+0000] {processor.py:157} INFO - Started process (PID=1708) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:09:30.914+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:09:30.915+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.915+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:09:30.917+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.917+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:09:30.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.921+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:09:30.942+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.940+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:09:30.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.944+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:09:30.945+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:09:30.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.947+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:09:30.948+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.947+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:09:30.963+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.963+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:09:30.969+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.968+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:30.973+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.973+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:30.978+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.977+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:30.982+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.981+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:30.986+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.985+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:30.990+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.990+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:30.995+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:30.994+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:09:31.017+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:31.017+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:09:31.018+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:31.018+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:09:31.059+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:09:31.059+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:09:31.085+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.179 seconds
[2023-09-24T08:10:01.283+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.282+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1716)
[2023-09-24T08:10:01.286+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.285+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1716
[2023-09-24T08:10:01.290+0000] {processor.py:157} INFO - Started process (PID=1716) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:10:01.290+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:10:01.291+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.291+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:10:01.293+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.293+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:10:01.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.297+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:10:01.319+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.317+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:10:01.323+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.322+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:10:01.324+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:10:01.327+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.326+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:10:01.328+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.327+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:10:01.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.367+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:10:01.375+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.373+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:01.381+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.380+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:01.386+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.385+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:01.390+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.389+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:01.395+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.394+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:01.399+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.399+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:01.404+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.404+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:01.431+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.431+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:10:01.432+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.431+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:10:01.501+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:01.501+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:10:01.531+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.249 seconds
[2023-09-24T08:10:31.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.741+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1724)
[2023-09-24T08:10:31.745+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.744+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1724
[2023-09-24T08:10:31.749+0000] {processor.py:157} INFO - Started process (PID=1724) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:10:31.751+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:10:31.753+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.752+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:10:31.755+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.754+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:10:31.759+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.759+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:10:31.782+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.780+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:10:31.785+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.785+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:10:31.786+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:10:31.787+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.787+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:10:31.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.787+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:10:31.804+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.804+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:10:31.811+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.810+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:31.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.815+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:31.819+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.819+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:31.823+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.823+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:31.827+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.827+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:31.832+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.831+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:31.836+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.836+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:10:31.860+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.859+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:10:31.861+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.860+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:10:31.903+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:10:31.902+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:10:31.927+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T08:11:02.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.137+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1732)
[2023-09-24T08:11:02.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.140+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1732
[2023-09-24T08:11:02.144+0000] {processor.py:157} INFO - Started process (PID=1732) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:11:02.144+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:11:02.146+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.145+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:11:02.147+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.147+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:11:02.151+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.150+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:11:02.171+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.169+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:11:02.173+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.173+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:11:02.173+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:11:02.175+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.175+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:11:02.176+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.176+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:11:02.191+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.191+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:11:02.197+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.196+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:02.202+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.201+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:02.206+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.206+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:02.210+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.210+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:02.215+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.214+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:02.219+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.219+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:02.223+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.223+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:02.245+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.245+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:11:02.246+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.245+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:11:02.286+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:02.286+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:11:02.312+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T08:11:32.574+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.572+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1740)
[2023-09-24T08:11:32.576+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.575+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1740
[2023-09-24T08:11:32.579+0000] {processor.py:157} INFO - Started process (PID=1740) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:11:32.580+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:11:32.581+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.580+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:11:32.583+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.582+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:11:32.587+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.587+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:11:32.608+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.606+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:11:32.611+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.611+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:11:32.611+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:11:32.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.613+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:11:32.614+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.613+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:11:32.628+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.627+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:11:32.633+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.632+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:32.638+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.638+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:32.642+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.642+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:32.646+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.646+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:32.650+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.649+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:32.654+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.654+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:32.658+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.658+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:11:32.680+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.680+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:11:32.681+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.681+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:11:32.726+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:11:32.725+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:11:32.749+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.177 seconds
[2023-09-24T08:12:02.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:02.981+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1747)
[2023-09-24T08:12:02.985+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:02.985+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1747
[2023-09-24T08:12:02.989+0000] {processor.py:157} INFO - Started process (PID=1747) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:12:02.990+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:12:02.991+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:02.990+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:12:02.992+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:02.992+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:12:02.996+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:02.996+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:12:03.017+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.015+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:12:03.019+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.019+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:12:03.020+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:12:03.022+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.021+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:12:03.022+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.022+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:12:03.037+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.036+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:12:03.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.042+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:03.047+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.047+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:03.051+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.050+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:03.055+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.055+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:03.059+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.058+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:03.063+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.062+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:03.067+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.066+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:03.088+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.087+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:12:03.089+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.088+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:12:03.130+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:03.130+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:12:03.167+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T08:12:33.430+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.428+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1755)
[2023-09-24T08:12:33.431+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.431+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1755
[2023-09-24T08:12:33.435+0000] {processor.py:157} INFO - Started process (PID=1755) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:12:33.436+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:12:33.437+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.436+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:12:33.438+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.438+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:12:33.442+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.441+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:12:33.463+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.461+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:12:33.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.465+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:12:33.466+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:12:33.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.467+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:12:33.468+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.468+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:12:33.483+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.482+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:12:33.488+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.487+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:33.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.492+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:33.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.496+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:33.501+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.500+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:33.505+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.504+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:33.509+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.509+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:33.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.513+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:12:33.536+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.535+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:12:33.536+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.536+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:12:33.576+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:12:33.575+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:12:33.600+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.172 seconds
[2023-09-24T08:13:03.782+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.780+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1763)
[2023-09-24T08:13:03.784+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.784+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1763
[2023-09-24T08:13:03.788+0000] {processor.py:157} INFO - Started process (PID=1763) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:13:03.789+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:13:03.790+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.790+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:13:03.792+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.791+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:13:03.796+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.796+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:13:03.820+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.818+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:13:03.823+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.822+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:13:03.823+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:13:03.826+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.825+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:13:03.826+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.826+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:13:03.843+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.843+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:13:03.850+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.849+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:03.855+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.854+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:03.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.859+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:03.869+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.868+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:03.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.873+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:03.877+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.876+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:03.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.881+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:03.906+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.905+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:13:03.906+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.906+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:13:03.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:03.950+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:13:03.976+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.196 seconds
[2023-09-24T08:13:34.272+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.270+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1771)
[2023-09-24T08:13:34.274+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.274+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1771
[2023-09-24T08:13:34.278+0000] {processor.py:157} INFO - Started process (PID=1771) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:13:34.279+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:13:34.280+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.280+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:13:34.282+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.281+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:13:34.285+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.285+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:13:34.306+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.304+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:13:34.308+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.308+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:13:34.308+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:13:34.310+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.310+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:13:34.311+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.310+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:13:34.325+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.325+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:13:34.331+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.330+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:34.335+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.335+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:34.339+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.339+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:34.343+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.342+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:34.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.347+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:34.351+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.351+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:34.355+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.355+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:13:34.376+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.376+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:13:34.377+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.376+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:13:34.418+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:13:34.417+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:13:34.445+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T08:14:04.587+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.586+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1779)
[2023-09-24T08:14:04.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.589+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1779
[2023-09-24T08:14:04.593+0000] {processor.py:157} INFO - Started process (PID=1779) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:14:04.594+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:14:04.595+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.595+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:14:04.597+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.596+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:14:04.600+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.600+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:14:04.622+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.619+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:14:04.624+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.624+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:14:04.625+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:14:04.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.626+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:14:04.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.627+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:14:04.642+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.641+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:14:04.647+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.646+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:04.652+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.651+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:04.656+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.656+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:04.660+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.660+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:04.664+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.664+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:04.668+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.667+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:04.671+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.671+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:04.693+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.693+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:14:04.694+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.693+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:14:04.735+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:04.734+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:14:04.760+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T08:14:35.116+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.114+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1787)
[2023-09-24T08:14:35.120+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.119+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1787
[2023-09-24T08:14:35.124+0000] {processor.py:157} INFO - Started process (PID=1787) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:14:35.125+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:14:35.127+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.126+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:14:35.130+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.129+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:14:35.135+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.134+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:14:35.159+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.156+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:14:35.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.161+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:14:35.162+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:14:35.163+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.163+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:14:35.164+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.163+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:14:35.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.178+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:14:35.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.183+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:35.189+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.188+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:35.193+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.193+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:35.197+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.197+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:35.201+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.200+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:35.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.204+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:35.208+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.208+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:14:35.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.229+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:14:35.231+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.230+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:14:35.296+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:14:35.296+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:14:35.325+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.211 seconds
[2023-09-24T08:15:05.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.424+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1795)
[2023-09-24T08:15:05.433+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.433+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1795
[2023-09-24T08:15:05.437+0000] {processor.py:157} INFO - Started process (PID=1795) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:15:05.438+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:15:05.439+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.438+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:15:05.441+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.440+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:15:05.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.444+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:15:05.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.463+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:15:05.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.467+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:15:05.468+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:15:05.470+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.469+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:15:05.470+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.470+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:15:05.484+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.484+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:15:05.490+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.489+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:05.495+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.494+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:05.499+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.499+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:05.503+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.503+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:05.507+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.507+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:05.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.511+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:05.515+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.515+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:05.537+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.536+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:15:05.538+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.537+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:15:05.578+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:05.578+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:15:05.604+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T08:15:35.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:35.958+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1803)
[2023-09-24T08:15:35.963+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:35.962+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1803
[2023-09-24T08:15:35.969+0000] {processor.py:157} INFO - Started process (PID=1803) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:15:35.970+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:15:35.972+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:35.971+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:15:35.974+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:35.974+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:15:35.979+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:35.978+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:15:36.004+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.002+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:15:36.009+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.008+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:15:36.009+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:15:36.012+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.011+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:15:36.013+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.012+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:15:36.033+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.032+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:15:36.040+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.039+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:36.045+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.045+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:36.050+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.050+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:36.057+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.057+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:36.061+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.061+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:36.066+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.065+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:36.070+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.070+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:15:36.095+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.094+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:15:36.096+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.095+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:15:36.149+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:15:36.141+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:15:36.209+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.251 seconds
[2023-09-24T08:16:06.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.356+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1811)
[2023-09-24T08:16:06.361+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.360+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1811
[2023-09-24T08:16:06.367+0000] {processor.py:157} INFO - Started process (PID=1811) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:16:06.367+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:16:06.369+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.368+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:16:06.371+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.370+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:16:06.376+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.375+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:16:06.401+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.399+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:16:06.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.404+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:16:06.405+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:16:06.407+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.407+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:16:06.408+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.408+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:16:06.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.425+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:16:06.433+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.431+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:06.437+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.436+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:06.441+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.440+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:06.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.445+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:06.450+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.449+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:06.454+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.453+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:06.458+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.458+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:06.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.479+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:16:06.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.480+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:16:06.520+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:06.520+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:16:06.544+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.188 seconds
[2023-09-24T08:16:36.664+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.663+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1819)
[2023-09-24T08:16:36.667+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.666+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1819
[2023-09-24T08:16:36.670+0000] {processor.py:157} INFO - Started process (PID=1819) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:16:36.671+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:16:36.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.672+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:16:36.674+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.673+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:16:36.678+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.677+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:16:36.698+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.696+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:16:36.701+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.701+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:16:36.701+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:16:36.703+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.703+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:16:36.704+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.703+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:16:36.718+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.718+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:16:36.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.723+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:36.728+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.728+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:36.732+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.732+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:36.736+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.735+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:36.740+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.739+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:36.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.743+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:36.748+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.747+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:16:36.769+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.769+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:16:36.770+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.769+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:16:36.809+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:16:36.808+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:16:36.832+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T08:17:07.066+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.064+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1827)
[2023-09-24T08:17:07.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.067+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1827
[2023-09-24T08:17:07.071+0000] {processor.py:157} INFO - Started process (PID=1827) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:17:07.071+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:17:07.073+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.072+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:17:07.074+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.074+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:17:07.078+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.077+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:17:07.099+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.097+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:17:07.102+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.101+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:17:07.102+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:17:07.103+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.103+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:17:07.104+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.104+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:17:07.118+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.117+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:17:07.123+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.122+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:07.128+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.127+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:07.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.131+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:07.135+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.135+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:07.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.139+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:07.143+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.143+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:07.147+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.147+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:07.169+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.168+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:17:07.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.169+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:17:07.211+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:07.211+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:17:07.238+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.174 seconds
[2023-09-24T08:17:37.393+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.391+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1835)
[2023-09-24T08:17:37.394+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.394+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1835
[2023-09-24T08:17:37.398+0000] {processor.py:157} INFO - Started process (PID=1835) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:17:37.398+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:17:37.399+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.399+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:17:37.401+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.401+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:17:37.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.404+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:17:37.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.423+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:17:37.428+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.427+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:17:37.428+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:17:37.430+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.430+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:17:37.430+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.430+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:17:37.446+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.445+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:17:37.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.451+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:37.457+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.457+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:37.464+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.462+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:37.469+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.468+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:37.473+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.472+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:37.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.476+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:37.481+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.481+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:17:37.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.509+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:17:37.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.510+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:17:37.553+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:17:37.552+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:17:37.577+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T08:18:07.825+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.823+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1843)
[2023-09-24T08:18:07.828+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.827+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1843
[2023-09-24T08:18:07.832+0000] {processor.py:157} INFO - Started process (PID=1843) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:18:07.832+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:18:07.834+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.833+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:18:07.835+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.835+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:18:07.839+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.839+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:18:07.861+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.859+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:18:07.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.863+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:18:07.864+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:18:07.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.865+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:18:07.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.866+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:18:07.882+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.882+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:18:07.888+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.887+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:07.893+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.892+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:07.897+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.896+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:07.900+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.900+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:07.905+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.904+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:07.908+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.908+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:07.912+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.912+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:07.936+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.935+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:18:07.937+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.936+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:18:07.977+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:07.976+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:18:08.003+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T08:18:38.060+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.058+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1851)
[2023-09-24T08:18:38.062+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.062+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1851
[2023-09-24T08:18:38.066+0000] {processor.py:157} INFO - Started process (PID=1851) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:18:38.066+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:18:38.067+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.067+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:18:38.069+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.069+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:18:38.073+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.072+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:18:38.093+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.091+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:18:38.095+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.095+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:18:38.096+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:18:38.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.097+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:18:38.098+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.098+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:18:38.113+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.113+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:18:38.119+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.118+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:38.123+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.123+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:38.127+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.127+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:38.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.131+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:38.136+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.135+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:38.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.140+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:38.145+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.144+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:18:38.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.168+0000] {serialized_dag.py:169} DEBUG - Writing Serialized DAG: example_bash_operator to the DB
[2023-09-24T08:18:38.174+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.174+0000] {serialized_dag.py:171} DEBUG - DAG: example_bash_operator written to the DB
[2023-09-24T08:18:38.175+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.174+0000] {dagbag.py:692} DEBUG - Syncing DAG permissions: example_bash_operator to the DB
[2023-09-24T08:18:38.475+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.475+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T08:18:38.476+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.476+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:18:38.515+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:18:38.515+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:18:38.545+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.487 seconds
[2023-09-24T08:19:08.748+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.747+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1859)
[2023-09-24T08:19:08.750+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.750+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1859
[2023-09-24T08:19:08.754+0000] {processor.py:157} INFO - Started process (PID=1859) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:19:08.754+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:19:08.756+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.755+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:19:08.757+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.757+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:19:08.761+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.761+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:19:08.782+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.779+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:19:08.784+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.784+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:19:08.784+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:19:08.786+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.786+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:19:08.787+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.786+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:19:08.801+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.801+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:19:08.807+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.806+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:08.812+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.811+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:08.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.815+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:08.819+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.819+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:08.823+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.823+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:08.827+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.827+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:08.831+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.831+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:08.857+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.857+0000] {serialized_dag.py:169} DEBUG - Writing Serialized DAG: example_bash_operator to the DB
[2023-09-24T08:19:08.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.863+0000] {serialized_dag.py:171} DEBUG - DAG: example_bash_operator written to the DB
[2023-09-24T08:19:08.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:08.864+0000] {dagbag.py:692} DEBUG - Syncing DAG permissions: example_bash_operator to the DB
[2023-09-24T08:19:09.008+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:09.008+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T08:19:09.009+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:09.009+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:19:09.057+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:09.056+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:19:09.089+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.342 seconds
[2023-09-24T08:19:39.175+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.173+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1867)
[2023-09-24T08:19:39.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.178+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1867
[2023-09-24T08:19:39.183+0000] {processor.py:157} INFO - Started process (PID=1867) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:19:39.184+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:19:39.185+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.184+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:19:39.187+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.186+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:19:39.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.190+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:19:39.214+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.212+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:19:39.216+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.216+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:19:39.217+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:19:39.219+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.219+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:19:39.220+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.219+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:19:39.235+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.234+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:19:39.240+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.240+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:39.245+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.244+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:39.249+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.248+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:39.253+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.253+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:39.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.256+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:39.260+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.260+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:39.264+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.264+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:19:39.286+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.285+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:19:39.287+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.286+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:19:39.332+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:19:39.331+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:19:39.362+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.189 seconds
[2023-09-24T08:20:09.739+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.737+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1880)
[2023-09-24T08:20:09.741+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.741+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1880
[2023-09-24T08:20:09.745+0000] {processor.py:157} INFO - Started process (PID=1880) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:20:09.745+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:20:09.747+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.746+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:20:09.748+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.748+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:20:09.752+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.752+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:20:09.773+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.771+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:20:09.775+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.775+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:20:09.776+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:20:09.777+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.777+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:20:09.778+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.778+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:20:09.793+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.792+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:20:09.799+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.798+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:09.803+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.803+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:09.807+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.807+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:09.812+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.811+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:09.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.815+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:09.820+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.820+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:09.824+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.824+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:09.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.846+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:20:09.847+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.846+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:20:09.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:09.888+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:20:09.915+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T08:20:40.059+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.057+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1888)
[2023-09-24T08:20:40.061+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.060+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1888
[2023-09-24T08:20:40.064+0000] {processor.py:157} INFO - Started process (PID=1888) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:20:40.065+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:20:40.066+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.066+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:20:40.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.067+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:20:40.072+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.072+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:20:40.092+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.090+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:20:40.094+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.094+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:20:40.095+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:20:40.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.096+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:20:40.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.097+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:20:40.111+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.111+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:20:40.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.116+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:40.121+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.121+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:40.125+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.125+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:40.129+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.129+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:40.133+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.132+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:40.136+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.136+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:40.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.140+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:20:40.163+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.162+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:20:40.164+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.163+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:20:40.204+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:20:40.204+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:20:40.228+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.171 seconds
[2023-09-24T08:21:10.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.562+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1896)
[2023-09-24T08:21:10.577+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.577+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1896
[2023-09-24T08:21:10.581+0000] {processor.py:157} INFO - Started process (PID=1896) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:21:10.581+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:21:10.583+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.582+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:21:10.584+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.584+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:21:10.588+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.588+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:21:10.611+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.609+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:21:10.614+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.613+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:21:10.614+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:21:10.615+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.615+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:21:10.616+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.616+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:21:10.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.631+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:21:10.637+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.636+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:10.641+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.641+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:10.645+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.645+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:10.649+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.649+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:10.653+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.652+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:10.656+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.656+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:10.660+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.660+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:10.683+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.682+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:21:10.684+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.683+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:21:10.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:10.723+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:21:10.748+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T08:21:40.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.918+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1904)
[2023-09-24T08:21:40.921+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.921+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1904
[2023-09-24T08:21:40.925+0000] {processor.py:157} INFO - Started process (PID=1904) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:21:40.925+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:21:40.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.926+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:21:40.928+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.927+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:21:40.931+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.931+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:21:40.952+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.949+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:21:40.955+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.954+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:21:40.955+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:21:40.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.957+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:21:40.958+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.957+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:21:40.972+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.972+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:21:40.979+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.978+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:40.984+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.983+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:40.988+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.988+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:40.993+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.992+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:40.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:40.996+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:41.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:41.000+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:41.005+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:41.005+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:21:41.027+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:41.027+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:21:41.028+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:41.028+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:21:41.070+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:21:41.069+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:21:41.096+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T08:22:11.431+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.428+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1912)
[2023-09-24T08:22:11.434+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.433+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1912
[2023-09-24T08:22:11.438+0000] {processor.py:157} INFO - Started process (PID=1912) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:22:11.438+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:22:11.439+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.439+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:22:11.441+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.440+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:22:11.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.444+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:22:11.466+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.463+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:22:11.469+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.469+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:22:11.469+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:22:11.476+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.471+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:22:11.476+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.476+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:22:11.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.492+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:22:11.500+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.498+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:11.505+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.505+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:11.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.509+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:11.514+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.513+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:11.518+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.517+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:11.522+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.522+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:11.526+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.525+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:11.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.547+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:22:11.548+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.548+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:22:11.590+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:11.590+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:22:11.622+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.194 seconds
[2023-09-24T08:22:41.701+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.700+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1920)
[2023-09-24T08:22:41.703+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.702+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1920
[2023-09-24T08:22:41.707+0000] {processor.py:157} INFO - Started process (PID=1920) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:22:41.707+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:22:41.709+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.708+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:22:41.710+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.710+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:22:41.719+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.719+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:22:41.742+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.739+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:22:41.744+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.744+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:22:41.745+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:22:41.748+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.747+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:22:41.749+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.749+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:22:41.766+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.766+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:22:41.772+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.771+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:41.777+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.776+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:41.782+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.781+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:41.786+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.785+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:41.790+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.789+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:41.795+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.794+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:41.800+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.799+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:22:41.824+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.823+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:22:41.824+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.824+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:22:41.877+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:22:41.876+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:22:41.910+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.210 seconds
[2023-09-24T08:23:12.123+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.121+0000] {settings.py:212} DEBUG - Setting up DB connection pool (PID 1928)
[2023-09-24T08:23:12.125+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.125+0000] {settings.py:317} DEBUG - settings.prepare_engine_args(): Using pool settings. pool_size=5, max_overflow=10, pool_recycle=1800, pid=1928
[2023-09-24T08:23:12.130+0000] {processor.py:157} INFO - Started process (PID=1928) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:23:12.130+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T08:23:12.131+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.131+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:23:12.133+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.133+0000] {dagbag.py:327} DEBUG - Importing /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:23:12.137+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.137+0000] {GetText.py:65} DEBUG - /home/airflow/.local/lib/python3.8/site-packages/cron_descriptor/locale/en_US.mo Loaded
[2023-09-24T08:23:12.160+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.157+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:23:12.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.162+0000] {dagbag.py:505} DEBUG - Loaded DAG <DAG: example_bash_operator>
[2023-09-24T08:23:12.163+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T08:23:12.165+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.164+0000] {dagbag.py:660} DEBUG - Running dagbag.sync_to_db with retries. Try 1 of 3
[2023-09-24T08:23:12.165+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.165+0000] {dagbag.py:665} DEBUG - Calling the DAG.bulk_sync_to_db method
[2023-09-24T08:23:12.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.181+0000] {serialized_dag.py:155} DEBUG - Checking if DAG (example_bash_operator) changed
[2023-09-24T08:23:12.187+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.186+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:23:12.192+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.192+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:23:12.196+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.196+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:23:12.200+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.199+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:23:12.204+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.203+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:23:12.208+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.208+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:23:12.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.212+0000] {serialized_objects.py:510} DEBUG - Cast type <class 'airflow.models.param.ParamsDict'> to str in serialization.
[2023-09-24T08:23:12.235+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.234+0000] {serialized_dag.py:166} DEBUG - Serialized DAG (example_bash_operator) is unchanged. Skipping writing to DB
[2023-09-24T08:23:12.235+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.235+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T08:23:12.277+0000] {logging_mixin.py:151} INFO - [2023-09-24T08:23:12.276+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T08:23:12.300+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T09:00:40.733+0000] {processor.py:157} INFO - Started process (PID=30) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:00:40.735+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:00:40.737+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:00:40.735+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:00:40.915+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:00:41.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:00:41.257+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T09:00:41.258+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:00:41.258+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:00:41.293+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:00:41.293+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:00:41.318+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.592 seconds
[2023-09-24T09:01:11.615+0000] {processor.py:157} INFO - Started process (PID=38) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:01:11.616+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:01:11.618+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:01:11.617+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:01:11.644+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:01:11.700+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:01:11.700+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:01:11.741+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:01:11.741+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:01:11.773+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T09:01:41.907+0000] {processor.py:157} INFO - Started process (PID=55) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:01:41.908+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:01:41.909+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:01:41.908+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:01:41.941+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:01:42.011+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:01:42.010+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:01:42.071+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:01:42.070+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:01:42.095+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.193 seconds
[2023-09-24T09:02:12.332+0000] {processor.py:157} INFO - Started process (PID=63) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:02:12.333+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:02:12.334+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:02:12.333+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:02:12.360+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:02:12.416+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:02:12.415+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:02:12.455+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:02:12.455+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:02:12.478+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T09:02:42.778+0000] {processor.py:157} INFO - Started process (PID=81) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:02:42.779+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:02:42.791+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:02:42.780+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:02:42.826+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:02:42.972+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:02:42.972+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:02:43.055+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:02:43.055+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:02:43.098+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.326 seconds
[2023-09-24T09:03:13.376+0000] {processor.py:157} INFO - Started process (PID=93) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:03:13.377+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:03:13.379+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:03:13.378+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:03:13.404+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:03:13.458+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:03:13.458+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:03:13.498+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:03:13.498+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:03:13.521+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T09:03:43.651+0000] {processor.py:157} INFO - Started process (PID=101) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:03:43.652+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:03:43.654+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:03:43.653+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:03:43.680+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:03:43.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:03:43.743+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:03:43.787+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:03:43.786+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:03:43.820+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.174 seconds
[2023-09-24T09:04:14.081+0000] {processor.py:157} INFO - Started process (PID=109) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:04:14.082+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:04:14.084+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:04:14.083+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:04:14.110+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:04:14.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:04:14.168+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:04:14.213+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:04:14.213+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:04:14.252+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.177 seconds
[2023-09-24T09:04:44.361+0000] {processor.py:157} INFO - Started process (PID=122) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:04:44.362+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:04:44.364+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:04:44.363+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:04:44.388+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:04:44.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:04:44.444+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:04:44.485+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:04:44.485+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:04:44.508+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T09:05:14.814+0000] {processor.py:157} INFO - Started process (PID=130) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:05:14.815+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T09:05:14.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:05:14.816+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:05:14.841+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T09:05:14.896+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:05:14.895+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T09:05:14.936+0000] {logging_mixin.py:151} INFO - [2023-09-24T09:05:14.936+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T09:05:14.962+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T10:03:15.979+0000] {processor.py:157} INFO - Started process (PID=37) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:03:15.981+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:03:15.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:03:15.982+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:03:16.139+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:03:16.751+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:03:16.750+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T10:03:16.752+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:03:16.751+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:03:16.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:03:16.880+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:03:16.926+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.980 seconds
[2023-09-24T10:03:47.356+0000] {processor.py:157} INFO - Started process (PID=45) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:03:47.357+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:03:47.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:03:47.357+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:03:47.382+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:03:47.436+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:03:47.435+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:03:47.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:03:47.476+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:03:47.504+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T10:04:17.641+0000] {processor.py:157} INFO - Started process (PID=53) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:04:17.643+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:04:17.644+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:04:17.643+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:04:17.668+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:04:17.721+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:04:17.721+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:04:17.762+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:04:17.761+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:04:17.785+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T10:04:47.995+0000] {processor.py:157} INFO - Started process (PID=61) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:04:47.996+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:04:47.998+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:04:47.997+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:04:48.022+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:04:48.094+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:04:48.093+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:04:48.149+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:04:48.148+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:04:48.181+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.190 seconds
[2023-09-24T10:05:18.311+0000] {processor.py:157} INFO - Started process (PID=69) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:05:18.312+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:05:18.315+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:05:18.313+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:05:18.342+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:05:18.406+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:05:18.405+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:05:18.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:05:18.445+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:05:18.468+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T10:05:48.771+0000] {processor.py:157} INFO - Started process (PID=77) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:05:48.772+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:05:48.773+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:05:48.772+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:05:48.798+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:05:48.868+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:05:48.867+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:05:48.910+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:05:48.909+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:05:48.936+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.169 seconds
[2023-09-24T10:06:19.073+0000] {processor.py:157} INFO - Started process (PID=85) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:06:19.075+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:06:19.077+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:06:19.076+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:06:19.102+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:06:19.158+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:06:19.158+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:06:19.199+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:06:19.198+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:06:19.224+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T10:06:49.563+0000] {processor.py:157} INFO - Started process (PID=93) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:06:49.564+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:06:49.566+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:06:49.565+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:06:49.590+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:06:49.645+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:06:49.645+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:06:49.684+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:06:49.683+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:06:49.710+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T10:07:19.874+0000] {processor.py:157} INFO - Started process (PID=101) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:07:19.876+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:07:19.878+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:07:19.877+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:07:19.903+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:07:19.963+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:07:19.962+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:07:20.006+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:07:20.005+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:07:20.030+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T10:07:50.357+0000] {processor.py:157} INFO - Started process (PID=109) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:07:50.359+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:07:50.361+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:07:50.359+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:07:50.385+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:07:50.450+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:07:50.450+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:07:50.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:07:50.492+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:07:50.534+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T10:08:20.669+0000] {processor.py:157} INFO - Started process (PID=117) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:08:20.671+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:08:20.672+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:08:20.671+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:08:20.701+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:08:20.756+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:08:20.755+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:08:20.796+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:08:20.795+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:08:20.820+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T10:08:50.951+0000] {processor.py:157} INFO - Started process (PID=125) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:08:50.952+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:08:50.954+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:08:50.953+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:08:50.979+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:08:51.035+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:08:51.035+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:08:51.080+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:08:51.080+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:08:51.106+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T10:09:21.390+0000] {processor.py:157} INFO - Started process (PID=133) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:09:21.391+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:09:21.393+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:09:21.391+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:09:21.417+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:09:21.473+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:09:21.472+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:09:21.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:09:21.512+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:09:21.539+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T10:09:51.639+0000] {processor.py:157} INFO - Started process (PID=140) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:09:51.640+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:09:51.642+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:09:51.641+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:09:51.668+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:09:51.725+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:09:51.725+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:09:51.771+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:09:51.770+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:09:51.796+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T10:10:22.047+0000] {processor.py:157} INFO - Started process (PID=148) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:10:22.048+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:10:22.050+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:10:22.049+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:10:22.075+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:10:22.134+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:10:22.133+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:10:22.174+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:10:22.174+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:10:22.198+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T10:11:22.991+0000] {processor.py:157} INFO - Started process (PID=36) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:11:23.000+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:11:23.007+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:11:23.002+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:11:23.088+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:11:24.124+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:11:24.123+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T10:11:24.125+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:11:24.124+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:11:24.200+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:11:24.199+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:11:24.260+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.287 seconds
[2023-09-24T10:11:54.694+0000] {processor.py:157} INFO - Started process (PID=44) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:11:54.696+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:11:54.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:11:54.696+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:11:54.721+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:11:54.778+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:11:54.778+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:11:54.818+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:11:54.818+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:11:54.846+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T10:12:24.922+0000] {processor.py:157} INFO - Started process (PID=53) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:12:24.924+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:12:24.926+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:12:24.924+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:12:24.950+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:12:25.007+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:12:25.006+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:12:25.047+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:12:25.046+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:12:25.071+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T10:12:55.369+0000] {processor.py:157} INFO - Started process (PID=61) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:12:55.371+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:12:55.373+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:12:55.372+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:12:55.410+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:12:55.486+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:12:55.485+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:12:55.540+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:12:55.540+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:12:55.569+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.208 seconds
[2023-09-24T10:13:25.731+0000] {processor.py:157} INFO - Started process (PID=69) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:13:25.733+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:13:25.735+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:13:25.734+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:13:25.762+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:13:25.817+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:13:25.816+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:13:25.856+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:13:25.855+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:13:25.883+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T10:13:56.139+0000] {processor.py:157} INFO - Started process (PID=77) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:13:56.140+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:13:56.142+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:13:56.141+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:13:56.167+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:13:56.221+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:13:56.221+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:13:56.260+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:13:56.259+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:13:56.283+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T10:14:26.409+0000] {processor.py:157} INFO - Started process (PID=85) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:14:26.411+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:14:26.413+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:14:26.412+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:14:26.439+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:14:26.508+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:14:26.508+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:14:26.547+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:14:26.546+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:14:26.572+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.168 seconds
[2023-09-24T10:14:56.711+0000] {processor.py:157} INFO - Started process (PID=93) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:14:56.712+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:14:56.714+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:14:56.713+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:14:56.740+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:14:56.799+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:14:56.799+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:14:56.840+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:14:56.840+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:14:56.873+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.169 seconds
[2023-09-24T10:15:27.049+0000] {processor.py:157} INFO - Started process (PID=101) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:15:27.050+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:15:27.052+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:15:27.051+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:15:27.077+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:15:27.142+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:15:27.141+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:15:27.182+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:15:27.182+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:15:27.206+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T10:15:57.434+0000] {processor.py:157} INFO - Started process (PID=109) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:15:57.436+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:15:57.438+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:15:57.437+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:15:57.464+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:15:57.551+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:15:57.551+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:15:57.597+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:15:57.597+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:15:57.621+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.194 seconds
[2023-09-24T10:16:27.680+0000] {processor.py:157} INFO - Started process (PID=117) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:16:27.681+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:16:27.683+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:16:27.682+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:16:27.707+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:16:27.764+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:16:27.764+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:16:27.803+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:16:27.802+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:16:27.827+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T10:16:58.033+0000] {processor.py:157} INFO - Started process (PID=125) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:16:58.034+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:16:58.036+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:16:58.035+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:16:58.060+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:16:58.115+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:16:58.115+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:16:58.155+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:16:58.154+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:16:58.180+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T10:17:28.324+0000] {processor.py:157} INFO - Started process (PID=133) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:17:28.325+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:17:28.327+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:17:28.326+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:17:28.352+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:17:28.407+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:17:28.407+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:17:28.448+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:17:28.447+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:17:28.474+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T10:17:58.730+0000] {processor.py:157} INFO - Started process (PID=141) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:17:58.731+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:17:58.733+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:17:58.732+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:17:58.758+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:17:58.814+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:17:58.813+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:17:58.858+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:17:58.857+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:17:58.882+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.159 seconds
[2023-09-24T10:18:29.082+0000] {processor.py:157} INFO - Started process (PID=149) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:18:29.083+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:18:29.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:18:29.084+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:18:29.113+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:18:29.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:18:29.183+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:18:29.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:18:29.237+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:18:29.274+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.197 seconds
[2023-09-24T10:18:59.466+0000] {processor.py:157} INFO - Started process (PID=157) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:18:59.468+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:18:59.470+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:18:59.469+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:18:59.497+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:18:59.559+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:18:59.558+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:18:59.601+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:18:59.601+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:18:59.627+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T10:19:29.770+0000] {processor.py:157} INFO - Started process (PID=165) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:19:29.771+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:19:29.773+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:19:29.772+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:19:29.801+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:19:29.858+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:19:29.857+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:19:29.910+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:19:29.910+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:19:29.941+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T10:20:00.159+0000] {processor.py:157} INFO - Started process (PID=173) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:20:00.161+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:20:00.163+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:20:00.162+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:20:00.189+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:20:00.244+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:20:00.244+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:20:00.284+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:20:00.284+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:20:00.308+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T10:20:30.440+0000] {processor.py:157} INFO - Started process (PID=181) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:20:30.442+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:20:30.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:20:30.443+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:20:30.468+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:20:30.524+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:20:30.523+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:20:30.568+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:20:30.567+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:20:30.593+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T10:21:00.873+0000] {processor.py:157} INFO - Started process (PID=189) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:21:00.875+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:21:00.876+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:21:00.875+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:21:00.900+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:21:00.957+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:21:00.956+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:21:00.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:21:00.997+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:21:01.022+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T10:33:06.869+0000] {processor.py:157} INFO - Started process (PID=37) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:33:06.871+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:33:06.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:33:06.871+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:33:06.962+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:33:07.482+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:33:07.481+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T10:33:07.488+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:33:07.487+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:33:07.560+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:33:07.559+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:33:07.611+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.756 seconds
[2023-09-24T10:33:37.791+0000] {processor.py:157} INFO - Started process (PID=44) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:33:37.792+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:33:37.795+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:33:37.794+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:33:37.834+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:33:37.941+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:33:37.940+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:33:38.023+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:33:38.022+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:33:38.073+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.288 seconds
[2023-09-24T10:34:08.389+0000] {processor.py:157} INFO - Started process (PID=52) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:34:08.390+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:34:08.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:34:08.391+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:34:08.427+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:34:08.489+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:34:08.488+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:34:08.534+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:34:08.533+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:34:08.562+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.179 seconds
[2023-09-24T10:34:38.681+0000] {processor.py:157} INFO - Started process (PID=60) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:34:38.682+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:34:38.684+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:34:38.683+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:34:38.723+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:34:38.790+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:34:38.790+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:34:38.839+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:34:38.838+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:34:38.875+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.200 seconds
[2023-09-24T10:35:08.986+0000] {processor.py:157} INFO - Started process (PID=68) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:35:08.987+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:35:08.989+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:35:08.988+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:35:09.019+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:35:09.082+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:35:09.082+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:35:09.126+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:35:09.126+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:35:09.155+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.176 seconds
[2023-09-24T10:35:39.518+0000] {processor.py:157} INFO - Started process (PID=76) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:35:39.519+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:35:39.520+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:35:39.519+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:35:39.550+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:35:39.617+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:35:39.616+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:35:39.661+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:35:39.660+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:35:39.689+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.183 seconds
[2023-09-24T10:36:39.463+0000] {processor.py:157} INFO - Started process (PID=37) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:36:39.475+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:36:39.478+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:36:39.476+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:36:40.124+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:36:40.530+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:36:40.529+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T10:36:40.537+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:36:40.536+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:36:40.603+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:36:40.602+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:36:40.655+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.201 seconds
[2023-09-24T10:37:10.697+0000] {processor.py:157} INFO - Started process (PID=50) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:37:10.699+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:37:10.702+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:37:10.700+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:37:10.756+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:37:10.852+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:37:10.851+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:37:10.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:37:10.917+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:37:10.957+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.266 seconds
[2023-09-24T10:37:41.240+0000] {processor.py:157} INFO - Started process (PID=58) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:37:41.241+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:37:41.242+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:37:41.241+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:37:41.273+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:37:41.342+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:37:41.342+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:37:41.388+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:37:41.387+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:37:41.417+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T10:38:11.543+0000] {processor.py:157} INFO - Started process (PID=66) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:38:11.544+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:38:11.550+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:38:11.545+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:38:11.579+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:38:11.642+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:38:11.642+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:38:11.686+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:38:11.686+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:38:11.714+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.178 seconds
[2023-09-24T10:38:42.001+0000] {processor.py:157} INFO - Started process (PID=74) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:38:42.003+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:38:42.006+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:38:42.004+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:38:42.045+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:38:42.110+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:38:42.109+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:38:42.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:38:42.154+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:38:42.188+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.194 seconds
[2023-09-24T10:39:12.318+0000] {processor.py:157} INFO - Started process (PID=82) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:39:12.319+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:39:12.321+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:39:12.320+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:39:12.350+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:39:12.423+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:39:12.423+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:39:12.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:39:12.467+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:39:12.494+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T10:39:42.692+0000] {processor.py:157} INFO - Started process (PID=95) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:39:42.693+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:39:42.695+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:39:42.694+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:39:42.728+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:39:42.800+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:39:42.799+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:39:42.854+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:39:42.853+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:39:42.888+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.201 seconds
[2023-09-24T10:40:12.967+0000] {processor.py:157} INFO - Started process (PID=103) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:12.968+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:40:12.970+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:12.969+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:13.004+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:13.071+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:13.071+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:40:13.127+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:13.126+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:40:13.159+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.197 seconds
[2023-09-24T10:40:36.305+0000] {processor.py:157} INFO - Started process (PID=111) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:36.306+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:40:36.307+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:36.306+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:36.337+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:36.403+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:36.402+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:40:36.448+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:36.447+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:40:36.479+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.179 seconds
[2023-09-24T10:40:42.392+0000] {processor.py:157} INFO - Started process (PID=112) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:42.392+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:40:42.394+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:42.393+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:42.422+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:42.492+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:42.492+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:40:42.540+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:42.539+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:40:42.571+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.184 seconds
[2023-09-24T10:40:54.646+0000] {processor.py:157} INFO - Started process (PID=113) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:54.648+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:40:54.650+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:54.649+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:54.692+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:54.906+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:54.906+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T10:40:54.911+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:54.911+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:40:54.952+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:54.952+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:40:54.983+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.343 seconds
[2023-09-24T10:40:55.714+0000] {processor.py:157} INFO - Started process (PID=114) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:55.715+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:40:55.716+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:55.715+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:55.770+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:40:55.788+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:55.787+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:40:55.844+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:40:55.843+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:40:55.891+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.183 seconds
[2023-09-24T10:41:25.924+0000] {processor.py:157} INFO - Started process (PID=127) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:41:25.925+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:41:25.927+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:41:25.926+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:41:25.962+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:41:26.029+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:41:26.028+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:41:26.077+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:41:26.077+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:41:26.105+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T10:41:56.463+0000] {processor.py:157} INFO - Started process (PID=136) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:41:56.464+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:41:56.466+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:41:56.465+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:41:56.493+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:41:56.555+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:41:56.554+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:41:56.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:41:56.598+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:41:56.625+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T10:42:26.720+0000] {processor.py:157} INFO - Started process (PID=144) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:26.722+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:42:26.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:26.723+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:26.752+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:26.815+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:26.814+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:42:26.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:26.858+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:42:26.886+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.171 seconds
[2023-09-24T10:42:44.080+0000] {processor.py:157} INFO - Started process (PID=152) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:44.081+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:42:44.082+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:44.081+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:44.108+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:44.320+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:44.319+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T10:42:44.325+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:44.324+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:42:44.395+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:44.395+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:42:44.447+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.372 seconds
[2023-09-24T10:42:49.121+0000] {processor.py:157} INFO - Started process (PID=153) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:49.122+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:42:49.124+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:49.123+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:49.151+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:49.172+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:49.171+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:42:49.220+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:49.219+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:42:49.255+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T10:42:51.161+0000] {processor.py:157} INFO - Started process (PID=154) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:51.162+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:42:51.171+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:51.163+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:51.205+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:51.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:51.236+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:42:51.323+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:51.322+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:42:51.369+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.213 seconds
[2023-09-24T10:42:58.379+0000] {processor.py:157} INFO - Started process (PID=155) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:58.380+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:42:58.385+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:58.384+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:58.411+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:58.428+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:58.427+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:42:58.475+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:58.474+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:42:58.510+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.138 seconds
[2023-09-24T10:42:59.442+0000] {processor.py:157} INFO - Started process (PID=156) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:59.444+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:42:59.446+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:59.445+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:59.491+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:42:59.508+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:59.507+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:42:59.562+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:42:59.561+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:42:59.603+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T10:43:01.554+0000] {processor.py:157} INFO - Started process (PID=164) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:01.555+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:01.558+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:01.556+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:01.582+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:01.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:01.598+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:01.647+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:01.646+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:01.679+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.130 seconds
[2023-09-24T10:43:31.932+0000] {processor.py:157} INFO - Started process (PID=171) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:31.933+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:31.935+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:31.934+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:31.959+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:32.134+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:32.133+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T10:43:32.139+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:32.138+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:32.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:32.183+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:32.220+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.293 seconds
[2023-09-24T10:43:33.251+0000] {processor.py:157} INFO - Started process (PID=172) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:33.252+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:33.254+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:33.252+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:33.282+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:33.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:33.298+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:33.352+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:33.351+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:33.389+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.144 seconds
[2023-09-24T10:43:35.271+0000] {processor.py:157} INFO - Started process (PID=173) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:35.273+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:35.275+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:35.273+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:35.303+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:35.321+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:35.320+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:35.368+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:35.367+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:35.397+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.131 seconds
[2023-09-24T10:43:36.301+0000] {processor.py:157} INFO - Started process (PID=174) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:36.302+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:36.304+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:36.303+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:36.329+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:36.345+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:36.345+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:36.391+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:36.391+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:36.420+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.125 seconds
[2023-09-24T10:43:44.487+0000] {processor.py:157} INFO - Started process (PID=175) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:44.488+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:44.490+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:44.489+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:44.531+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:44.547+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:44.547+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:44.609+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:44.608+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:44.647+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T10:43:45.522+0000] {processor.py:157} INFO - Started process (PID=176) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:45.523+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:45.525+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:45.524+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:45.546+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:45.563+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:45.563+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:45.608+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:45.607+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:45.637+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.120 seconds
[2023-09-24T10:43:46.543+0000] {processor.py:157} INFO - Started process (PID=177) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:46.544+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:46.546+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:46.545+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:46.570+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:46.585+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:46.585+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:46.633+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:46.632+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:46.665+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.128 seconds
[2023-09-24T10:43:48.678+0000] {processor.py:157} INFO - Started process (PID=178) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:48.679+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:48.682+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:48.680+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:48.709+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:48.725+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:48.725+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:48.771+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:48.771+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:48.804+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.131 seconds
[2023-09-24T10:43:49.735+0000] {processor.py:157} INFO - Started process (PID=179) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:49.736+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:49.738+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:49.737+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:49.762+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:49.778+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:49.778+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:49.827+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:49.826+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:49.855+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.128 seconds
[2023-09-24T10:43:51.859+0000] {processor.py:157} INFO - Started process (PID=180) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:51.860+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:43:51.862+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:51.861+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:51.889+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:43:51.904+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:51.904+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:43:51.952+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:43:51.951+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:43:51.984+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.132 seconds
[2023-09-24T10:44:05.000+0000] {processor.py:157} INFO - Started process (PID=188) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:44:05.002+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:44:05.007+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:44:05.004+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:44:05.050+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:44:05.095+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:44:05.094+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:44:05.142+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:44:05.141+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:44:05.174+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.186 seconds
[2023-09-24T10:44:07.226+0000] {processor.py:157} INFO - Started process (PID=189) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:44:07.227+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:44:07.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:44:07.228+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:44:07.261+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:44:07.316+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:44:07.315+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:44:07.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:44:07.363+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:44:07.408+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.191 seconds
[2023-09-24T10:44:37.490+0000] {processor.py:157} INFO - Started process (PID=197) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:44:37.491+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:44:37.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:44:37.492+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:44:37.521+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:44:37.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:44:37.563+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:44:37.611+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:44:37.611+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:44:37.639+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T10:45:07.906+0000] {processor.py:157} INFO - Started process (PID=205) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:45:07.907+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:45:07.909+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:45:07.908+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:45:07.945+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:45:07.985+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:45:07.984+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:45:08.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:45:08.030+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:45:08.059+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.159 seconds
[2023-09-24T10:45:38.147+0000] {processor.py:157} INFO - Started process (PID=213) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:45:38.148+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:45:38.151+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:45:38.149+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:45:38.175+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:45:38.216+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:45:38.216+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:45:38.260+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:45:38.259+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:45:38.288+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T10:46:08.539+0000] {processor.py:157} INFO - Started process (PID=221) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:46:08.541+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:46:08.542+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:46:08.541+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:46:08.568+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:46:08.612+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:46:08.612+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:46:08.657+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:46:08.656+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:46:08.683+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T10:46:38.888+0000] {processor.py:157} INFO - Started process (PID=229) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:46:38.890+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:46:38.892+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:46:38.891+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:46:38.917+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:46:38.965+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:46:38.965+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:46:39.011+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:46:39.011+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:46:39.044+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T10:47:09.384+0000] {processor.py:157} INFO - Started process (PID=237) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:47:09.386+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:47:09.389+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:47:09.387+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:47:09.429+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:47:09.503+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:47:09.503+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:47:09.594+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:47:09.593+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:47:09.648+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.272 seconds
[2023-09-24T10:47:39.862+0000] {processor.py:157} INFO - Started process (PID=245) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:47:39.863+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:47:39.865+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:47:39.864+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:47:39.890+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:47:39.955+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:47:39.954+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:47:40.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:47:40.000+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:47:40.028+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.171 seconds
[2023-09-24T10:48:10.311+0000] {processor.py:157} INFO - Started process (PID=253) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:48:10.312+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:48:10.313+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:48:10.312+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:48:10.338+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:48:10.380+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:48:10.380+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:48:10.425+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:48:10.425+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:48:10.453+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T10:48:40.642+0000] {processor.py:157} INFO - Started process (PID=261) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:48:40.643+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:48:40.645+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:48:40.644+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:48:40.673+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:48:40.718+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:48:40.718+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:48:40.777+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:48:40.776+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:48:40.833+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.197 seconds
[2023-09-24T10:49:11.039+0000] {processor.py:157} INFO - Started process (PID=269) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:49:11.041+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:49:11.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:49:11.042+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:49:11.069+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:49:11.110+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:49:11.110+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:49:11.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:49:11.154+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:49:11.183+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T10:49:41.467+0000] {processor.py:157} INFO - Started process (PID=277) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:49:41.468+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:49:41.470+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:49:41.469+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:49:41.494+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:49:41.536+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:49:41.535+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:49:41.580+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:49:41.580+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:49:41.609+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T10:50:11.857+0000] {processor.py:157} INFO - Started process (PID=285) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:50:11.858+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:50:11.860+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:50:11.859+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:50:11.890+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:50:11.941+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:50:11.940+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:50:11.996+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:50:11.995+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:50:12.032+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T10:50:42.168+0000] {processor.py:157} INFO - Started process (PID=293) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:50:42.169+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:50:42.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:50:42.169+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:50:42.195+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:50:42.245+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:50:42.245+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:50:42.296+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:50:42.296+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:50:42.329+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T10:51:12.574+0000] {processor.py:157} INFO - Started process (PID=301) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:51:12.575+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:51:12.577+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:51:12.576+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:51:12.601+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:51:12.641+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:51:12.641+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:51:12.684+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:51:12.683+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:51:12.711+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T10:51:42.955+0000] {processor.py:157} INFO - Started process (PID=309) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:51:42.957+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:51:42.959+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:51:42.958+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:51:42.993+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:51:43.047+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:51:43.046+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:51:43.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:51:43.183+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:51:43.242+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.294 seconds
[2023-09-24T10:52:13.309+0000] {processor.py:157} INFO - Started process (PID=317) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:52:13.310+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:52:13.312+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:52:13.311+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:52:13.337+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:52:13.378+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:52:13.377+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:52:13.421+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:52:13.421+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:52:13.452+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T10:52:43.527+0000] {processor.py:157} INFO - Started process (PID=325) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:52:43.528+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:52:43.530+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:52:43.529+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:52:43.555+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:52:43.596+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:52:43.596+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:52:43.641+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:52:43.640+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:52:43.670+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T10:53:13.864+0000] {processor.py:157} INFO - Started process (PID=333) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:53:13.865+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:53:13.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:53:13.865+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:53:13.891+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:53:13.933+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:53:13.933+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:53:13.977+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:53:13.977+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:53:14.004+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T10:53:44.097+0000] {processor.py:157} INFO - Started process (PID=341) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:53:44.099+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:53:44.101+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:53:44.100+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:53:44.131+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:53:44.184+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:53:44.183+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:53:44.240+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:53:44.239+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:53:44.276+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.184 seconds
[2023-09-24T10:54:14.350+0000] {processor.py:157} INFO - Started process (PID=349) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:54:14.351+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:54:14.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:54:14.352+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:54:14.378+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:54:14.419+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:54:14.419+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:54:14.466+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:54:14.466+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:54:14.494+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T10:54:44.569+0000] {processor.py:157} INFO - Started process (PID=357) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:54:44.571+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:54:44.573+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:54:44.572+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:54:44.604+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:54:44.658+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:54:44.658+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:54:44.722+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:54:44.721+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:54:44.765+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.201 seconds
[2023-09-24T10:55:15.003+0000] {processor.py:157} INFO - Started process (PID=365) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:55:15.004+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:55:15.006+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:55:15.005+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:55:15.031+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:55:15.105+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:55:15.104+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:55:15.158+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:55:15.157+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:55:15.195+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.197 seconds
[2023-09-24T10:55:45.285+0000] {processor.py:157} INFO - Started process (PID=373) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:55:45.286+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:55:45.288+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:55:45.287+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:55:45.313+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:55:45.357+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:55:45.356+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:55:45.406+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:55:45.401+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:55:45.435+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T10:56:15.656+0000] {processor.py:157} INFO - Started process (PID=381) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:56:15.657+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:56:15.659+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:56:15.658+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:56:15.685+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:56:15.726+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:56:15.726+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:56:15.779+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:56:15.779+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:56:15.808+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T10:56:46.007+0000] {processor.py:157} INFO - Started process (PID=389) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:56:46.009+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:56:46.012+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:56:46.010+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:56:46.042+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:56:46.094+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:56:46.093+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:56:46.140+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:56:46.139+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:56:46.169+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T10:57:16.362+0000] {processor.py:157} INFO - Started process (PID=396) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:57:16.363+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:57:16.365+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:57:16.364+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:57:16.389+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:57:16.437+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:57:16.436+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:57:16.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:57:16.480+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:57:16.513+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T10:57:46.687+0000] {processor.py:157} INFO - Started process (PID=404) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:57:46.688+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:57:46.690+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:57:46.689+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:57:46.719+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:57:46.766+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:57:46.766+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:57:46.816+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:57:46.815+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:57:46.851+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.169 seconds
[2023-09-24T10:58:17.042+0000] {processor.py:157} INFO - Started process (PID=412) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:58:17.043+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:58:17.045+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:58:17.044+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:58:17.071+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:58:17.113+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:58:17.112+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:58:17.156+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:58:17.155+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:58:17.183+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T10:58:47.348+0000] {processor.py:157} INFO - Started process (PID=420) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:58:47.351+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:58:47.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:58:47.351+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:58:47.384+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:58:47.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:58:47.439+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:58:47.515+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:58:47.514+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:58:47.560+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.218 seconds
[2023-09-24T10:59:17.749+0000] {processor.py:157} INFO - Started process (PID=428) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:59:17.751+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:59:17.753+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:59:17.752+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:59:17.782+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:59:17.826+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:59:17.826+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:59:17.874+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:59:17.873+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:59:17.911+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T10:59:48.029+0000] {processor.py:157} INFO - Started process (PID=436) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:59:48.030+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T10:59:48.032+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:59:48.031+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:59:48.059+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T10:59:48.105+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:59:48.104+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T10:59:48.149+0000] {logging_mixin.py:151} INFO - [2023-09-24T10:59:48.148+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T10:59:48.177+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T11:00:18.339+0000] {processor.py:157} INFO - Started process (PID=444) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:00:18.341+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:00:18.343+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:00:18.342+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:00:18.370+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:00:18.414+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:00:18.414+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:00:18.459+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:00:18.459+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:00:18.488+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T11:00:48.713+0000] {processor.py:157} INFO - Started process (PID=452) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:00:48.714+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:00:48.717+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:00:48.715+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:00:48.742+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:00:48.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:00:48.840+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:00:48.887+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:00:48.886+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:00:48.917+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.210 seconds
[2023-09-24T11:01:18.986+0000] {processor.py:157} INFO - Started process (PID=460) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:01:18.987+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:01:18.989+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:01:18.987+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:01:19.013+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:01:19.053+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:01:19.053+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:01:19.095+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:01:19.095+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:01:19.124+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T11:01:49.232+0000] {processor.py:157} INFO - Started process (PID=468) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:01:49.234+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:01:49.236+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:01:49.235+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:01:49.270+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:01:49.317+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:01:49.316+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:01:49.364+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:01:49.363+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:01:49.393+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T11:02:19.469+0000] {processor.py:157} INFO - Started process (PID=476) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:02:19.470+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:02:19.472+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:02:19.471+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:02:19.508+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:02:19.586+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:02:19.586+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:02:19.630+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:02:19.630+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:02:19.660+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.200 seconds
[2023-09-24T11:02:49.883+0000] {processor.py:157} INFO - Started process (PID=484) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:02:49.884+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:02:49.886+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:02:49.885+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:02:49.910+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:02:49.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:02:49.952+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:02:49.998+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:02:49.997+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:02:50.026+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T11:03:20.274+0000] {processor.py:157} INFO - Started process (PID=492) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:03:20.275+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:03:20.277+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:03:20.276+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:03:20.301+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:03:20.341+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:03:20.341+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:03:20.385+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:03:20.384+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:03:20.412+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T11:03:50.673+0000] {processor.py:157} INFO - Started process (PID=500) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:03:50.674+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:03:50.676+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:03:50.675+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:03:50.699+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:03:50.738+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:03:50.737+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:03:50.781+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:03:50.780+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:03:50.808+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T11:04:20.919+0000] {processor.py:157} INFO - Started process (PID=508) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:04:20.920+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:04:20.922+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:04:20.921+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:04:20.947+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:04:20.989+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:04:20.988+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:04:21.035+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:04:21.035+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:04:21.064+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T11:04:51.153+0000] {processor.py:157} INFO - Started process (PID=516) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:04:51.154+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:04:51.156+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:04:51.155+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:04:51.182+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:04:51.224+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:04:51.224+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:04:51.269+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:04:51.269+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:04:51.298+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T11:05:21.507+0000] {processor.py:157} INFO - Started process (PID=524) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:05:21.508+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:05:21.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:05:21.509+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:05:21.543+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:05:21.592+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:05:21.592+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:05:21.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:05:21.638+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:05:21.667+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T11:05:51.865+0000] {processor.py:157} INFO - Started process (PID=532) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:05:51.867+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:05:51.868+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:05:51.867+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:05:51.895+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:05:51.938+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:05:51.938+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:05:51.985+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:05:51.984+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:05:52.012+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T11:06:22.090+0000] {processor.py:157} INFO - Started process (PID=540) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:06:22.092+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:06:22.094+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:06:22.093+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:06:22.121+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:06:22.167+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:06:22.166+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:06:22.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:06:22.212+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:06:22.239+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T11:06:52.590+0000] {processor.py:157} INFO - Started process (PID=548) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:06:52.591+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:06:52.596+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:06:52.593+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:06:52.625+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:06:52.675+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:06:52.675+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:06:52.734+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:06:52.734+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:06:52.783+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.200 seconds
[2023-09-24T11:07:22.873+0000] {processor.py:157} INFO - Started process (PID=556) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:07:22.875+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:07:22.877+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:07:22.876+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:07:22.903+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:07:22.945+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:07:22.944+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:07:22.990+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:07:22.989+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:07:23.018+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T11:07:53.227+0000] {processor.py:157} INFO - Started process (PID=564) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:07:53.228+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:07:53.230+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:07:53.229+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:07:53.255+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:07:53.300+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:07:53.299+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:07:53.348+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:07:53.348+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:07:53.375+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T11:08:23.436+0000] {processor.py:157} INFO - Started process (PID=572) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:08:23.438+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:08:23.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:08:23.439+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:08:23.465+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:08:23.651+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:08:23.651+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T11:08:23.657+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:08:23.656+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:08:23.700+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:08:23.699+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:08:23.732+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.302 seconds
[2023-09-24T11:08:53.780+0000] {processor.py:157} INFO - Started process (PID=580) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:08:53.781+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:08:53.783+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:08:53.782+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:08:53.812+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:08:53.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:08:53.858+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:08:53.904+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:08:53.903+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:08:53.931+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.160 seconds
[2023-09-24T11:09:24.122+0000] {processor.py:157} INFO - Started process (PID=588) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:09:24.123+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:09:24.125+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:09:24.124+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:09:24.152+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:09:24.196+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:09:24.195+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:09:24.246+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:09:24.245+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:09:24.276+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.159 seconds
[2023-09-24T11:09:54.400+0000] {processor.py:157} INFO - Started process (PID=596) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:09:54.401+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:09:54.403+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:09:54.402+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:09:54.427+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:09:54.468+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:09:54.468+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:09:54.516+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:09:54.515+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:09:54.546+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T11:10:24.671+0000] {processor.py:157} INFO - Started process (PID=603) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:10:24.673+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:10:24.675+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:10:24.674+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:10:24.700+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:10:24.742+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:10:24.741+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:10:24.787+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:10:24.786+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:10:24.814+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T11:10:55.077+0000] {processor.py:157} INFO - Started process (PID=611) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:10:55.078+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:10:55.104+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:10:55.079+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:10:55.146+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:10:55.199+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:10:55.198+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:10:55.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:10:55.257+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:10:55.311+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.241 seconds
[2023-09-24T11:11:25.603+0000] {processor.py:157} INFO - Started process (PID=618) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:11:25.605+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:11:25.607+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:11:25.606+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:11:25.632+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:11:25.819+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:11:25.819+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T11:11:25.824+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:11:25.824+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:11:25.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:11:25.865+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:11:25.903+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.305 seconds
[2023-09-24T11:11:55.948+0000] {processor.py:157} INFO - Started process (PID=626) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:11:55.950+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:11:55.952+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:11:55.951+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:11:55.986+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:11:56.029+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:11:56.028+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:11:56.073+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:11:56.073+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:11:56.105+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T11:12:26.378+0000] {processor.py:157} INFO - Started process (PID=634) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:12:26.379+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:12:26.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:12:26.380+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:12:26.407+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:12:26.451+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:12:26.451+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:12:26.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:12:26.496+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:12:26.525+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T11:12:56.729+0000] {processor.py:157} INFO - Started process (PID=642) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:12:56.730+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:12:56.732+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:12:56.731+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:12:56.756+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:12:56.796+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:12:56.795+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:12:56.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:12:56.841+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:12:56.869+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T11:13:27.012+0000] {processor.py:157} INFO - Started process (PID=650) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:13:27.014+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:13:27.016+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:13:27.015+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:13:27.040+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:13:27.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:13:27.084+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:13:27.133+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:13:27.132+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:13:27.161+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T11:13:57.315+0000] {processor.py:157} INFO - Started process (PID=658) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:13:57.316+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:13:57.318+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:13:57.317+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:13:57.345+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:13:57.395+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:13:57.395+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:13:57.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:13:57.440+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:13:57.478+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.168 seconds
[2023-09-24T11:14:27.696+0000] {processor.py:157} INFO - Started process (PID=666) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:14:27.698+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:14:27.699+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:14:27.698+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:14:27.730+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:14:27.781+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:14:27.780+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:14:27.830+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:14:27.829+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:14:27.860+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.169 seconds
[2023-09-24T11:14:57.973+0000] {processor.py:157} INFO - Started process (PID=674) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:14:57.974+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:14:57.977+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:14:57.975+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:14:58.004+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:14:58.047+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:14:58.047+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:14:58.095+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:14:58.094+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:14:58.125+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T11:15:28.318+0000] {processor.py:157} INFO - Started process (PID=682) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:15:28.320+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:15:28.322+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:15:28.321+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:15:28.348+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:15:28.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:15:28.392+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:15:28.437+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:15:28.437+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:15:28.470+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T11:15:58.660+0000] {processor.py:157} INFO - Started process (PID=690) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:15:58.661+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:15:58.664+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:15:58.663+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:15:58.690+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:15:58.734+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:15:58.734+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:15:58.784+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:15:58.784+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:15:58.816+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.161 seconds
[2023-09-24T11:16:28.946+0000] {processor.py:157} INFO - Started process (PID=698) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:16:28.947+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:16:28.949+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:16:28.948+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:16:28.973+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:16:29.026+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:16:29.026+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:16:29.073+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:16:29.072+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:16:29.106+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T11:16:59.361+0000] {processor.py:157} INFO - Started process (PID=705) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:16:59.362+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:16:59.364+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:16:59.363+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:16:59.390+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:16:59.435+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:16:59.434+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:16:59.483+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:16:59.483+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:16:59.513+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T11:17:29.572+0000] {processor.py:157} INFO - Started process (PID=713) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:17:29.573+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:17:29.575+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:17:29.574+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:17:29.600+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:17:29.643+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:17:29.643+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:17:29.689+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:17:29.688+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:17:29.716+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T11:17:59.948+0000] {processor.py:157} INFO - Started process (PID=721) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:17:59.949+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:17:59.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:17:59.950+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:17:59.976+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:18:00.160+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:18:00.160+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T11:18:00.165+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:18:00.165+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:18:00.208+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:18:00.208+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:18:00.238+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.295 seconds
[2023-09-24T11:18:30.512+0000] {processor.py:157} INFO - Started process (PID=729) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:18:30.514+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:18:30.516+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:18:30.515+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:18:30.542+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:18:30.588+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:18:30.588+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:18:30.636+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:18:30.635+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:18:30.667+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.163 seconds
[2023-09-24T11:19:00.787+0000] {processor.py:157} INFO - Started process (PID=737) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:19:00.788+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:19:00.790+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:19:00.789+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:19:00.822+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:19:00.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:19:00.873+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:19:00.922+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:19:00.921+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:19:00.951+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.170 seconds
[2023-09-24T11:19:31.162+0000] {processor.py:157} INFO - Started process (PID=745) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:19:31.164+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:19:31.166+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:19:31.165+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:19:31.191+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:19:31.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:19:31.236+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:19:31.284+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:19:31.284+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:19:31.317+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T11:20:01.538+0000] {processor.py:157} INFO - Started process (PID=753) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:20:01.539+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:20:01.542+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:20:01.540+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:20:01.570+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:20:01.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:20:01.612+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:20:01.657+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:20:01.657+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:20:01.684+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T11:20:31.878+0000] {processor.py:157} INFO - Started process (PID=761) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:20:31.879+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:20:31.881+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:20:31.880+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:20:31.905+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:20:31.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:20:31.946+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:20:31.990+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:20:31.989+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:20:32.019+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T11:21:02.296+0000] {processor.py:157} INFO - Started process (PID=769) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:21:02.297+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:21:02.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:21:02.298+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:21:02.325+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:21:02.367+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:21:02.366+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:21:02.412+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:21:02.411+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:21:02.441+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T11:21:32.594+0000] {processor.py:157} INFO - Started process (PID=777) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:21:32.595+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:21:32.597+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:21:32.596+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:21:32.622+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:21:32.667+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:21:32.666+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:21:32.711+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:21:32.710+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:21:32.749+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.160 seconds
[2023-09-24T11:22:02.962+0000] {processor.py:157} INFO - Started process (PID=785) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:22:02.964+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:22:02.966+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:22:02.965+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:22:03.002+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:22:03.054+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:22:03.053+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:22:03.120+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:22:03.120+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:22:03.151+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.194 seconds
[2023-09-24T11:22:33.193+0000] {processor.py:157} INFO - Started process (PID=793) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:22:33.195+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:22:33.198+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:22:33.196+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:22:33.224+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:22:33.271+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:22:33.271+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:22:33.321+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:22:33.320+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:22:33.353+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T11:23:03.574+0000] {processor.py:157} INFO - Started process (PID=801) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:23:03.575+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:23:03.577+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:23:03.576+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:23:03.600+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:23:03.642+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:23:03.641+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:23:03.687+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:23:03.686+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:23:03.716+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T11:23:33.814+0000] {processor.py:157} INFO - Started process (PID=809) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:23:33.815+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:23:33.817+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:23:33.816+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:23:33.842+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:23:33.898+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:23:33.898+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:23:33.940+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:23:33.940+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:23:33.969+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.161 seconds
[2023-09-24T11:24:04.260+0000] {processor.py:157} INFO - Started process (PID=817) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:24:04.261+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:24:04.263+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:24:04.262+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:24:04.293+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:24:04.335+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:24:04.335+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:24:04.379+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:24:04.379+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:24:04.411+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T11:24:34.599+0000] {processor.py:157} INFO - Started process (PID=825) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:24:34.601+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:24:34.603+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:24:34.602+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:24:34.629+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:24:34.671+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:24:34.670+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:24:34.716+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:24:34.716+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:24:34.744+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T11:25:04.948+0000] {processor.py:157} INFO - Started process (PID=833) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:25:04.949+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:25:04.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:25:04.950+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:25:04.978+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:25:05.023+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:25:05.022+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:25:05.069+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:25:05.069+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:25:05.097+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T11:25:35.271+0000] {processor.py:157} INFO - Started process (PID=841) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:25:35.272+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:25:35.274+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:25:35.273+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:25:35.297+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:25:35.341+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:25:35.340+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:25:35.385+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:25:35.385+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:25:35.414+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T11:26:05.698+0000] {processor.py:157} INFO - Started process (PID=849) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:26:05.700+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:26:05.702+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:26:05.701+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:26:05.726+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:26:05.767+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:26:05.767+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:26:05.810+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:26:05.809+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:26:05.837+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T11:26:36.000+0000] {processor.py:157} INFO - Started process (PID=857) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:26:36.001+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:26:36.004+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:26:36.002+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:26:36.031+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:26:36.084+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:26:36.083+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:26:36.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:26:36.131+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:26:36.162+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.168 seconds
[2023-09-24T11:27:06.382+0000] {processor.py:157} INFO - Started process (PID=865) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:27:06.383+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:27:06.385+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:27:06.384+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:27:06.410+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:27:06.450+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:27:06.450+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:27:06.507+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:27:06.506+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:27:06.536+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.159 seconds
[2023-09-24T11:27:36.621+0000] {processor.py:157} INFO - Started process (PID=873) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:27:36.623+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:27:36.625+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:27:36.624+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:27:36.652+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:27:36.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:27:36.697+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:27:36.745+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:27:36.744+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:27:36.776+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T11:28:07.045+0000] {processor.py:157} INFO - Started process (PID=881) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:28:07.047+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:28:07.049+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:28:07.048+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:28:07.074+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:28:07.114+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:28:07.114+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:28:07.159+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:28:07.158+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:28:07.188+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T11:28:37.383+0000] {processor.py:157} INFO - Started process (PID=888) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:28:37.384+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:28:37.386+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:28:37.385+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:28:37.411+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:28:37.453+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:28:37.452+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:28:37.498+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:28:37.497+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:28:37.527+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T11:29:07.673+0000] {processor.py:157} INFO - Started process (PID=896) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:29:07.676+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:29:07.678+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:29:07.677+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:29:07.708+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:29:07.755+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:29:07.754+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:29:07.802+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:29:07.801+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:29:07.829+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T11:29:37.977+0000] {processor.py:157} INFO - Started process (PID=904) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:29:37.978+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:29:37.980+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:29:37.979+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:29:38.005+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:29:38.046+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:29:38.045+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:29:38.090+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:29:38.089+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:29:38.117+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T11:30:08.276+0000] {processor.py:157} INFO - Started process (PID=912) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:30:08.277+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:30:08.279+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:30:08.277+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:30:08.305+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:30:08.351+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:30:08.350+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:30:08.399+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:30:08.398+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:30:08.434+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T11:30:38.655+0000] {processor.py:157} INFO - Started process (PID=927) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:30:38.656+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:30:38.658+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:30:38.657+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:30:38.682+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:30:38.723+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:30:38.723+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:30:38.769+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:30:38.768+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:30:38.798+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T11:31:08.864+0000] {processor.py:157} INFO - Started process (PID=935) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:31:08.865+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:31:08.867+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:31:08.866+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:31:08.892+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:31:08.935+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:31:08.935+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:31:08.981+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:31:08.981+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:31:09.010+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T11:31:39.215+0000] {processor.py:157} INFO - Started process (PID=943) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:31:39.217+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:31:39.218+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:31:39.217+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:31:39.243+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:31:39.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:31:39.299+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:31:39.350+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:31:39.349+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:31:39.378+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T11:32:09.416+0000] {processor.py:157} INFO - Started process (PID=951) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:32:09.417+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:32:09.423+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:32:09.421+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:32:09.448+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:32:09.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:32:09.492+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:32:09.538+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:32:09.538+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:32:09.568+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T11:32:39.834+0000] {processor.py:157} INFO - Started process (PID=959) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:32:39.836+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:32:39.838+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:32:39.836+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:32:39.865+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:32:39.907+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:32:39.906+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:32:39.963+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:32:39.962+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:32:40.004+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.176 seconds
[2023-09-24T11:33:10.100+0000] {processor.py:157} INFO - Started process (PID=967) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:33:10.101+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:33:10.103+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:33:10.102+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:33:10.129+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:33:10.176+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:33:10.176+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:33:10.222+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:33:10.222+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:33:10.249+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T11:33:40.409+0000] {processor.py:157} INFO - Started process (PID=975) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:33:40.411+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:33:40.413+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:33:40.412+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:33:40.437+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:33:40.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:33:40.480+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:33:40.535+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:33:40.535+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:33:40.563+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.160 seconds
[2023-09-24T11:34:10.787+0000] {processor.py:157} INFO - Started process (PID=983) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:34:10.788+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:34:10.790+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:34:10.789+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:34:10.817+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:34:10.861+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:34:10.860+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:34:10.907+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:34:10.907+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:34:10.934+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T11:34:41.087+0000] {processor.py:157} INFO - Started process (PID=991) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:34:41.088+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:34:41.090+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:34:41.089+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:34:41.116+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:34:41.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:34:41.156+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:34:41.203+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:34:41.202+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:34:41.229+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T11:35:11.533+0000] {processor.py:157} INFO - Started process (PID=999) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:35:11.534+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:35:11.536+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:35:11.535+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:35:11.561+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:35:11.606+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:35:11.606+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:35:11.653+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:35:11.653+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:35:11.682+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T11:35:41.825+0000] {processor.py:157} INFO - Started process (PID=1007) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:35:41.827+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:35:41.829+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:35:41.828+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:35:41.856+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:35:41.899+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:35:41.899+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:35:41.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:35:41.942+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:35:41.973+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T11:36:12.258+0000] {processor.py:157} INFO - Started process (PID=1015) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:36:12.259+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:36:12.261+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:36:12.260+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:36:12.286+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:36:12.326+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:36:12.326+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:36:12.373+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:36:12.373+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:36:12.405+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T11:36:42.612+0000] {processor.py:157} INFO - Started process (PID=1023) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:36:42.613+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:36:42.615+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:36:42.614+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:36:42.639+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:36:42.681+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:36:42.680+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:36:42.733+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:36:42.733+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:36:42.760+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T11:37:12.928+0000] {processor.py:157} INFO - Started process (PID=1031) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:37:12.930+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:37:12.933+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:37:12.931+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:37:12.980+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:37:13.079+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:37:13.078+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:37:13.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:37:13.160+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:37:13.231+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.309 seconds
[2023-09-24T11:37:43.450+0000] {processor.py:157} INFO - Started process (PID=1039) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:37:43.451+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:37:43.454+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:37:43.452+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:37:43.485+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:37:43.545+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:37:43.545+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:37:43.605+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:37:43.604+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:37:43.646+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.203 seconds
[2023-09-24T11:38:13.848+0000] {processor.py:157} INFO - Started process (PID=1047) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:38:13.849+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:38:13.851+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:38:13.850+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:38:13.879+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:38:13.925+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:38:13.924+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:38:13.982+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:38:13.982+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:38:14.011+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.169 seconds
[2023-09-24T11:38:44.053+0000] {processor.py:157} INFO - Started process (PID=1055) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:38:44.054+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:38:44.056+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:38:44.055+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:38:44.082+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:38:44.129+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:38:44.128+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:38:44.176+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:38:44.175+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:38:44.206+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T11:39:14.294+0000] {processor.py:157} INFO - Started process (PID=1063) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:39:14.296+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:39:14.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:39:14.297+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:39:14.325+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:39:14.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:39:14.369+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:39:14.418+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:39:14.417+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:39:14.446+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T11:39:44.735+0000] {processor.py:157} INFO - Started process (PID=1071) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:39:44.736+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:39:44.738+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:39:44.737+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:39:44.764+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:39:44.807+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:39:44.807+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:39:44.851+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:39:44.850+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:39:44.884+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T11:40:14.920+0000] {processor.py:157} INFO - Started process (PID=1079) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:40:14.921+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:40:14.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:40:14.922+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:40:14.948+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:40:14.992+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:40:14.992+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:40:15.047+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:40:15.047+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:40:15.081+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T11:40:45.286+0000] {processor.py:157} INFO - Started process (PID=1087) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:40:45.287+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:40:45.289+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:40:45.288+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:40:45.316+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:40:45.360+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:40:45.360+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:40:45.410+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:40:45.409+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:40:45.441+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.161 seconds
[2023-09-24T11:41:15.512+0000] {processor.py:157} INFO - Started process (PID=1095) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:41:15.513+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:41:15.521+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:41:15.520+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:41:15.545+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:41:15.592+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:41:15.591+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:41:15.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:41:15.638+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:41:15.673+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T11:41:45.815+0000] {processor.py:157} INFO - Started process (PID=1103) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:41:45.817+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:41:45.819+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:41:45.818+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:41:45.844+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:41:45.887+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:41:45.886+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:41:45.940+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:41:45.940+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:41:45.972+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T11:42:16.235+0000] {processor.py:157} INFO - Started process (PID=1111) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:42:16.236+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:42:16.238+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:42:16.237+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:42:16.264+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:42:16.307+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:42:16.307+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:42:16.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:42:16.356+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:42:16.386+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T11:42:46.514+0000] {processor.py:157} INFO - Started process (PID=1119) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:42:46.515+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:42:46.517+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:42:46.516+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:42:46.544+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:42:46.598+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:42:46.597+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:42:46.643+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:42:46.642+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:42:46.675+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T11:43:16.881+0000] {processor.py:157} INFO - Started process (PID=1127) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:43:16.882+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:43:16.884+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:43:16.883+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:43:16.910+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:43:16.955+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:43:16.954+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:43:16.998+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:43:16.997+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:43:17.027+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T11:43:47.182+0000] {processor.py:157} INFO - Started process (PID=1135) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:43:47.183+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:43:47.185+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:43:47.184+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:43:47.210+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:43:47.393+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:43:47.393+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T11:43:47.398+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:43:47.398+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:43:47.438+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:43:47.438+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:43:47.470+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.293 seconds
[2023-09-24T11:44:17.586+0000] {processor.py:157} INFO - Started process (PID=1143) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:44:17.588+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:44:17.589+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:44:17.588+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:44:17.615+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:44:17.687+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:44:17.686+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:44:17.733+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:44:17.733+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:44:17.763+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T11:45:09.132+0000] {processor.py:157} INFO - Started process (PID=37) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:45:09.142+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:45:09.145+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:45:09.144+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:45:09.217+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:45:09.791+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:45:09.790+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T11:45:09.799+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:45:09.798+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:45:09.873+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:45:09.873+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:45:09.939+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.814 seconds
[2023-09-24T11:45:40.198+0000] {processor.py:157} INFO - Started process (PID=45) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:45:40.198+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:45:40.200+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:45:40.199+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:45:40.221+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:45:40.264+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:45:40.263+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:45:40.308+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:45:40.308+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:45:40.337+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T11:46:10.529+0000] {processor.py:157} INFO - Started process (PID=53) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:46:10.530+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:46:10.531+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:46:10.530+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:46:10.553+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:46:10.599+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:46:10.598+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:46:10.649+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:46:10.648+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:46:10.675+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T11:46:40.935+0000] {processor.py:157} INFO - Started process (PID=61) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:46:40.936+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:46:40.938+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:46:40.937+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:46:40.963+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:46:41.008+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:46:41.007+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:46:41.052+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:46:41.051+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:46:41.087+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T11:48:01.668+0000] {processor.py:157} INFO - Started process (PID=69) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:48:01.670+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:48:01.674+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:48:01.672+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:48:01.716+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:48:01.758+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:48:01.757+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:48:32.131+0000] {processor.py:157} INFO - Started process (PID=91) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:48:32.131+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:48:32.133+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:48:32.132+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:48:32.161+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:48:32.364+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:48:32.364+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T11:48:32.369+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:48:32.368+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:48:32.412+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:48:32.412+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:48:32.443+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.317 seconds
[2023-09-24T11:49:02.951+0000] {processor.py:157} INFO - Started process (PID=99) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:49:02.952+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:49:02.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:49:02.952+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:49:02.976+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:49:03.020+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:49:03.019+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:49:03.066+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:49:03.065+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:49:03.097+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T11:49:33.211+0000] {processor.py:157} INFO - Started process (PID=107) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:49:33.212+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:49:33.214+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:49:33.213+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:49:33.247+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:49:33.308+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:49:33.307+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:49:33.371+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:49:33.370+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:49:33.414+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.207 seconds
[2023-09-24T11:50:03.595+0000] {processor.py:157} INFO - Started process (PID=115) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:50:03.596+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:50:03.597+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:50:03.597+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:50:03.623+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:50:03.668+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:50:03.667+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:50:03.714+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:50:03.714+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:50:03.741+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T11:50:34.048+0000] {processor.py:157} INFO - Started process (PID=123) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:50:34.049+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:50:34.050+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:50:34.049+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:50:34.074+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:50:34.116+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:50:34.116+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:50:34.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:50:34.160+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:50:34.202+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T11:51:04.244+0000] {processor.py:157} INFO - Started process (PID=131) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:51:04.245+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T11:51:04.246+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:51:04.245+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:51:04.269+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T11:51:04.455+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:51:04.454+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T11:51:04.460+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:51:04.459+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T11:51:04.504+0000] {logging_mixin.py:151} INFO - [2023-09-24T11:51:04.503+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T11:51:04.553+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.313 seconds
[2023-09-24T12:13:21.664+0000] {processor.py:157} INFO - Started process (PID=63) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:13:21.665+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:13:21.668+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:13:21.666+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:13:22.514+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:13:22.900+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:13:22.899+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T12:13:22.908+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:13:22.908+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:13:22.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:13:22.982+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:13:23.069+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.412 seconds
[2023-09-24T12:15:28.570+0000] {processor.py:157} INFO - Started process (PID=51) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:15:28.571+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:15:28.572+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:15:28.571+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:15:28.726+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:15:28.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:15:28.913+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T12:15:28.919+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:15:28.918+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:15:28.960+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:15:28.960+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:15:28.992+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.426 seconds
[2023-09-24T12:15:59.242+0000] {processor.py:157} INFO - Started process (PID=59) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:15:59.243+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:15:59.244+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:15:59.243+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:15:59.268+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:15:59.312+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:15:59.312+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:15:59.362+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:15:59.361+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:15:59.391+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T12:16:29.438+0000] {processor.py:157} INFO - Started process (PID=67) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:16:29.439+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:16:29.440+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:16:29.439+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:16:29.463+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:16:29.518+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:16:29.518+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:16:29.567+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:16:29.567+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:16:29.598+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T12:16:59.692+0000] {processor.py:157} INFO - Started process (PID=75) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:16:59.693+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:16:59.694+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:16:59.693+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:16:59.729+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:16:59.776+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:16:59.776+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:16:59.825+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:16:59.825+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:16:59.857+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.182 seconds
[2023-09-24T12:17:56.463+0000] {processor.py:157} INFO - Started process (PID=36) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:17:56.467+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:17:56.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:17:56.469+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:17:56.854+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:17:57.170+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:17:57.170+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T12:17:57.178+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:17:57.177+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:17:57.246+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:17:57.246+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:17:57.294+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.840 seconds
[2023-09-24T12:18:27.572+0000] {processor.py:157} INFO - Started process (PID=49) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:18:27.573+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:18:27.574+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:18:27.573+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:18:27.596+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:18:27.642+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:18:27.642+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:18:27.700+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:18:27.699+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:18:27.729+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.161 seconds
[2023-09-24T12:18:57.816+0000] {processor.py:157} INFO - Started process (PID=57) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:18:57.816+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:18:57.818+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:18:57.817+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:18:57.840+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:18:57.885+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:18:57.884+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:18:57.930+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:18:57.930+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:18:57.966+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T12:20:33.864+0000] {processor.py:157} INFO - Started process (PID=30) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:20:33.866+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:20:33.868+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:20:33.866+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:20:34.087+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:20:34.337+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:20:34.337+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T12:20:34.343+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:20:34.342+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:20:34.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:20:34.392+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:20:34.427+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.567 seconds
[2023-09-24T12:21:04.785+0000] {processor.py:157} INFO - Started process (PID=38) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:21:04.786+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:21:04.787+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:21:04.787+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:21:04.807+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:21:04.869+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:21:04.868+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:21:04.922+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:21:04.922+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:21:04.967+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.187 seconds
[2023-09-24T12:21:35.099+0000] {processor.py:157} INFO - Started process (PID=46) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:21:35.099+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:21:35.101+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:21:35.100+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:21:35.119+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:21:35.162+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:21:35.161+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:21:35.207+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:21:35.206+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:21:35.235+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T12:22:05.471+0000] {processor.py:157} INFO - Started process (PID=55) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:22:05.472+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:22:05.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:22:05.473+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:22:05.495+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:22:05.539+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:22:05.538+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:22:05.590+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:22:05.589+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:22:05.624+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.160 seconds
[2023-09-24T12:23:05.717+0000] {processor.py:157} INFO - Started process (PID=70) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:23:05.718+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:23:05.720+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:23:05.719+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:23:05.740+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:23:05.779+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:23:05.778+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:23:05.822+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:23:05.822+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:23:05.851+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T12:23:35.932+0000] {processor.py:157} INFO - Started process (PID=79) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:23:35.932+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:23:35.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:23:35.933+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:23:35.956+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:23:35.996+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:23:35.996+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:23:36.044+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:23:36.043+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:23:36.073+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T12:24:06.139+0000] {processor.py:157} INFO - Started process (PID=87) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:24:06.140+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:24:06.141+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:24:06.140+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:24:06.162+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:24:06.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:24:06.204+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:24:06.251+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:24:06.250+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:24:06.280+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T12:24:36.354+0000] {processor.py:157} INFO - Started process (PID=95) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:24:36.355+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:24:36.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:24:36.355+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:24:36.376+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:24:36.416+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:24:36.415+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:24:36.461+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:24:36.460+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:24:36.490+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.140 seconds
[2023-09-24T12:25:06.748+0000] {processor.py:157} INFO - Started process (PID=103) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:25:06.749+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:25:06.751+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:25:06.750+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:25:06.771+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:25:06.819+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:25:06.818+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:25:06.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:25:06.864+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:25:06.893+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T12:25:37.078+0000] {processor.py:157} INFO - Started process (PID=111) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:25:37.078+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:25:37.080+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:25:37.079+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:25:37.100+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:25:37.148+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:25:37.148+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:25:37.196+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:25:37.195+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:25:37.224+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T12:26:07.464+0000] {processor.py:157} INFO - Started process (PID=119) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:26:07.465+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:26:07.467+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:26:07.466+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:26:07.487+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:26:07.528+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:26:07.528+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:26:07.578+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:26:07.577+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:26:07.608+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T12:27:07.707+0000] {processor.py:157} INFO - Started process (PID=134) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:27:07.708+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:27:07.709+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:27:07.709+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:27:07.730+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:27:07.770+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:27:07.769+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:27:07.814+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:27:07.814+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:27:07.842+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T12:27:38.073+0000] {processor.py:157} INFO - Started process (PID=142) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:27:38.074+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:27:38.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:27:38.074+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:27:38.095+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:27:38.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:27:38.137+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:27:38.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:27:38.181+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:27:38.209+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.140 seconds
[2023-09-24T12:28:38.863+0000] {processor.py:157} INFO - Started process (PID=150) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:28:38.864+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:28:38.865+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:28:38.864+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:28:59.113+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:28:59.152+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:28:59.152+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:28:59.203+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:28:59.202+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:29:29.573+0000] {processor.py:157} INFO - Started process (PID=172) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:29:29.574+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:29:29.575+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:29:29.574+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:29:29.594+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:29:29.633+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:29:29.632+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:29:29.676+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:29:29.676+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:29:29.706+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.137 seconds
[2023-09-24T12:29:59.883+0000] {processor.py:157} INFO - Started process (PID=180) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:29:59.884+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:29:59.886+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:29:59.885+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:29:59.905+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:29:59.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:29:59.947+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:29:59.994+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:29:59.994+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:30:00.025+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T12:30:30.265+0000] {processor.py:157} INFO - Started process (PID=188) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:30:30.265+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:30:30.267+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:30:30.266+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:30:30.288+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:30:30.328+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:30:30.327+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:30:30.371+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:30:30.370+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:30:30.399+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.138 seconds
[2023-09-24T12:31:00.610+0000] {processor.py:157} INFO - Started process (PID=196) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:31:00.611+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:31:00.613+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:31:00.612+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:31:00.635+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:31:00.678+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:31:00.677+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:31:00.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:31:00.724+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:31:00.756+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T12:31:30.978+0000] {processor.py:157} INFO - Started process (PID=204) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:31:30.979+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:31:30.981+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:31:30.980+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:31:31.007+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:31:31.048+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:31:31.047+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:31:31.093+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:31:31.092+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:31:31.122+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T12:32:01.306+0000] {processor.py:157} INFO - Started process (PID=212) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:32:01.307+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:32:01.308+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:32:01.307+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:32:01.335+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:32:01.382+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:32:01.382+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:32:01.429+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:32:01.428+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:32:01.459+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T12:32:31.624+0000] {processor.py:157} INFO - Started process (PID=220) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:32:31.625+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:32:31.627+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:32:31.626+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:32:31.647+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:32:31.691+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:32:31.690+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:32:31.737+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:32:31.736+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:32:31.765+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T12:33:02.026+0000] {processor.py:157} INFO - Started process (PID=228) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:33:02.027+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:33:02.029+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:33:02.028+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:33:02.048+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:33:02.088+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:33:02.087+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:33:02.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:33:02.132+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:33:02.159+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.137 seconds
[2023-09-24T12:33:32.468+0000] {processor.py:157} INFO - Started process (PID=236) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:33:32.469+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:33:32.470+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:33:32.469+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:33:32.495+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:33:32.535+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:33:32.535+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:33:32.579+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:33:32.578+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:33:32.610+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T12:34:02.790+0000] {processor.py:157} INFO - Started process (PID=244) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:34:02.791+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:34:02.792+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:34:02.791+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:34:02.813+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:34:02.854+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:34:02.854+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:34:02.901+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:34:02.901+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:34:02.929+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T12:34:33.118+0000] {processor.py:157} INFO - Started process (PID=253) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:34:33.118+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:34:33.120+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:34:33.119+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:34:33.140+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:34:33.181+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:34:33.180+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:34:33.225+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:34:33.224+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:34:33.252+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.140 seconds
[2023-09-24T12:35:03.361+0000] {processor.py:157} INFO - Started process (PID=261) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:35:03.362+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:35:03.364+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:35:03.363+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:35:03.383+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:35:03.426+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:35:03.425+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:35:03.471+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:35:03.470+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:35:03.499+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T12:35:33.592+0000] {processor.py:157} INFO - Started process (PID=269) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:35:33.592+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:35:33.594+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:35:33.593+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:35:33.613+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:35:33.653+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:35:33.652+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:35:33.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:35:33.696+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:35:33.726+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T12:36:03.947+0000] {processor.py:157} INFO - Started process (PID=277) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:36:03.948+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:36:03.949+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:36:03.948+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:36:03.970+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:36:04.014+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:36:04.013+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:36:04.061+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:36:04.060+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:36:04.089+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T12:36:34.447+0000] {processor.py:157} INFO - Started process (PID=285) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:36:34.448+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:36:34.451+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:36:34.450+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:36:34.480+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:36:34.520+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:36:34.519+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:36:34.567+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:36:34.566+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:36:34.598+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T12:37:04.804+0000] {processor.py:157} INFO - Started process (PID=293) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:37:04.804+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:37:04.806+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:37:04.805+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:37:04.827+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:37:04.871+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:37:04.871+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:37:04.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:37:04.914+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:37:04.942+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T12:37:35.221+0000] {processor.py:157} INFO - Started process (PID=301) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:37:35.222+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:37:35.223+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:37:35.222+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:37:35.242+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:37:35.281+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:37:35.281+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:37:35.325+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:37:35.324+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:37:35.352+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.135 seconds
[2023-09-24T12:38:05.511+0000] {processor.py:157} INFO - Started process (PID=309) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:38:05.512+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:38:05.514+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:38:05.513+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:38:05.535+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:38:05.578+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:38:05.577+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:38:05.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:38:05.622+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:38:05.651+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T12:38:35.804+0000] {processor.py:157} INFO - Started process (PID=317) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:38:35.805+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:38:35.806+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:38:35.805+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:38:35.826+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:38:35.872+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:38:35.872+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:38:35.918+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:38:35.917+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:38:35.950+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T12:39:06.058+0000] {processor.py:157} INFO - Started process (PID=325) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:39:06.059+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:39:06.060+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:39:06.059+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:39:06.081+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:39:06.124+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:39:06.124+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:39:06.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:39:06.167+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:39:06.195+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T12:39:36.402+0000] {processor.py:157} INFO - Started process (PID=333) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:39:36.403+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:39:36.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:39:36.404+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:39:36.425+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:39:36.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:39:36.465+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:39:36.508+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:39:36.508+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:39:36.539+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T12:40:06.750+0000] {processor.py:157} INFO - Started process (PID=341) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:40:06.751+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:40:06.753+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:40:06.752+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:40:06.792+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:40:06.835+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:40:06.835+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:40:06.878+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:40:06.877+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:40:06.908+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T12:40:37.089+0000] {processor.py:157} INFO - Started process (PID=349) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:40:37.090+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:40:37.092+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:40:37.091+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:40:37.113+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:40:37.156+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:40:37.156+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:40:37.202+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:40:37.202+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:40:37.232+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T12:41:07.397+0000] {processor.py:157} INFO - Started process (PID=357) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:41:07.400+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:41:07.402+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:41:07.400+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:41:07.423+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:41:07.464+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:41:07.464+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:41:07.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:41:07.512+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:41:07.543+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T12:41:37.731+0000] {processor.py:157} INFO - Started process (PID=365) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:41:37.732+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:41:37.734+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:41:37.733+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:41:37.755+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:41:37.796+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:41:37.796+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:41:37.844+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:41:37.843+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:41:37.874+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T12:42:08.130+0000] {processor.py:157} INFO - Started process (PID=373) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:42:08.130+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:42:08.132+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:42:08.131+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:42:08.151+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:42:08.190+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:42:08.190+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:42:08.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:42:08.237+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:42:08.265+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T12:42:38.483+0000] {processor.py:157} INFO - Started process (PID=381) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:42:38.483+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:42:38.485+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:42:38.484+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:42:38.505+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:42:38.549+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:42:38.548+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:42:38.596+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:42:38.595+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:42:38.625+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T12:43:08.902+0000] {processor.py:157} INFO - Started process (PID=389) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:43:08.903+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:43:08.904+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:43:08.904+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:43:08.924+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:43:08.964+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:43:08.963+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:43:09.009+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:43:09.008+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:43:09.037+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T12:43:39.325+0000] {processor.py:157} INFO - Started process (PID=397) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:43:39.325+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:43:39.327+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:43:39.326+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:43:39.346+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:43:39.387+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:43:39.386+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:43:39.433+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:43:39.432+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:43:39.461+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T12:44:09.622+0000] {processor.py:157} INFO - Started process (PID=405) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:44:09.623+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:44:09.625+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:44:09.624+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:44:09.645+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:44:09.687+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:44:09.687+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:44:09.732+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:44:09.731+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:44:09.760+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T12:44:39.961+0000] {processor.py:157} INFO - Started process (PID=413) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:44:39.962+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:44:39.963+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:44:39.963+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:44:39.983+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:44:40.045+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:44:40.044+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:44:40.089+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:44:40.088+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:44:40.121+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T12:45:10.305+0000] {processor.py:157} INFO - Started process (PID=421) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:45:10.306+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:45:10.308+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:45:10.307+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:45:10.327+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:45:10.368+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:45:10.367+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:45:10.412+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:45:10.411+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:45:10.439+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T12:45:40.694+0000] {processor.py:157} INFO - Started process (PID=429) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:45:40.694+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:45:40.696+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:45:40.695+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:45:40.717+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:45:40.757+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:45:40.757+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:45:40.802+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:45:40.801+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:45:40.830+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.140 seconds
[2023-09-24T12:46:11.151+0000] {processor.py:157} INFO - Started process (PID=437) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:46:11.152+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:46:11.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:46:11.153+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:46:11.174+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:46:11.213+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:46:11.212+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:46:11.255+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:46:11.255+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:46:11.285+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.138 seconds
[2023-09-24T12:46:41.561+0000] {processor.py:157} INFO - Started process (PID=445) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:46:41.562+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:46:41.563+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:46:41.562+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:46:41.584+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:46:41.625+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:46:41.624+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:46:41.671+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:46:41.670+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:46:41.697+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T12:47:11.919+0000] {processor.py:157} INFO - Started process (PID=452) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:47:11.920+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:47:11.921+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:47:11.920+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:47:11.941+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:47:11.983+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:47:11.982+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:47:12.027+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:47:12.027+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:47:12.055+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T12:47:42.193+0000] {processor.py:157} INFO - Started process (PID=460) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:47:42.194+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:47:42.195+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:47:42.195+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:47:42.215+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:47:42.256+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:47:42.255+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:47:42.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:47:42.299+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:47:42.327+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.138 seconds
[2023-09-24T12:48:12.379+0000] {processor.py:157} INFO - Started process (PID=468) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:48:12.380+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:48:12.381+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:48:12.380+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:48:12.402+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:48:12.444+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:48:12.443+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:48:12.487+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:48:12.487+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:48:12.515+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T12:48:42.635+0000] {processor.py:157} INFO - Started process (PID=476) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:48:42.635+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:48:42.637+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:48:42.636+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:48:42.657+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:48:42.700+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:48:42.699+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:48:42.749+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:48:42.749+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:48:42.778+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T12:49:13.095+0000] {processor.py:157} INFO - Started process (PID=484) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:49:13.096+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:49:13.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:49:13.096+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:49:13.117+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:49:13.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:49:13.156+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:49:13.201+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:49:13.201+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:49:13.230+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.140 seconds
[2023-09-24T12:49:43.462+0000] {processor.py:157} INFO - Started process (PID=492) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:49:43.463+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:49:43.465+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:49:43.464+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:49:43.484+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:49:43.534+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:49:43.534+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:49:43.583+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:49:43.582+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:49:43.611+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T12:50:13.841+0000] {processor.py:157} INFO - Started process (PID=500) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:50:13.842+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:50:13.843+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:50:13.842+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:50:13.864+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:50:13.904+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:50:13.903+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:50:13.949+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:50:13.948+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:50:13.977+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T12:50:44.216+0000] {processor.py:157} INFO - Started process (PID=508) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:50:44.219+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:50:44.222+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:50:44.220+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:50:44.265+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:50:44.353+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:50:44.353+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:50:44.423+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:50:44.422+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:50:44.476+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.266 seconds
[2023-09-24T12:51:14.557+0000] {processor.py:157} INFO - Started process (PID=516) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:51:14.557+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:51:14.559+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:51:14.558+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:51:14.583+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:51:14.706+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:51:14.706+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:51:14.756+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:51:14.755+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:51:14.788+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.235 seconds
[2023-09-24T12:51:44.868+0000] {processor.py:157} INFO - Started process (PID=524) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:51:44.869+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:51:44.870+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:51:44.869+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:51:44.892+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:51:44.936+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:51:44.936+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:51:44.987+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:51:44.986+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:51:45.019+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T12:52:15.335+0000] {processor.py:157} INFO - Started process (PID=532) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:52:15.336+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:52:15.337+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:52:15.336+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:52:15.357+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:52:15.398+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:52:15.397+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:52:15.443+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:52:15.443+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:52:15.472+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T12:52:45.634+0000] {processor.py:157} INFO - Started process (PID=540) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:52:45.635+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:52:45.637+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:52:45.636+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:52:45.658+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:52:45.700+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:52:45.700+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:52:45.750+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:52:45.749+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:52:45.779+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T12:53:16.097+0000] {processor.py:157} INFO - Started process (PID=548) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:53:16.098+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:53:16.100+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:53:16.099+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:53:16.128+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:53:16.169+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:53:16.169+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:53:16.216+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:53:16.216+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:53:16.255+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T12:53:46.367+0000] {processor.py:157} INFO - Started process (PID=556) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:53:46.368+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T12:53:46.369+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:53:46.369+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:53:46.389+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T12:53:46.429+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:53:46.428+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T12:53:46.476+0000] {logging_mixin.py:151} INFO - [2023-09-24T12:53:46.475+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T12:53:46.504+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T13:41:55.136+0000] {processor.py:157} INFO - Started process (PID=36) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:41:55.201+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:41:55.204+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:41:55.203+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:41:55.647+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:41:56.209+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:41:56.209+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T13:41:56.220+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:41:56.220+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:41:56.335+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:41:56.331+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:41:56.409+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.280 seconds
[2023-09-24T13:42:26.688+0000] {processor.py:157} INFO - Started process (PID=44) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:42:26.689+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:42:26.690+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:42:26.690+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:42:26.709+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:42:26.749+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:42:26.748+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:42:26.798+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:42:26.798+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:42:26.827+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T13:42:56.964+0000] {processor.py:157} INFO - Started process (PID=52) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:42:56.964+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:42:56.966+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:42:56.965+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:42:56.987+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:42:57.038+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:42:57.037+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:42:57.083+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:42:57.082+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:42:57.111+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T13:43:27.347+0000] {processor.py:157} INFO - Started process (PID=60) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:43:27.347+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:43:27.349+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:43:27.348+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:43:27.368+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:43:27.408+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:43:27.407+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:43:27.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:43:27.452+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:43:27.480+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T13:43:57.665+0000] {processor.py:157} INFO - Started process (PID=68) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:43:57.665+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:43:57.667+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:43:57.666+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:43:57.687+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:43:57.730+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:43:57.729+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:43:57.777+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:43:57.776+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:43:57.808+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T13:44:28.008+0000] {processor.py:157} INFO - Started process (PID=76) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:44:28.009+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:44:28.011+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:44:28.010+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:44:28.031+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:44:28.072+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:44:28.072+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:44:28.121+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:44:28.120+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:44:28.161+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T13:44:58.390+0000] {processor.py:157} INFO - Started process (PID=84) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:44:58.390+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:44:58.392+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:44:58.391+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:44:58.411+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:44:58.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:44:58.452+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:44:58.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:44:58.496+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:44:58.525+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T13:45:56.995+0000] {processor.py:157} INFO - Started process (PID=30) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:45:57.005+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:45:57.007+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:45:57.006+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:45:57.671+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:45:58.040+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:45:58.039+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T13:45:58.047+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:45:58.046+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:45:58.115+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:45:58.115+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:45:58.161+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.185 seconds
[2023-09-24T13:46:28.214+0000] {processor.py:157} INFO - Started process (PID=45) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:46:28.215+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:46:28.217+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:46:28.216+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:46:28.235+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:46:28.275+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:46:28.274+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:46:28.324+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:46:28.323+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:46:28.354+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T13:46:58.601+0000] {processor.py:157} INFO - Started process (PID=53) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:46:58.602+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:46:58.604+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:46:58.603+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:46:58.656+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:46:58.712+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:46:58.711+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:46:58.762+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:46:58.761+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:46:58.792+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.195 seconds
[2023-09-24T13:48:12.341+0000] {processor.py:157} INFO - Started process (PID=37) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:48:12.343+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:48:12.345+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:48:12.343+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:48:12.688+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:48:12.990+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:48:12.989+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T13:48:12.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:48:12.996+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:48:13.065+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:48:13.064+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:48:13.114+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.780 seconds
[2023-09-24T13:48:43.379+0000] {processor.py:157} INFO - Started process (PID=45) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:48:43.380+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:48:43.384+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:48:43.382+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:48:43.433+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:48:43.841+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:48:43.840+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T13:48:43.866+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:48:43.865+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:48:43.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:48:43.952+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:48:44.019+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.648 seconds
[2023-09-24T13:49:33.445+0000] {processor.py:157} INFO - Started process (PID=36) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:49:33.447+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:49:33.449+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:49:33.448+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:49:33.774+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:49:34.076+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:49:34.075+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T13:49:34.084+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:49:34.083+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:49:34.154+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:49:34.153+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:49:34.202+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.761 seconds
[2023-09-24T13:50:04.414+0000] {processor.py:157} INFO - Started process (PID=44) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:50:04.415+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:50:04.417+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:50:04.416+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:50:04.438+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:50:04.481+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:50:04.481+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:50:04.533+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:50:04.533+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:50:04.567+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T13:51:04.856+0000] {processor.py:157} INFO - Started process (PID=52) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:51:04.857+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:51:04.859+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:51:04.858+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:51:25.025+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:51:25.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:51:25.068+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:51:25.138+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:51:25.137+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:51:55.472+0000] {processor.py:157} INFO - Started process (PID=73) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:51:55.473+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:51:55.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:51:55.473+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:51:55.492+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:51:55.664+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:51:55.664+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T13:51:55.669+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:51:55.668+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:51:55.710+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:51:55.710+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:51:55.738+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.269 seconds
[2023-09-24T13:52:25.804+0000] {processor.py:157} INFO - Started process (PID=81) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:52:25.805+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:52:25.807+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:52:25.806+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:52:25.832+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:52:25.875+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:52:25.875+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:52:25.925+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:52:25.924+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:52:25.957+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T13:52:56.113+0000] {processor.py:157} INFO - Started process (PID=89) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:52:56.114+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:52:56.115+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:52:56.115+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:52:56.136+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:52:56.176+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:52:56.176+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:52:56.220+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:52:56.220+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:52:56.250+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T13:53:26.367+0000] {processor.py:157} INFO - Started process (PID=97) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:53:26.368+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:53:26.370+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:53:26.369+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:53:26.390+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:53:26.433+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:53:26.433+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:53:26.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:53:26.480+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:53:26.509+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T13:53:56.770+0000] {processor.py:157} INFO - Started process (PID=105) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:53:56.771+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:53:56.772+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:53:56.771+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:53:56.792+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:53:56.832+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:53:56.832+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:53:56.877+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:53:56.876+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:53:56.907+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T13:54:26.991+0000] {processor.py:157} INFO - Started process (PID=114) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:54:26.992+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:54:26.995+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:54:26.993+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:54:27.020+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:54:27.073+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:54:27.072+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:54:27.122+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:54:27.122+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:54:27.154+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T13:54:57.362+0000] {processor.py:157} INFO - Started process (PID=122) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:54:57.363+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:54:57.364+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:54:57.363+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:54:57.385+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:54:57.429+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:54:57.428+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:54:57.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:54:57.476+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:54:57.505+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T13:55:27.641+0000] {processor.py:157} INFO - Started process (PID=130) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:55:27.643+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:55:27.645+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:55:27.644+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:55:27.669+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:55:27.718+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:55:27.718+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:55:27.775+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:55:27.775+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:55:27.808+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.172 seconds
[2023-09-24T13:55:58.255+0000] {processor.py:157} INFO - Started process (PID=138) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:55:58.256+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:55:58.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:55:58.257+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:55:58.278+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:55:58.318+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:55:58.318+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:55:58.362+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:55:58.362+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:55:58.393+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T13:56:28.529+0000] {processor.py:157} INFO - Started process (PID=146) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:56:28.530+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:56:28.532+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:56:28.531+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:56:28.555+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:56:28.610+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:56:28.609+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:56:28.658+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:56:28.657+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:56:28.688+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T13:56:58.886+0000] {processor.py:157} INFO - Started process (PID=154) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:56:58.887+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:56:58.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:56:58.888+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:56:58.908+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:56:58.950+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:56:58.949+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:56:58.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:56:58.996+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:56:59.026+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T13:57:29.166+0000] {processor.py:157} INFO - Started process (PID=162) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:57:29.167+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:57:29.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:57:29.167+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:57:29.187+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:57:29.227+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:57:29.226+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:57:29.292+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:57:29.291+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:57:29.327+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T13:57:59.630+0000] {processor.py:157} INFO - Started process (PID=170) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:57:59.630+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:57:59.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:57:59.631+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:57:59.655+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:57:59.698+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:57:59.697+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:57:59.747+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:57:59.747+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:57:59.779+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T13:59:03.421+0000] {processor.py:157} INFO - Started process (PID=37) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:59:03.425+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T13:59:03.427+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:59:03.426+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:59:03.869+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T13:59:04.301+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:59:04.300+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T13:59:04.309+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:59:04.308+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T13:59:04.389+0000] {logging_mixin.py:151} INFO - [2023-09-24T13:59:04.389+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T13:59:04.454+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 1.055 seconds
[2023-09-24T14:01:09.203+0000] {processor.py:157} INFO - Started process (PID=43) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:01:09.204+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:01:09.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:01:09.205+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:01:09.367+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:01:09.554+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:01:09.554+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T14:01:09.559+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:01:09.558+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:01:09.607+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:01:09.606+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:01:09.635+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.437 seconds
[2023-09-24T14:01:39.847+0000] {processor.py:157} INFO - Started process (PID=58) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:01:39.848+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:01:39.850+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:01:39.849+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:01:39.871+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:01:40.086+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:01:40.085+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T14:01:40.091+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:01:40.091+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:01:40.142+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:01:40.141+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:01:40.176+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.334 seconds
[2023-09-24T14:02:28.417+0000] {processor.py:157} INFO - Started process (PID=36) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:02:28.419+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:02:28.422+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:02:28.420+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:02:28.737+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:02:29.126+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:02:29.125+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T14:02:29.134+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:02:29.133+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:02:29.206+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:02:29.205+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:02:29.257+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.855 seconds
[2023-09-24T14:02:59.513+0000] {processor.py:157} INFO - Started process (PID=44) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:02:59.514+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:02:59.516+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:02:59.515+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:02:59.536+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:02:59.576+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:02:59.575+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:02:59.624+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:02:59.623+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:02:59.655+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T14:03:29.785+0000] {processor.py:157} INFO - Started process (PID=52) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:03:29.786+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:03:29.787+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:03:29.786+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:03:29.806+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:03:29.848+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:03:29.848+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:03:29.897+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:03:29.897+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:03:29.926+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T14:03:59.978+0000] {processor.py:157} INFO - Started process (PID=60) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:03:59.979+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:03:59.980+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:03:59.979+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:04:00.000+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:04:00.040+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:04:00.040+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:04:00.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:04:00.084+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:04:00.111+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.137 seconds
[2023-09-24T14:04:30.203+0000] {processor.py:157} INFO - Started process (PID=67) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:04:30.204+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:04:30.205+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:04:30.204+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:04:30.223+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:04:30.262+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:04:30.261+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:04:30.304+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:04:30.304+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:04:30.335+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.136 seconds
[2023-09-24T14:05:00.427+0000] {processor.py:157} INFO - Started process (PID=75) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:05:00.428+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:05:00.430+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:05:00.429+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:05:00.449+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:05:00.488+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:05:00.488+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:05:00.533+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:05:00.532+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:05:00.561+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.138 seconds
[2023-09-24T14:05:30.633+0000] {processor.py:157} INFO - Started process (PID=83) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:05:30.634+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:05:30.635+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:05:30.634+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:05:30.654+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:05:30.692+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:05:30.691+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:05:30.736+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:05:30.735+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:05:30.763+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.135 seconds
[2023-09-24T14:06:00.884+0000] {processor.py:157} INFO - Started process (PID=91) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:06:00.885+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:06:00.887+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:06:00.886+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:06:00.906+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:06:00.946+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:06:00.945+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:06:00.989+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:06:00.989+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:06:01.016+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.136 seconds
[2023-09-24T14:06:31.141+0000] {processor.py:157} INFO - Started process (PID=99) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:06:31.141+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:06:31.143+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:06:31.142+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:06:31.162+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:06:31.202+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:06:31.201+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:06:31.245+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:06:31.244+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:06:31.272+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.136 seconds
[2023-09-24T14:07:01.415+0000] {processor.py:157} INFO - Started process (PID=107) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:07:01.416+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:07:01.417+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:07:01.416+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:07:01.437+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:07:01.476+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:07:01.475+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:07:01.519+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:07:01.519+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:07:01.547+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.135 seconds
[2023-09-24T14:08:01.659+0000] {processor.py:157} INFO - Started process (PID=122) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:08:01.660+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:08:01.662+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:08:01.661+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:08:01.681+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:08:01.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:08:01.723+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:08:01.775+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:08:01.774+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:08:01.812+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T14:08:31.909+0000] {processor.py:157} INFO - Started process (PID=130) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:08:31.909+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:08:31.911+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:08:31.910+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:08:31.938+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:08:31.999+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:08:31.998+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:08:32.049+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:08:32.049+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:08:32.079+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.175 seconds
[2023-09-24T14:09:52.630+0000] {processor.py:157} INFO - Started process (PID=138) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:09:52.630+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:09:52.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:09:52.631+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:09:52.656+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:09:52.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:09:52.697+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:10:22.983+0000] {processor.py:157} INFO - Started process (PID=159) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:10:22.984+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:10:22.986+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:10:22.985+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:10:23.014+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:10:23.070+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:10:23.069+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:10:23.133+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:10:23.132+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:10:23.186+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.209 seconds
[2023-09-24T14:10:53.256+0000] {processor.py:157} INFO - Started process (PID=167) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:10:53.257+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:10:53.258+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:10:53.257+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:10:53.281+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:10:53.328+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:10:53.327+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:10:53.380+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:10:53.380+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:10:53.418+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T14:11:23.525+0000] {processor.py:157} INFO - Started process (PID=175) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:11:23.526+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:11:23.527+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:11:23.526+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:11:23.547+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:11:23.587+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:11:23.587+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:11:23.635+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:11:23.634+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:11:23.664+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T14:11:53.876+0000] {processor.py:157} INFO - Started process (PID=183) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:11:53.877+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:11:53.879+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:11:53.878+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:11:53.899+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:11:53.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:11:53.942+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:11:54.001+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:11:54.000+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:11:54.034+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.163 seconds
[2023-09-24T14:12:24.183+0000] {processor.py:157} INFO - Started process (PID=191) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:12:24.184+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:12:24.186+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:12:24.185+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:12:24.205+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:12:24.246+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:12:24.245+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:12:24.290+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:12:24.289+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:12:24.318+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.140 seconds
[2023-09-24T14:12:54.621+0000] {processor.py:157} INFO - Started process (PID=199) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:12:54.622+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:12:54.623+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:12:54.622+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:12:54.644+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:12:54.687+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:12:54.686+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:12:54.730+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:12:54.729+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:12:54.757+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T14:13:24.969+0000] {processor.py:157} INFO - Started process (PID=207) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:13:24.970+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:13:24.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:13:24.970+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:13:24.990+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:13:25.031+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:13:25.030+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:13:25.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:13:25.074+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:13:25.105+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.140 seconds
[2023-09-24T14:13:55.347+0000] {processor.py:157} INFO - Started process (PID=215) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:13:55.348+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:13:55.350+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:13:55.349+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:13:55.369+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:13:55.411+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:13:55.411+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:13:55.456+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:13:55.455+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:13:55.483+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T14:14:25.711+0000] {processor.py:157} INFO - Started process (PID=223) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:14:25.712+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:14:25.713+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:14:25.712+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:14:25.733+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:14:25.781+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:14:25.781+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:14:25.825+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:14:25.825+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:14:25.853+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T14:14:56.005+0000] {processor.py:157} INFO - Started process (PID=231) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:14:56.006+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:14:56.007+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:14:56.006+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:14:56.027+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:14:56.068+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:14:56.068+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:14:56.115+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:14:56.114+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:14:56.148+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T14:15:26.386+0000] {processor.py:157} INFO - Started process (PID=239) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:15:26.388+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:15:26.391+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:15:26.390+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:15:26.415+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:15:26.647+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:15:26.646+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T14:15:26.654+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:15:26.653+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:15:26.706+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:15:26.706+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:15:26.742+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.361 seconds
[2023-09-24T14:16:15.504+0000] {processor.py:157} INFO - Started process (PID=36) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:16:15.506+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:16:15.508+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:16:15.507+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:16:15.892+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:16:16.268+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:16:16.268+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T14:16:16.275+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:16:16.275+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:16:16.341+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:16:16.341+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:16:16.397+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.915 seconds
[2023-09-24T14:16:46.448+0000] {processor.py:157} INFO - Started process (PID=44) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:16:46.449+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:16:46.451+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:16:46.450+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:16:46.471+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:16:46.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:16:46.511+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:16:46.565+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:16:46.564+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:16:46.593+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T14:17:16.743+0000] {processor.py:157} INFO - Started process (PID=52) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:17:16.744+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:17:16.745+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:17:16.744+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:17:16.764+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:17:16.805+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:17:16.805+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:17:16.849+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:17:16.849+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:17:16.888+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T14:17:47.144+0000] {processor.py:157} INFO - Started process (PID=60) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:17:47.145+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:17:47.147+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:17:47.146+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:17:47.168+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:17:47.206+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:17:47.206+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:17:47.250+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:17:47.249+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:17:47.277+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.136 seconds
[2023-09-24T14:18:47.474+0000] {processor.py:157} INFO - Started process (PID=68) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:18:47.474+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:18:47.477+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:18:47.475+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:18:47.498+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:18:47.537+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:18:47.536+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:18:47.585+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:18:47.585+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:18:47.617+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T14:19:17.874+0000] {processor.py:157} INFO - Started process (PID=84) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:19:17.875+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:19:17.886+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:19:17.885+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:19:17.907+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:19:17.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:19:17.946+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:19:17.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:19:17.997+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:19:18.025+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T14:19:48.260+0000] {processor.py:157} INFO - Started process (PID=92) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:19:48.261+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:19:48.262+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:19:48.261+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:19:48.283+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:19:48.324+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:19:48.323+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:19:48.374+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:19:48.374+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:19:48.404+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T14:20:18.629+0000] {processor.py:157} INFO - Started process (PID=100) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:20:18.630+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:20:18.631+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:20:18.631+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:20:18.651+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:20:18.693+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:20:18.692+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:20:18.747+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:20:18.746+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:20:18.775+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T14:20:49.008+0000] {processor.py:157} INFO - Started process (PID=108) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:20:49.008+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:20:49.010+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:20:49.009+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:20:49.029+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:20:49.069+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:20:49.068+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:20:49.114+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:20:49.114+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:20:49.145+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T14:21:49.376+0000] {processor.py:157} INFO - Started process (PID=116) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:21:49.377+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:21:49.380+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:21:49.378+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:21:49.404+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:21:49.447+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:21:49.447+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:21:49.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:21:49.492+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:21:49.524+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T14:22:50.100+0000] {processor.py:157} INFO - Started process (PID=130) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:22:50.100+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:22:50.102+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:22:50.101+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:23:10.292+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:23:10.333+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:23:10.333+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:23:10.388+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:23:10.388+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:23:40.673+0000] {processor.py:157} INFO - Started process (PID=151) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:23:40.674+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:23:40.676+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:23:40.675+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:23:40.695+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:23:40.889+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:23:40.888+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T14:23:40.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:23:40.893+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:23:40.944+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:23:40.943+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:23:40.976+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.307 seconds
[2023-09-24T14:24:11.283+0000] {processor.py:157} INFO - Started process (PID=159) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:24:11.284+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:24:11.286+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:24:11.285+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:24:11.306+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:24:11.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:24:11.355+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:24:11.402+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:24:11.402+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:24:11.435+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T14:24:41.569+0000] {processor.py:157} INFO - Started process (PID=167) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:24:41.570+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:24:41.572+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:24:41.571+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:24:41.592+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:24:41.633+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:24:41.632+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:24:41.684+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:24:41.683+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:24:41.712+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T14:25:11.932+0000] {processor.py:157} INFO - Started process (PID=175) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:25:11.932+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:25:11.934+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:25:11.933+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:25:11.955+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:25:11.996+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:25:11.996+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:25:12.046+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:25:12.046+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:25:12.077+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T14:25:42.293+0000] {processor.py:157} INFO - Started process (PID=183) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:25:42.294+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:25:42.296+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:25:42.295+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:25:42.316+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:25:42.356+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:25:42.356+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:25:42.401+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:25:42.400+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:25:42.430+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T14:26:12.558+0000] {processor.py:157} INFO - Started process (PID=191) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:26:12.558+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:26:12.560+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:26:12.559+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:26:12.581+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:26:12.620+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:26:12.620+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:26:12.666+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:26:12.665+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:26:12.694+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T14:26:42.788+0000] {processor.py:157} INFO - Started process (PID=199) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:26:42.789+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:26:42.791+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:26:42.790+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:26:42.811+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:26:42.855+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:26:42.854+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:26:42.901+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:26:42.900+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:26:42.929+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T14:27:13.234+0000] {processor.py:157} INFO - Started process (PID=207) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:27:13.234+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:27:13.236+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:27:13.235+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:27:13.255+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:27:13.294+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:27:13.293+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:27:13.341+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:27:13.341+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:27:13.373+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T14:27:43.511+0000] {processor.py:157} INFO - Started process (PID=215) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:27:43.512+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:27:43.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:27:43.512+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:27:43.535+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:27:43.580+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:27:43.579+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:27:43.626+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:27:43.626+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:27:43.655+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T14:28:13.920+0000] {processor.py:157} INFO - Started process (PID=223) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:28:13.921+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:28:13.923+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:28:13.922+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:28:13.949+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:28:13.999+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:28:13.999+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:28:14.044+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:28:14.044+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:28:14.075+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.160 seconds
[2023-09-24T14:28:44.245+0000] {processor.py:157} INFO - Started process (PID=231) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:28:44.245+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:28:44.247+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:28:44.246+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:28:44.268+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:28:44.312+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:28:44.311+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:28:44.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:28:44.358+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:28:44.388+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T14:29:14.543+0000] {processor.py:157} INFO - Started process (PID=239) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:29:14.544+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:29:14.546+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:29:14.545+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:29:14.568+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:29:14.622+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:29:14.621+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:29:14.668+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:29:14.667+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:29:14.698+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.161 seconds
[2023-09-24T14:29:44.812+0000] {processor.py:157} INFO - Started process (PID=247) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:29:44.812+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:29:44.814+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:29:44.813+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:29:44.834+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:29:44.881+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:29:44.880+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:29:44.932+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:29:44.932+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:29:44.964+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T14:30:15.221+0000] {processor.py:157} INFO - Started process (PID=255) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:30:15.222+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:30:15.223+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:30:15.223+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:30:15.244+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:30:15.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:30:15.299+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:30:15.355+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:30:15.355+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:30:15.384+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T14:30:45.479+0000] {processor.py:157} INFO - Started process (PID=263) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:30:45.479+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:30:45.481+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:30:45.480+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:30:45.501+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:30:45.544+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:30:45.544+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:30:45.603+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:30:45.602+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:30:45.635+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.161 seconds
[2023-09-24T14:31:15.944+0000] {processor.py:157} INFO - Started process (PID=271) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:31:15.945+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:31:15.947+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:31:15.946+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:31:15.971+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:31:16.021+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:31:16.020+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:31:16.073+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:31:16.073+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:31:16.103+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T14:31:46.254+0000] {processor.py:157} INFO - Started process (PID=279) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:31:46.255+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:31:46.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:31:46.256+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:31:46.278+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:31:46.319+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:31:46.318+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:31:46.368+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:31:46.367+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:31:46.397+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T14:32:16.673+0000] {processor.py:157} INFO - Started process (PID=287) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:32:16.674+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:32:16.676+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:32:16.675+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:32:16.697+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:32:16.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:32:16.743+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:32:16.798+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:32:16.797+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:32:16.830+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.161 seconds
[2023-09-24T14:32:46.994+0000] {processor.py:157} INFO - Started process (PID=295) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:32:46.995+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:32:46.997+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:32:46.996+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:32:47.017+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:32:47.062+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:32:47.062+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:32:47.120+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:32:47.119+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:32:47.153+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.164 seconds
[2023-09-24T14:33:17.360+0000] {processor.py:157} INFO - Started process (PID=303) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:33:17.361+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:33:17.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:33:17.362+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:33:17.383+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:33:17.431+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:33:17.431+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:33:17.497+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:33:17.497+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:33:17.536+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.180 seconds
[2023-09-24T14:33:47.678+0000] {processor.py:157} INFO - Started process (PID=311) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:33:47.679+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:33:47.681+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:33:47.680+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:33:47.703+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:33:47.745+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:33:47.744+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:33:47.790+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:33:47.790+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:33:47.818+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T14:34:17.967+0000] {processor.py:157} INFO - Started process (PID=319) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:34:17.968+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:34:17.969+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:34:17.969+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:34:17.991+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:34:18.037+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:34:18.036+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:34:18.085+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:34:18.084+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:34:18.114+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T14:34:48.290+0000] {processor.py:157} INFO - Started process (PID=327) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:34:48.291+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:34:48.293+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:34:48.292+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:34:48.315+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:34:48.357+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:34:48.356+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:34:48.407+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:34:48.407+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:34:48.438+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T14:35:18.594+0000] {processor.py:157} INFO - Started process (PID=335) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:35:18.595+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:35:18.597+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:35:18.596+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:35:18.617+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:35:18.660+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:35:18.660+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:35:18.708+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:35:18.707+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:35:18.735+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T14:35:48.888+0000] {processor.py:157} INFO - Started process (PID=342) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:35:48.888+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:35:48.890+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:35:48.889+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:35:48.910+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:35:48.965+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:35:48.964+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:35:49.008+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:35:49.008+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:35:49.039+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T14:36:19.228+0000] {processor.py:157} INFO - Started process (PID=349) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:36:19.229+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:36:19.231+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:36:19.230+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:36:19.251+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:36:19.291+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:36:19.291+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:36:19.337+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:36:19.337+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:36:19.366+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T14:36:49.624+0000] {processor.py:157} INFO - Started process (PID=357) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:36:49.625+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:36:49.626+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:36:49.626+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:36:49.648+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:36:49.690+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:36:49.689+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:36:49.733+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:36:49.733+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:36:49.765+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T14:37:19.897+0000] {processor.py:157} INFO - Started process (PID=365) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:37:19.898+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:37:19.899+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:37:19.898+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:37:19.919+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:37:19.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:37:19.961+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:37:20.006+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:37:20.005+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:37:20.033+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T14:37:50.250+0000] {processor.py:157} INFO - Started process (PID=373) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:37:50.252+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:37:50.254+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:37:50.253+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:37:50.275+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:37:50.318+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:37:50.317+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:37:50.363+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:37:50.362+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:37:50.394+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T14:38:20.537+0000] {processor.py:157} INFO - Started process (PID=381) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:38:20.537+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:38:20.539+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:38:20.538+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:38:20.561+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:38:20.602+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:38:20.601+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:38:20.650+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:38:20.650+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:38:20.684+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T14:38:50.909+0000] {processor.py:157} INFO - Started process (PID=389) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:38:50.910+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:38:50.912+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:38:50.911+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:38:50.940+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:38:50.980+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:38:50.980+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:38:51.028+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:38:51.027+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:38:51.061+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T14:39:21.234+0000] {processor.py:157} INFO - Started process (PID=397) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:39:21.235+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:39:21.236+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:39:21.235+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:39:21.257+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:39:21.299+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:39:21.299+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:39:21.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:39:21.347+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:39:21.379+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T14:39:51.650+0000] {processor.py:157} INFO - Started process (PID=405) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:39:51.651+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:39:51.653+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:39:51.652+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:39:51.673+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:39:51.713+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:39:51.712+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:39:51.760+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:39:51.759+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:39:51.790+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T14:40:21.947+0000] {processor.py:157} INFO - Started process (PID=413) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:40:21.948+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:40:21.951+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:40:21.949+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:40:21.975+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:40:22.022+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:40:22.021+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:40:22.079+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:40:22.078+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:40:22.108+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.166 seconds
[2023-09-24T14:40:52.272+0000] {processor.py:157} INFO - Started process (PID=421) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:40:52.272+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:40:52.274+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:40:52.273+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:40:52.294+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:40:52.333+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:40:52.333+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:40:52.381+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:40:52.381+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:40:52.410+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T14:41:22.656+0000] {processor.py:157} INFO - Started process (PID=429) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:41:22.657+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:41:22.659+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:41:22.658+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:41:22.681+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:41:22.724+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:41:22.723+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:41:22.772+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:41:22.772+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:41:22.804+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T14:41:52.966+0000] {processor.py:157} INFO - Started process (PID=437) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:41:52.967+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:41:52.969+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:41:52.968+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:41:52.989+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:41:53.030+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:41:53.029+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:41:53.076+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:41:53.076+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:41:53.105+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T14:42:23.295+0000] {processor.py:157} INFO - Started process (PID=445) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:42:23.295+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:42:23.297+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:42:23.296+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:42:23.317+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:42:23.358+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:42:23.357+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:42:23.414+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:42:23.414+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:42:23.447+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T14:42:53.602+0000] {processor.py:157} INFO - Started process (PID=453) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:42:53.603+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:42:53.605+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:42:53.604+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:42:53.625+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:42:53.673+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:42:53.672+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:42:53.717+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:42:53.717+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:42:53.747+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T14:43:23.948+0000] {processor.py:157} INFO - Started process (PID=461) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:43:23.949+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:43:23.950+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:43:23.949+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:43:23.972+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:43:24.018+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:43:24.017+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:43:24.079+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:43:24.078+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:43:24.107+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.165 seconds
[2023-09-24T14:43:54.178+0000] {processor.py:157} INFO - Started process (PID=469) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:43:54.179+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:43:54.180+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:43:54.180+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:43:54.201+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:43:54.246+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:43:54.245+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:43:54.294+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:43:54.293+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:43:54.322+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T14:44:24.449+0000] {processor.py:157} INFO - Started process (PID=477) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:44:24.450+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:44:24.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:44:24.450+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:44:24.473+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:44:24.513+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:44:24.513+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:44:24.564+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:44:24.563+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:44:24.594+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T14:44:54.831+0000] {processor.py:157} INFO - Started process (PID=485) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:44:54.831+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:44:54.833+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:44:54.832+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:44:54.854+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:44:54.904+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:44:54.903+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:44:54.953+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:44:54.953+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:44:54.985+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.159 seconds
[2023-09-24T14:45:25.105+0000] {processor.py:157} INFO - Started process (PID=493) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:45:25.106+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:45:25.107+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:45:25.107+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:45:25.127+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:45:25.171+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:45:25.170+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:45:25.219+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:45:25.219+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:45:25.250+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T14:45:55.519+0000] {processor.py:157} INFO - Started process (PID=501) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:45:55.520+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:45:55.521+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:45:55.521+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:45:55.550+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:45:55.591+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:45:55.591+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:45:55.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:45:55.639+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:45:55.669+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T14:46:25.743+0000] {processor.py:157} INFO - Started process (PID=509) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:46:25.744+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:46:25.745+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:46:25.744+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:46:25.765+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:46:25.809+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:46:25.808+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:46:25.854+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:46:25.854+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:46:25.888+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T14:46:56.132+0000] {processor.py:157} INFO - Started process (PID=517) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:46:56.133+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:46:56.135+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:46:56.134+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:46:56.157+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:46:56.207+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:46:56.206+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:46:56.255+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:46:56.254+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:46:56.287+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.160 seconds
[2023-09-24T14:47:26.340+0000] {processor.py:157} INFO - Started process (PID=525) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:47:26.341+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:47:26.343+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:47:26.342+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:47:26.362+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:47:26.403+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:47:26.402+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:47:26.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:47:26.452+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:47:26.483+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T14:47:56.568+0000] {processor.py:157} INFO - Started process (PID=533) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:47:56.569+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:47:56.570+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:47:56.569+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:47:56.590+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:47:56.632+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:47:56.631+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:47:56.682+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:47:56.682+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:47:56.712+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T14:48:26.940+0000] {processor.py:157} INFO - Started process (PID=541) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:48:26.941+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:48:26.943+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:48:26.942+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:48:26.964+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:48:27.006+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:48:27.005+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:48:27.051+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:48:27.051+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:48:27.081+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T14:48:57.172+0000] {processor.py:157} INFO - Started process (PID=549) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:48:57.173+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:48:57.175+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:48:57.173+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:48:57.199+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:48:57.253+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:48:57.253+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:48:57.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:48:57.298+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:48:57.327+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.160 seconds
[2023-09-24T14:49:27.434+0000] {processor.py:157} INFO - Started process (PID=557) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:49:27.435+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:49:27.437+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:49:27.436+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:49:27.458+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:49:27.499+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:49:27.499+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:49:27.547+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:49:27.546+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:49:27.577+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T14:49:57.818+0000] {processor.py:157} INFO - Started process (PID=565) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:49:57.819+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:49:57.820+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:49:57.819+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:49:57.843+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:49:57.883+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:49:57.882+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:49:57.931+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:49:57.931+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:49:57.966+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T14:50:28.015+0000] {processor.py:157} INFO - Started process (PID=572) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:50:28.016+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:50:28.017+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:50:28.016+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:50:28.037+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:50:28.083+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:50:28.083+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:50:28.134+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:50:28.134+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:50:28.167+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.157 seconds
[2023-09-24T14:50:58.331+0000] {processor.py:157} INFO - Started process (PID=580) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:50:58.331+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:50:58.333+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:50:58.332+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:50:58.357+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:50:58.402+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:50:58.401+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:50:58.454+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:50:58.453+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:50:58.483+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T14:51:28.795+0000] {processor.py:157} INFO - Started process (PID=588) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:51:28.796+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:51:28.799+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:51:28.798+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:51:28.818+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:51:28.858+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:51:28.858+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:51:28.908+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:51:28.907+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:51:28.939+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T14:51:59.008+0000] {processor.py:157} INFO - Started process (PID=596) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:51:59.009+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:51:59.011+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:51:59.010+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:51:59.032+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:51:59.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:51:59.075+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:51:59.121+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:51:59.121+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:51:59.152+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T14:52:29.409+0000] {processor.py:157} INFO - Started process (PID=604) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:52:29.410+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:52:29.411+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:52:29.410+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:52:29.431+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:52:29.474+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:52:29.474+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:52:29.519+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:52:29.519+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:52:29.548+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T14:52:59.627+0000] {processor.py:157} INFO - Started process (PID=612) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:52:59.628+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:52:59.630+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:52:59.629+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:52:59.657+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:52:59.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:52:59.696+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:52:59.745+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:52:59.745+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:52:59.773+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T14:53:29.963+0000] {processor.py:157} INFO - Started process (PID=620) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:53:29.963+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:53:29.965+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:53:29.964+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:53:29.985+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:53:30.024+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:53:30.024+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:53:30.071+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:53:30.070+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:53:30.099+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T14:54:00.188+0000] {processor.py:157} INFO - Started process (PID=628) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:54:00.189+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:54:00.191+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:54:00.190+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:54:00.210+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:54:00.252+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:54:00.252+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:54:00.297+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:54:00.297+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:54:00.329+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T14:54:30.614+0000] {processor.py:157} INFO - Started process (PID=636) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:54:30.615+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:54:30.616+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:54:30.616+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:54:30.637+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:54:30.680+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:54:30.680+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:54:30.731+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:54:30.730+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:54:30.762+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T14:55:00.901+0000] {processor.py:157} INFO - Started process (PID=644) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:55:00.901+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:55:00.903+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:55:00.902+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:55:00.925+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:55:00.967+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:55:00.966+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:55:01.012+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:55:01.012+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:55:01.042+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.146 seconds
[2023-09-24T14:55:31.227+0000] {processor.py:157} INFO - Started process (PID=652) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:55:31.229+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:55:31.231+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:55:31.230+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:55:31.258+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:55:31.298+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:55:31.298+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:55:31.345+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:55:31.345+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:55:31.374+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.155 seconds
[2023-09-24T14:56:01.635+0000] {processor.py:157} INFO - Started process (PID=660) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:56:01.636+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:56:01.637+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:56:01.636+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:56:01.656+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:56:01.696+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:56:01.695+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:56:01.742+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:56:01.742+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:56:01.770+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T14:56:31.996+0000] {processor.py:157} INFO - Started process (PID=668) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:56:31.997+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:56:31.999+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:56:31.998+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:56:32.019+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:56:32.060+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:56:32.060+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:56:32.117+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:56:32.116+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:56:32.147+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T14:57:02.312+0000] {processor.py:157} INFO - Started process (PID=676) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:57:02.313+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:57:02.315+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:57:02.314+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:57:02.334+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:57:02.374+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:57:02.373+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:57:02.418+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:57:02.418+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:57:02.450+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.144 seconds
[2023-09-24T14:57:32.738+0000] {processor.py:157} INFO - Started process (PID=684) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:57:32.738+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:57:32.740+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:57:32.739+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:57:32.760+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:57:32.799+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:57:32.798+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:57:32.844+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:57:32.844+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:57:32.872+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.138 seconds
[2023-09-24T14:58:02.978+0000] {processor.py:157} INFO - Started process (PID=692) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:58:02.979+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:58:02.980+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:58:02.979+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:58:02.999+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:58:03.038+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:58:03.038+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:58:03.081+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:58:03.080+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:58:03.109+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.136 seconds
[2023-09-24T14:58:33.403+0000] {processor.py:157} INFO - Started process (PID=700) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:58:33.404+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:58:33.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:58:33.404+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:58:33.425+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:58:33.464+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:58:33.464+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:58:33.507+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:58:33.506+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:58:33.537+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.138 seconds
[2023-09-24T14:59:03.791+0000] {processor.py:157} INFO - Started process (PID=708) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:59:03.791+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:59:03.793+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:59:03.792+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:59:03.815+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:59:03.857+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:59:03.857+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:59:03.905+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:59:03.905+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:59:03.933+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T14:59:34.238+0000] {processor.py:157} INFO - Started process (PID=716) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:59:34.239+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T14:59:34.241+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:59:34.239+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:59:34.279+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T14:59:34.325+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:59:34.324+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T14:59:34.373+0000] {logging_mixin.py:151} INFO - [2023-09-24T14:59:34.372+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T14:59:34.404+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.171 seconds
[2023-09-24T15:00:04.542+0000] {processor.py:157} INFO - Started process (PID=724) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:00:04.543+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:00:04.544+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:00:04.543+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:00:04.564+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:00:04.605+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:00:04.604+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:00:04.650+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:00:04.650+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:00:04.679+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T15:00:34.918+0000] {processor.py:157} INFO - Started process (PID=732) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:00:34.919+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:00:34.920+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:00:34.919+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:00:34.941+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:00:34.982+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:00:34.982+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:00:35.037+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:00:35.037+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:00:35.076+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.162 seconds
[2023-09-24T15:01:05.278+0000] {processor.py:157} INFO - Started process (PID=740) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:01:05.278+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:01:05.280+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:01:05.279+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:01:05.305+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:01:05.350+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:01:05.350+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:01:05.401+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:01:05.401+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:01:05.436+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.163 seconds
[2023-09-24T15:01:35.651+0000] {processor.py:157} INFO - Started process (PID=748) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:01:35.652+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:01:35.654+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:01:35.653+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:01:35.674+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:01:35.715+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:01:35.715+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:01:35.768+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:01:35.767+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:01:35.799+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T15:02:05.911+0000] {processor.py:157} INFO - Started process (PID=756) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:02:05.912+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:02:05.914+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:02:05.913+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:02:05.934+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:02:05.975+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:02:05.975+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:02:06.021+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:02:06.021+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:02:06.050+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T15:02:36.287+0000] {processor.py:157} INFO - Started process (PID=764) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:02:36.288+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:02:36.289+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:02:36.289+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:02:36.311+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:02:36.357+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:02:36.356+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:02:36.409+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:02:36.408+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:02:36.437+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.154 seconds
[2023-09-24T15:03:06.578+0000] {processor.py:157} INFO - Started process (PID=772) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:03:06.579+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:03:06.581+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:03:06.579+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:03:06.601+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:03:06.642+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:03:06.641+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:03:06.685+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:03:06.685+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:03:06.715+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T15:03:37.040+0000] {processor.py:157} INFO - Started process (PID=780) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:03:37.041+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:03:37.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:03:37.042+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:03:37.063+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:03:37.113+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:03:37.112+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:03:37.158+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:03:37.157+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:03:37.192+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.156 seconds
[2023-09-24T15:04:07.353+0000] {processor.py:157} INFO - Started process (PID=788) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:04:07.353+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:04:07.355+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:04:07.354+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:04:07.376+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:04:07.416+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:04:07.416+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:04:07.460+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:04:07.460+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:04:07.489+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T15:04:37.672+0000] {processor.py:157} INFO - Started process (PID=796) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:04:37.673+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:04:37.675+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:04:37.674+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:04:37.694+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:04:37.735+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:04:37.735+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:04:37.781+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:04:37.780+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:04:37.809+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T15:05:08.010+0000] {processor.py:157} INFO - Started process (PID=804) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:05:08.011+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:05:08.014+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:05:08.013+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:05:08.034+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:05:08.077+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:05:08.076+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:05:08.123+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:05:08.122+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:05:08.151+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T15:05:38.347+0000] {processor.py:157} INFO - Started process (PID=811) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:05:38.348+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:05:38.350+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:05:38.349+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:05:38.370+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:05:38.416+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:05:38.415+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:05:38.461+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:05:38.460+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:05:38.491+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T15:06:08.785+0000] {processor.py:157} INFO - Started process (PID=819) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:06:08.788+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:06:08.791+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:06:08.790+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:06:08.821+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:06:08.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:06:08.880+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:06:08.937+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:06:08.936+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:06:08.981+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.203 seconds
[2023-09-24T15:06:39.036+0000] {processor.py:157} INFO - Started process (PID=827) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:06:39.037+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:06:39.039+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:06:39.037+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:06:39.059+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:06:39.099+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:06:39.098+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:06:39.147+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:06:39.146+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:06:39.176+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.144 seconds
[2023-09-24T15:07:09.367+0000] {processor.py:157} INFO - Started process (PID=835) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:07:09.368+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:07:09.369+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:07:09.368+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:07:09.390+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:07:09.430+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:07:09.430+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:07:09.480+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:07:09.479+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:07:09.510+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
[2023-09-24T15:07:39.633+0000] {processor.py:157} INFO - Started process (PID=843) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:07:39.634+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:07:39.636+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:07:39.635+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:07:39.656+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:07:39.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:07:39.696+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:07:39.743+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:07:39.742+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:07:39.777+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.149 seconds
[2023-09-24T15:08:09.967+0000] {processor.py:157} INFO - Started process (PID=851) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:08:09.968+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:08:09.970+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:08:09.968+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:08:09.991+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:08:10.033+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:08:10.032+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:08:10.083+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:08:10.082+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:08:10.114+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T15:08:40.196+0000] {processor.py:157} INFO - Started process (PID=859) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:08:40.197+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:08:40.198+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:08:40.197+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:08:40.218+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:08:40.260+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:08:40.259+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:08:40.306+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:08:40.306+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:08:40.335+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T15:09:10.588+0000] {processor.py:157} INFO - Started process (PID=867) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:09:10.589+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:09:10.591+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:09:10.590+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:09:10.613+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:09:10.658+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:09:10.657+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:09:10.703+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:09:10.702+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:09:10.736+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T15:09:40.821+0000] {processor.py:157} INFO - Started process (PID=875) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:09:40.822+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:09:40.824+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:09:40.823+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:09:40.847+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:09:40.888+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:09:40.887+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:09:40.933+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:09:40.932+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:09:40.962+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.148 seconds
[2023-09-24T15:10:11.165+0000] {processor.py:157} INFO - Started process (PID=883) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:10:11.166+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:10:11.168+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:10:11.167+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:10:11.192+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:10:11.237+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:10:11.237+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:10:11.294+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:10:11.294+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:10:11.327+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.167 seconds
[2023-09-24T15:10:41.435+0000] {processor.py:157} INFO - Started process (PID=891) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:10:41.436+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:10:41.437+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:10:41.436+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:10:41.459+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:10:41.500+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:10:41.499+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:10:41.545+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:10:41.545+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:10:41.575+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.144 seconds
[2023-09-24T15:11:11.708+0000] {processor.py:157} INFO - Started process (PID=899) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:11:11.710+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:11:11.711+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:11:11.710+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:11:11.731+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:11:11.777+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:11:11.776+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:11:11.832+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:11:11.831+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:11:11.862+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.158 seconds
[2023-09-24T15:11:42.151+0000] {processor.py:157} INFO - Started process (PID=907) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:11:42.152+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:11:42.153+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:11:42.152+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:11:42.173+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:11:42.212+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:11:42.212+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:11:42.257+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:11:42.256+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:11:42.285+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.139 seconds
[2023-09-24T15:12:12.491+0000] {processor.py:157} INFO - Started process (PID=915) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:12:12.492+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:12:12.493+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:12:12.492+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:12:12.513+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:12:12.554+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:12:12.553+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:12:12.605+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:12:12.604+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:12:12.636+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.150 seconds
[2023-09-24T15:12:42.965+0000] {processor.py:157} INFO - Started process (PID=923) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:12:42.965+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:12:42.967+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:12:42.966+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:12:42.986+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:12:43.027+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:12:43.027+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:12:43.075+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:12:43.075+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:12:43.104+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.143 seconds
[2023-09-24T15:13:13.273+0000] {processor.py:157} INFO - Started process (PID=931) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:13:13.274+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:13:13.275+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:13:13.275+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:13:13.296+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:13:13.337+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:13:13.336+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:13:13.384+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:13:13.384+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:13:13.413+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.145 seconds
[2023-09-24T15:13:43.760+0000] {processor.py:157} INFO - Started process (PID=939) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:13:43.761+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:13:43.763+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:13:43.762+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:13:43.782+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:13:43.821+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:13:43.821+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:13:43.867+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:13:43.866+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:13:43.896+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.140 seconds
[2023-09-24T15:14:14.080+0000] {processor.py:157} INFO - Started process (PID=947) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:14:14.081+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:14:14.083+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:14:14.082+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:14:14.111+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:14:14.157+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:14:14.156+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:14:14.203+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:14:14.203+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:14:14.233+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.159 seconds
[2023-09-24T15:14:44.367+0000] {processor.py:157} INFO - Started process (PID=955) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:14:44.370+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:14:44.372+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:14:44.371+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:14:44.400+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:14:44.454+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:14:44.453+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:14:44.510+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:14:44.510+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:14:44.542+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.180 seconds
[2023-09-24T15:15:14.711+0000] {processor.py:157} INFO - Started process (PID=963) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:15:14.711+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:15:14.713+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:15:14.712+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:15:14.734+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:15:14.775+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:15:14.774+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:15:14.826+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:15:14.825+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:15:14.858+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T15:15:44.925+0000] {processor.py:157} INFO - Started process (PID=971) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:15:44.926+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:15:44.927+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:15:44.926+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:15:44.947+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:15:44.988+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:15:44.987+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:15:45.043+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:15:45.042+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:15:45.073+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T15:16:15.178+0000] {processor.py:157} INFO - Started process (PID=979) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:16:15.178+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:16:15.180+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:16:15.179+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:16:15.199+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:16:15.240+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:16:15.239+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:16:15.288+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:16:15.287+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:16:15.317+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.144 seconds
[2023-09-24T15:16:45.650+0000] {processor.py:157} INFO - Started process (PID=987) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:16:45.651+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:16:45.652+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:16:45.652+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:16:45.674+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:16:45.713+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:16:45.713+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:16:45.758+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:16:45.757+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:16:45.787+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T15:17:15.906+0000] {processor.py:157} INFO - Started process (PID=995) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:17:15.907+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:17:15.908+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:17:15.907+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:17:15.928+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:17:15.971+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:17:15.970+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:17:16.023+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:17:16.022+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:17:16.052+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.151 seconds
[2023-09-24T15:17:46.329+0000] {processor.py:157} INFO - Started process (PID=1003) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:17:46.329+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:17:46.331+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:17:46.330+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:17:46.351+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:17:46.393+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:17:46.392+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:17:46.442+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:17:46.442+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:17:46.478+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.152 seconds
[2023-09-24T15:18:16.576+0000] {processor.py:157} INFO - Started process (PID=1011) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:18:16.578+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:18:16.579+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:18:16.578+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:18:16.599+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:18:16.639+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:18:16.638+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:18:16.683+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:18:16.682+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:18:16.710+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.138 seconds
[2023-09-24T15:18:46.783+0000] {processor.py:157} INFO - Started process (PID=1019) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:18:46.784+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:18:46.786+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:18:46.785+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:18:46.806+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:18:46.846+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:18:46.845+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:18:46.894+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:18:46.894+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:18:46.937+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.159 seconds
[2023-09-24T15:19:17.159+0000] {processor.py:157} INFO - Started process (PID=1027) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:19:17.160+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:19:17.161+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:19:17.160+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:19:17.180+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:19:17.220+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:19:17.219+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:19:17.264+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:19:17.264+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:19:17.292+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.137 seconds
[2023-09-24T15:19:47.382+0000] {processor.py:157} INFO - Started process (PID=1035) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:19:47.382+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:19:47.384+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:19:47.383+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:19:47.404+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:19:47.445+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:19:47.444+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:19:47.489+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:19:47.489+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:19:47.519+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.141 seconds
[2023-09-24T15:20:17.652+0000] {processor.py:157} INFO - Started process (PID=1043) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:20:17.653+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:20:17.655+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:20:17.653+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:20:17.678+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:20:17.864+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:20:17.863+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T15:20:17.869+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:20:17.868+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:20:17.911+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:20:17.911+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:20:17.942+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.294 seconds
[2023-09-24T15:20:54.281+0000] {processor.py:157} INFO - Started process (PID=30) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:20:54.286+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:20:54.288+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:20:54.287+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:20:54.668+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:20:55.025+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:20:55.025+0000] {security.py:708} INFO - Not syncing DAG-level permissions for DAG 'DAG:example_bash_operator' as access control is unset.
[2023-09-24T15:20:55.031+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:20:55.031+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:20:55.097+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:20:55.097+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:20:55.143+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.871 seconds
[2023-09-24T15:21:25.436+0000] {processor.py:157} INFO - Started process (PID=38) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:21:25.437+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:21:25.439+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:21:25.438+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:21:25.458+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:21:25.500+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:21:25.500+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:21:25.546+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:21:25.545+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:21:25.574+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T15:21:55.726+0000] {processor.py:157} INFO - Started process (PID=46) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:21:55.726+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:21:55.728+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:21:55.727+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:21:55.747+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:21:55.792+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:21:55.791+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:21:55.842+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:21:55.841+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:21:55.874+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.153 seconds
[2023-09-24T15:22:25.959+0000] {processor.py:157} INFO - Started process (PID=54) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:22:25.960+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:22:25.961+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:22:25.960+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:22:25.983+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:22:26.026+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:22:26.025+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:22:26.070+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:22:26.070+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:22:26.098+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.144 seconds
[2023-09-24T15:22:56.197+0000] {processor.py:157} INFO - Started process (PID=62) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:22:56.197+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:22:56.199+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:22:56.198+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:22:56.229+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:22:56.275+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:22:56.275+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:22:56.323+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:22:56.322+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:22:56.351+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.159 seconds
[2023-09-24T15:23:26.392+0000] {processor.py:157} INFO - Started process (PID=70) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:23:26.394+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:23:26.398+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:23:26.395+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:23:26.448+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:23:26.511+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:23:26.510+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:23:26.568+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:23:26.568+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:23:26.600+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.215 seconds
[2023-09-24T15:23:56.773+0000] {processor.py:157} INFO - Started process (PID=78) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:23:56.774+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:23:56.775+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:23:56.774+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:23:56.795+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:23:56.835+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:23:56.835+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:23:56.880+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:23:56.880+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:23:56.911+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.142 seconds
[2023-09-24T15:24:27.303+0000] {processor.py:157} INFO - Started process (PID=93) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:24:27.343+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:24:27.347+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:24:27.345+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:24:27.366+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:24:27.405+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:24:27.404+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:24:27.452+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:24:27.451+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:24:27.480+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.181 seconds
[2023-09-24T15:24:57.583+0000] {processor.py:157} INFO - Started process (PID=101) to work on /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:24:57.583+0000] {processor.py:829} INFO - Processing file /opt/airflow/dags/example_bashoperator.py for tasks to queue
[2023-09-24T15:24:57.585+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:24:57.584+0000] {dagbag.py:539} INFO - Filling up the DagBag from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:24:57.608+0000] {processor.py:839} INFO - DAG(s) dict_keys(['example_bash_operator']) retrieved from /opt/airflow/dags/example_bashoperator.py
[2023-09-24T15:24:57.652+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:24:57.651+0000] {dag.py:2915} INFO - Sync 1 DAGs
[2023-09-24T15:24:57.697+0000] {logging_mixin.py:151} INFO - [2023-09-24T15:24:57.696+0000] {dag.py:3696} INFO - Setting next_dagrun for example_bash_operator to 2023-09-24T00:00:00+00:00, run_after=2023-09-25T00:00:00+00:00
[2023-09-24T15:24:57.725+0000] {processor.py:179} INFO - Processing /opt/airflow/dags/example_bashoperator.py took 0.147 seconds
